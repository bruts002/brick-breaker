{"version":3,"sources":["file:///app.bundle.js","file:///C:\\Users\\Michael.Brutskiy\\Desktop\\tsproj\\brick-breaker\\src\\GameBoard\\Entity.ts","file:///C:\\Users\\Michael.Brutskiy\\Desktop\\tsproj\\brick-breaker\\src\\interfaces\\PlayerTypes.ts","file:///C:\\Users\\Michael.Brutskiy\\Desktop\\tsproj\\brick-breaker\\src\\Loader.ts","file:///C:\\Users\\Michael.Brutskiy\\Desktop\\tsproj\\brick-breaker\\src\\GameBoard\\Constants.ts","file:///C:\\Users\\Michael.Brutskiy\\Desktop\\tsproj\\brick-breaker\\src\\UserScore\\UserScore.ts","file:///C:\\Users\\Michael.Brutskiy\\Desktop\\tsproj\\brick-breaker\\src\\GameBoard\\Paddle.ts","file:///C:\\Users\\Michael.Brutskiy\\Desktop\\tsproj\\brick-breaker\\src\\GameBoard\\Guy.ts","file:///C:\\Users\\Michael.Brutskiy\\Desktop\\tsproj\\brick-breaker\\src\\GameBoard\\CollisionUtil.ts","file:///C:\\Users\\Michael.Brutskiy\\Desktop\\tsproj\\brick-breaker\\src\\Modal.ts","file:///C:\\Users\\Michael.Brutskiy\\Desktop\\tsproj\\brick-breaker\\src\\index.ts","file:///C:\\Users\\Michael.Brutskiy\\Desktop\\tsproj\\brick-breaker\\src\\GameBoard\\GameBoard.ts","file:///C:\\Users\\Michael.Brutskiy\\Desktop\\tsproj\\brick-breaker\\src\\GameBoard\\Ball.ts","file:///C:\\Users\\Michael.Brutskiy\\Desktop\\tsproj\\brick-breaker\\src\\GameBoard\\Trajectory.ts","file:///C:\\Users\\Michael.Brutskiy\\Desktop\\tsproj\\brick-breaker\\src\\GameBoard\\Block.ts","file:///C:\\Users\\Michael.Brutskiy\\Desktop\\tsproj\\brick-breaker\\src\\GameBoard\\AI.ts","file:///C:\\Users\\Michael.Brutskiy\\Desktop\\tsproj\\brick-breaker\\src\\interfaces\\Reward.ts","file:///C:\\Users\\Michael.Brutskiy\\Desktop\\tsproj\\brick-breaker\\src\\GameBoard\\Bullet.ts","file:///C:\\Users\\Michael.Brutskiy\\Desktop\\tsproj\\brick-breaker\\src\\GameBoard\\StatusBar\\StatusBar.ts","file:///C:\\Users\\Michael.Brutskiy\\Desktop\\tsproj\\brick-breaker\\src\\GameBoard\\Reward.ts","file:///C:\\Users\\Michael.Brutskiy\\Desktop\\tsproj\\brick-breaker\\src\\LevelSelector\\LevelSelector.ts","file:///C:\\Users\\Michael.Brutskiy\\Desktop\\tsproj\\brick-breaker\\src\\LevelSelector\\LevelThumbNails.ts","file:///C:\\Users\\Michael.Brutskiy\\Desktop\\tsproj\\brick-breaker\\src\\LevelSelector\\levels\\AllLevels.ts","file:///C:\\Users\\Michael.Brutskiy\\Desktop\\tsproj\\brick-breaker\\src\\LevelSelector\\Overview.ts"],"names":["webpackJsonp","module","exports","__webpack_require__","Object","defineProperty","value","Constants_1","Trajectory_1","Entity","point","size","traj","type","mountNode","attributes","_this","this","domElement","document","createElementNS","SVGNAMESPACE","setAttribute","String","x","y","default","radius","width","height","undefined","keys","forEach","key","appendChild","prototype","destroy","removeChild","updateDOMPosition","newPoint","xAttr","yAttr","updateSize","getTraj","invertTraj","axis","invert","getNextPosition","getPoint","getSize","getRadius","PlayerTypes","Load","css","file","loadedCss","has","add","options","method","headers","Content-Type","fetch","then","resp","text","attachToDocument","styleTag","createElement","style","createTextNode","head","level","loadedLevels","serveFromCache","pendingLevels","get","promise","json","toLevel","levelI","saveLevel","set","delete","Promise","resolve","Set","Map","getKey","setScore","playerType","score","levelKey","raw","localStorage","getItem","data","JSON","parse","setItem","stringify","_a","getScore","info","defender","capture","Math","max","PlayerTypes_1","__extends","extendStatics","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__","constructor","create","Entity_1","Reward_1","Paddle","_super","boardSize","paddleConfig","emitBullet","call","position","defaults","sheild","opacity","moveAmount","moveLeft","nxtLeft","nextLeft","maxMove","moveRight","nxtRight","nextRight","applyReward","rewardType","wide","makeWide","makeDefault","updateColor","getColor","strength","activateSheld","useReward","machine","shootMachine","rocket","shootRocket","start","sizes","moveUp","moveDown","fill","stroke","stroke-width","Guy","guyConfig","hitCount","speed","grow","MAX_WIDTH","MAX_HEIGHT","getHit","str","reward","setIndex","index","hitsIt","pointX","blockStart","val","isCollision","p1","p2","p2Size","isNear","circlePoint","blockPoint","blockSize","blockDist","getDistance","distX","distY","sqrt","Loader_1","Modal","showClose","mdl","content","extensionPoint","innerHTML","attachCloseButton","display","body","clsBtn","addEventListener","closeButton","bind","show","message","cb","hide","classList","remove","GameBoard_1","LevelSelector_1","Main","levelSelector","setLevel","levelNumber","option","clearLevel","gameBoard","init","getElementById","Ball_1","Block_1","AI_1","Paddle_1","Guy_1","Bullet_1","CollisionUtil_1","Modal_1","UserScore_1","StatusBar_1","GameBoard","activeKeys","modal","balls","bullets","rewards","levelEnded","statusBar","rewardSelect","player","renderedBlocks","renderBlocks","blocks","renderBalls","buildPlayerAndAI","paddle","guy","globalKeyListener","buildPaddle","buildGuy","ai","removeEventListener","hasChildNodes","lastChild","attachKeyListeners","updateInterval","setInterval","update","isPaused","removeKeyListeners","keyUpDownHandler","createBullet","push","buildBall","ballConfig","map","renderBlock","block","dropReward","destroyBlock","splice","getBlock","some","i","Boolean","getGuy","guyPoint","guySize","endGame","success","clearInterval","stop","isGameEnded","msg","done","length","updateBalls","updateBullets","updateRewards","dispatchActions","updateAI","updateScore","what","addReward","toDelete","offset","nxtPos","paddlePos","paddleSize","idx","bulletsToDelete","bullet","blockStrength","bulletStrength","curPos","hitBlockX","hitBlockY","getSpeed","indexSpeed","isDestroyed","getStrength","ballsToDelete","ball","candidatPoint","e","isKeyDown","keyCode","pauseGame","onKeyLeft","onKeyRight","onKeyUp","onKeyDown","onSpaceBar","makeMove","Ball","trajectory","Trajectory","abs","hyp","hypot","Block","config","getBlockColor","makePaddleMove","likelyToFallFirst","a","aTraj","bTraj","aY","bY","catchable","entity","dropPoint","getEntityDropPoint","isLeft","isRight","movesTillDrop","getMovesTillDrop","nearestPaddlePoint","distance","entitiesToGoFor","filter","sort","movePaddleToEntity","entities","paddleHeight","onlyOneLeft","nxtPoint","nxtNxtPoint","canAndShouldMoveLeft","canAndShouldMoveRight","candidate","current","boardHeight","movesTillHit","xCoord","xOverFlow","Reward","Bullet","sign","StatusBar","levelName","getInnerHTML","querySelector","ID","SCORE","REWARDS","removeSelection","selected","SELECTED","id","node","onclick","LevelThumbNails_1","Overview_1","LevelSelector","levelThumbNails","levelSelect","overview","startLevel","defenderScore","captureScore","defaultMessage","catch","console","warn","AllLevels_1","LevelThumbNails","levelSelectCB","domNode","attachLevelNodes","prevLevelComplete","levelNode","levelScore","levelComplete","minScore","thumbNailSrc","prev","src","levelTemplate","AllLevels","Overview","template","getElementsByTagName","defenderHighScore","DEFENDER","captureHighScore","CAPTURE","defenderOption","getElementsByClassName","captureOption","startButton","START","addEventListeners","setOption","details"],"mappings":"AAAAA,cAAc,IAER,SAAUC,EAAQC,EAASC,GAEjC,YAEAC,QAAOC,eAAeH,EAAS,cAAgBI,OAAO,GCNtD,IAAAC,GAAAJ,EAAA,GAGAK,EAAAL,EAAA,IAEAM,EAAA,WAUI,QAAAA,GACIC,EACAC,EACAC,EACAC,EACAC,EACAC,GANJ,GAAAC,GAAAC,IAQIA,MAAKC,WAAaC,SAASC,gBAAiBb,EAAAc,aAAcR,GAC1DI,KAAKJ,KAAOA,EACZI,KAAKP,MAAQA,EACbO,KAAKC,WAAWI,aAAc,IAAKC,OAAQN,KAAKP,MAAMc,IACtDP,KAAKC,WAAWI,aAAc,IAAKC,OAAQN,KAAKP,MAAMe,IACtDR,KAAKL,KAAO,GAAIJ,GAAAkB,QAAYd,GACT,WAAdK,KAAKJ,MACNI,KAAKU,QAAUhB,EACfM,KAAKC,WAAWI,aAAc,IAAKC,OAAQN,KAAKU,WAEhDV,KAAKN,KAAaA,EAClBM,KAAKC,WAAWI,aAAc,QAASC,OAAQN,KAAKN,KAAKiB,QACzDX,KAAKC,WAAWI,aAAc,SAAUC,OAAQN,KAAKN,KAAKkB,cAE1CC,KAAff,GACDX,OAAO2B,KAAKhB,GAAYiB,QAAS,SAAAC,GAC7B,MAAAjB,GAAKE,WAAWI,aAAcW,EAAKV,OAAQR,EAAWkB,OAI9DhB,KAAKH,UAAYA,EACjBG,KAAKH,UAAUoB,YAAajB,KAAKC,YA8DzC,MA3DWT,GAAA0B,UAAAC,QAAP,WACInB,KAAKH,UAAUuB,YAAapB,KAAKC,aAG9BT,EAAA0B,UAAAG,kBAAP,SAA0BC,GACtB,GAAIC,GAAgB,GAChBC,EAAgB,OACFX,KAAbS,IACDtB,KAAKP,MAAQ6B,GAEE,WAAdtB,KAAKJ,MACN2B,EAAQ,KACRC,EAAQ,MACc,SAAdxB,KAAKJ,OACb2B,EAAQ,IACRC,EAAQ,KAEZxB,KAAKC,WAAWI,aAAckB,EAAOjB,OAAQN,KAAKP,MAAMc,IACxDP,KAAKC,WAAWI,aAAcmB,EAAOlB,OAAQN,KAAKP,MAAMe,KAGlDhB,EAAA0B,UAAAO,WAAV,SAAsB/B,GACC,WAAdM,KAAKJ,MACDF,IAAOM,KAAKU,QAAUhB,GAC3BM,KAAKC,WAAWI,aAAc,IAAKC,OAAQN,KAAKU,WAE3ChB,IAAOM,KAAKN,KAAaA,GAC9BM,KAAKC,WAAWI,aAAc,QAASC,OAAQN,KAAKN,KAAKiB,QACzDX,KAAKC,WAAWI,aAAc,SAAUC,OAAQN,KAAKN,KAAKkB,WAI3DpB,EAAA0B,UAAAQ,QAAP,WACI,MAAO1B,MAAKL,MAGTH,EAAA0B,UAAAS,WAAP,SAAmBC,GACf5B,KAAKL,KAAKkC,OAAQD,IAGfpC,EAAA0B,UAAAY,gBAAP,WACI,OACIvB,EAAGP,KAAKP,MAAMc,EAAIP,KAAKL,KAAKY,EAC5BC,EAAGR,KAAKP,MAAMe,EAAIR,KAAKL,KAAKa,IAI7BhB,EAAA0B,UAAAa,SAAP,WACI,MAAO/B,MAAKP,OAGTD,EAAA0B,UAAAc,QAAP,WACI,MAAOhC,MAAKN,MAGTF,EAAA0B,UAAAe,UAAP,WACI,MAAOjC,MAAKU,QAGpBlB,IDfAP,GAAQwB,QAAUjB,GAKZ,SAAUR,EAAQC,EAASC,GAEjC,YAEAC,QAAOC,eAAeH,EAAS,cAAgBI,OAAO,GEpGtD,IAAK6C,IAAL,SAAKA,GACDA,EAAA,kBACAA,EAAA,qBAFCA,WAKLjD,EAAAwB,QAAeyB,GF0GT,SAAUlD,EAAQC,EAASC,GAEjC,YAEAC,QAAOC,eAAeH,EAAS,cAAgBI,OAAO,GGjHtD,IAAA8C,GAAA,mBAAAA,MAsDA,MAhDkBA,GAAAC,IAAd,SAAmBC,GACf,IAAKrC,KAAKsC,UAAUC,IAAKF,GAAzB,CACArC,KAAKsC,UAAUE,IAAKH,EACpB,IAAMI,IACFC,OAAQ,MACRC,SAAWC,eAAgB,YAE/BC,OAAO,OAAOR,EAAI,OAAQI,GACrBK,KAAM,SAAAC,GAAQ,MAAAA,GAAKC,SACnBF,KAAMX,EAAKc,oBAGLd,EAAAc,iBAAf,SAAiCF,GAC7B,GAAMG,GAAWhD,SAASiD,cAAe,SACnCC,EAAQlD,SAASmD,eAAgBN,EACvCG,GAASjC,YAAamC,GACtBlD,SAASoD,KAAKrC,YAAaiC,IAGjBf,EAAAoB,MAAd,SAAqBA,GAArB,GAAAxD,GAAAC,IACI,IAAKA,KAAKwD,aAAajB,IAAKgB,GAAU,MAAOvD,MAAKyD,eAAgBF,EAClE,IAAKvD,KAAK0D,cAAcnB,IAAKgB,GAAU,MAAOvD,MAAK0D,cAAcC,IAAKJ,EAEtE,IAAMd,IACFC,OAAQ,MACRC,SAAWC,eAAgB,qBAEzBgB,EAAUf,MAAO,UAAUU,EAAK,QAASd,GAC1CK,KAAM,SAAAC,GAAQ,MAAAA,GAAKc,SACnBf,KAAM9C,KAAK8D,SACXhB,KAAO,SAAAiB,GAAU,MAAAhE,GAAKiE,UAAWT,EAAOQ,IAE7C,OADA/D,MAAK0D,cAAcO,IAAKV,EAAOK,GACxBA,GAGIzB,EAAA2B,QAAf,SAAwBP,GACpB,MAAgBA,IAGLpB,EAAA6B,UAAf,SAA0BT,EAAeQ,GAGrC,MAFA/D,MAAK0D,cAAcQ,OAAQX,GAC3BvD,KAAKwD,aAAaS,IAAKV,EAAOQ,GACvBI,QAAQC,QAASL,IAGb5B,EAAAsB,eAAf,SAA+BF,GAC3B,MAAOY,SAAQC,QAASpE,KAAKwD,aAAaG,IAAKJ,KAlDpCpB,EAAAG,UAAyB,GAAI+B,KAC7BlC,EAAAqB,aAAoC,GAAIc,KACxCnC,EAAAuB,cAA8C,GAAIY,KAkDrEnC,IHmHAlD,GAAQwB,QGzKa0B,GH8Kf,SAAUnD,EAAQC,EAASC,GAEjC,YAEAC,QAAOC,eAAeH,EAAS,cAAgBI,OAAO,IIpLzCJ,EAAAmB,aAAe,8BJ0LtB,SAAUpB,EAAQC,EAASC,GAEjC,YK1LA,SAAAqF,GAAiBhB,GACb,MAAO,SAASA,EAGpB,QAAAiB,GAAmBjB,EAAekB,EAAyBC,GACvD,GAAMC,GAAWJ,EAAQhB,GACnBqB,EAAMC,aAAaC,QAASH,EAClC,IAAMC,EAIC,CACH,GAAIG,GAAOC,KAAKC,MAAOL,KACjBG,EAAKN,IAAeC,EAAQK,EAAKN,MACnCM,EAAKN,GAAcC,EACnBG,aAAaK,QAASP,EAAUK,KAAKG,UAAWJ,SAPpDF,cAAaK,QAASP,EAAUK,KAAKG,WAASC,KAC1CA,EAACX,GAAaC,EL8LdU,IASR,IAAIA,GK5LR,QAAAC,GAAmB9B,EAAe3D,GAC9B,GAAM+E,GAAWJ,EAAQhB,GACnBqB,EAAMC,aAAaC,QAASH,EAClC,KAAMC,EAAM,MAAO,EACnB,IAAMU,GAAON,KAAKC,MAAOL,EACzB,KAAMhF,EAAO,CACT,GAAK0F,EAAKC,UAAYD,EAAKE,QAAU,MAAOC,MAAKC,IAAKJ,EAAKC,SAAUD,EAAKE,QAC1E,IAAKF,EAAKC,SAAW,MAAOD,GAAKC,QACjC,IAAKD,EAAKE,QAAU,MAAOF,GAAKE,QAEpC,MAAK5F,KAAS+F,EAAAlF,QAAY+E,QAAiBF,EAAKE,QAAUF,EAAKE,QAAU,EACpE5F,IAAS+F,EAAAlF,QAAY8E,SAAkBD,EAAKC,SAAWD,EAAKC,SAAW,MAA5E,GL6JJpG,OAAOC,eAAeH,EAAS,cAAgBI,OAAO,GK9LtD,IAAAsG,GAAAzG,EAAA,EAoCAD,GAAAwB,SACI+D,SAAQA,EACRa,SAAQA,ILyMN,SAAUrG,EAAQC,EAASC,GAEjC,YAEA,IAAI0G,GAAa5F,MAAQA,KAAK4F,WAAc,WACxC,GAAIC,GAAgB1G,OAAO2G,iBACpBC,uBAA2BC,QAAS,SAAUC,EAAGC,GAAKD,EAAEF,UAAYG,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAIC,KAAKD,GAAOA,EAAEE,eAAeD,KAAIF,EAAEE,GAAKD,EAAEC,IACzE,OAAO,UAAUF,EAAGC,GAEhB,QAASG,KAAOrG,KAAKsG,YAAcL,EADnCJ,EAAcI,EAAGC,GAEjBD,EAAE/E,UAAkB,OAANgF,EAAa/G,OAAOoH,OAAOL,IAAMG,EAAGnF,UAAYgF,EAAEhF,UAAW,GAAImF,OAGvFlH,QAAOC,eAAeH,EAAS,cAAgBI,OAAO,GM7PtD,IAAAC,GAAAJ,EAAA,GAGAsH,EAAAtH,EAAA,GACAuH,EAAAvH,EAAA,IAIAwH,EAAA,SAAAC,GAMI,QAAAD,GACYE,EACR/G,EACAgH,EACQC,GAJZ,GAAA/G,GAMI4G,EAAAI,KAAA/G,KACI6G,EAAaG,SACbH,EAAanH,MACXa,EAAG,EAAGC,EAAG,GACX,OACAX,EACAgH,EAAa/G,YAAc4G,EAAOO,SAASnH,aAC9CE,INiPD,OM7PQD,GAAA6G,YAGA7G,EAAA+G,aAUR/G,EAAKmH,OAAShH,SAASC,gBAAiBb,EAAAc,aAAc,UACtDL,EAAKmH,OAAO7G,aAAa,KAAMC,OAAQuG,EAAaG,SAASzG,EAAIsG,EAAanH,KAAKiB,MAAQ,IAC3FZ,EAAKmH,OAAO7G,aAAa,KAAMC,OAAQuG,EAAaG,SAASxG,IAC7DT,EAAKmH,OAAO9D,MAAM+D,QAAU,MAC5BpH,EAAKqH,WAAaV,EAAOO,SAASG,WN4O3BrH,EMxHf,MA5IoC6F,GAAAc,EAAAC,GAwCzBD,EAAAxF,UAAAmG,SAAP,WACI,GAAMC,GAAkBtH,KAAKuH,UACxBvH,MAAKP,MAAMc,IAAM+G,IAClBtH,KAAKP,MAAMc,EAAI+G,EACftH,KAAKqB,sBAINqF,EAAAxF,UAAAqG,SAAP,WAEI,IADA,GAAIC,GAAUxH,KAAKoH,WACVpH,KAAKP,MAAMc,EAAIiH,EAAY,GAChCA,GAEJ,OAAOxH,MAAKP,MAAMc,EAAIiH,GAGnBd,EAAAxF,UAAAuG,UAAP,WACI,GAAMC,GAAmB1H,KAAK2H,WACzB3H,MAAKP,MAAMc,IAAMmH,IAClB1H,KAAKP,MAAMc,EAAImH,EACf1H,KAAKqB,sBAINqF,EAAAxF,UAAAyG,UAAP,WAEI,IADA,GAAIH,GAAUxH,KAAKoH,WACVpH,KAAKP,MAAMc,EAAIP,KAAKN,KAAKiB,MAAQ6G,EAAYxH,KAAK4G,UAAUjG,OACjE6G,GAEJ,OAAOxH,MAAKP,MAAMc,EAAIiH,GAGnBd,EAAAxF,UAAA0G,YAAP,SAAoBC,GAChB7H,KAAK6H,WAAaA,EACb7H,KAAK6H,aAAepB,EAAAhG,QAAWqH,KAAO9H,KAAK+H,WAC3C/H,KAAKgI,cACVhI,KAAKiI,eAGDvB,EAAAxF,UAAA+G,YAAR,WACIjI,KAAKC,WAAWI,aAAc,OAAQqG,EAAOwB,SAAUlI,KAAK6H,cAGjDnB,EAAAwB,SAAf,SAAyBC,GACrB,OAASA,GACL,IAAK,GAAG,MAAO,SACf,KAAK,GAAG,MAAO,SACf,KAAK,GAAG,MAAO,SACf,KAAK,GAAG,MAAO,SACf,KAAK,GAAG,MAAO,SACf,KAAK,GAAG,MAAO,SACf,SACA,IAAK,GAAG,MAAO,YAGhBzB,EAAAxF,UAAAkH,cAAP,aAGO1B,EAAAxF,UAAAmH,UAAP,WACI,OAAQrI,KAAK6H,YACT,IAAKpB,GAAAhG,QAAW6H,QACZtI,KAAKuI,cACL,MACJ,KAAK9B,GAAAhG,QAAW+H,OACZxI,KAAKyI,gBAKT/B,EAAAxF,UAAAuH,YAAR,WACI,GAAMC,IACFnI,EAAGP,KAAKP,MAAMc,EAAMP,KAAKN,KAAKiB,MAAQ,EACtCH,EAAGR,KAAKP,MAAMe,EAAIR,KAAKN,KAAKkB,QAE1BlB,GACFiB,MAAO,EAAGC,OAAQ,EAEtBZ,MAAK8G,WAAY4B,EAAOhJ,IAEpBgH,EAAAxF,UAAAqH,aAAR,WACI,GAAM7I,IACFiB,MAAO,EAAGC,OAAQ,EAEtBZ,MAAK8G,YACDvG,EAAGP,KAAKP,MAAMc,EACdC,EAAGR,KAAKP,MAAMe,EAAIR,KAAKN,KAAKkB,QAC7BlB,GACHM,KAAK8G,YACDvG,EAAGP,KAAKP,MAAMc,EAAIP,KAAKN,KAAKiB,MAC5BH,EAAGR,KAAKP,MAAMe,EAAIR,KAAKN,KAAKkB,QAC7BlB,IAECgH,EAAAxF,UAAA6G,SAAR,WACI/H,KAAKyB,WAAYiF,EAAOO,SAAS0B,MAAMb,OAEnCpB,EAAAxF,UAAA8G,YAAR,WACIhI,KAAKyB,WAAYiF,EAAOO,SAAS0B,MAAMlI,UAEpCiG,EAAAxF,UAAA0H,OAAP,aACOlC,EAAAxF,UAAA2H,SAAP,aAhHcnC,EAAAO,UACV0B,OACIlI,SAAWE,MAAO,EAAGC,OAAQ,GAC7BkH,MAAQnH,MAAO,GAAIC,OAAQ,IAE/Bd,YACIgJ,KAAQ,OACRC,OAAU,QACVC,eAAgB,OAEpB5B,WAAY,GAuGpBV,GA5IoCF,EAAA/F,QNmXpCxB,GAAQwB,QMnXaiG,GNwXf,SAAU1H,EAAQC,EAASC,GAEjC,YAEA,IAAI0G,GAAa5F,MAAQA,KAAK4F,WAAc,WACxC,GAAIC,GAAgB1G,OAAO2G,iBACpBC,uBAA2BC,QAAS,SAAUC,EAAGC,GAAKD,EAAEF,UAAYG,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAIC,KAAKD,GAAOA,EAAEE,eAAeD,KAAIF,EAAEE,GAAKD,EAAEC,IACzE,OAAO,UAAUF,EAAGC,GAEhB,QAASG,KAAOrG,KAAKsG,YAAcL,EADnCJ,EAAcI,EAAGC,GAEjBD,EAAE/E,UAAkB,OAANgF,EAAa/G,OAAOoH,OAAOL,IAAMG,EAAGnF,UAAYgF,EAAEhF,UAAW,GAAImF,OAGvFlH,QAAOC,eAAeH,EAAS,cAAgBI,OAAO,GO1YtD,IAAAmH,GAAAtH,EAAA,GAGA+J,EAAA,SAAAtC,GAiBI,QAAAsC,GACIpJ,EACAqJ,GAFJ,GAAAnJ,GAII4G,EAAAI,KAAA/G,KACIkJ,EAAUlC,SACVkC,EAAUxJ,MACRa,EAAG,EAAGC,EAAG,GACX,OACAX,EACAqJ,EAAUpJ,YAAcmJ,EAAIhC,SAASnH,aACxCE,IPmXD,OOjYID,GAAAoJ,SAAmB,EAevBpJ,EAAKqJ,MAAQF,EAAUE,OAASH,EAAIhC,SAASmC,MPkXtCrJ,EO3Uf,MApEiC6F,GAAAqD,EAAAtC,GA+BtBsC,EAAA/H,UAAAmG,SAAP,WACIrH,KAAKP,MAAMc,GAAKP,KAAKoJ,MACrBpJ,KAAKqB,qBAEF4H,EAAA/H,UAAAuG,UAAP,WACIzH,KAAKP,MAAMc,GAAKP,KAAKoJ,MACrBpJ,KAAKqB,qBAEF4H,EAAA/H,UAAA0H,OAAP,WACI5I,KAAKP,MAAMe,GAAKR,KAAKoJ,MACrBpJ,KAAKqB,qBAEF4H,EAAA/H,UAAA2H,SAAP,WACI7I,KAAKP,MAAMe,GAAKR,KAAKoJ,MACrBpJ,KAAKqB,qBAGD4H,EAAA/H,UAAAmI,KAAR,WACSrJ,KAAKN,KAAKiB,OAASsI,EAAIK,WAAatJ,KAAKN,KAAKkB,QAAUqI,EAAIM,aACjEvJ,KAAKN,KAAKiB,QACVX,KAAKN,KAAKkB,SACVZ,KAAKyB,eAIFwH,EAAA/H,UAAAsI,OAAP,SAAeC,GAKX,MAJAzJ,MAAKmJ,WACAnJ,KAAKmJ,SAAW,IACjBnJ,KAAKqJ,OAEFrJ,KAAKmJ,UAITF,EAAA/H,UAAA0G,YAAP,SAAoB8B,KACbT,EAAA/H,UAAAyI,SAAP,SAAiBC,GAAwB5J,KAAK4J,MAAQA,GAC/CX,EAAA/H,UAAAmH,UAAP,aAlEeY,EAAAhC,UACXmC,MAAO,EACPtJ,YACIgJ,KAAQ,OACRC,OAAU,QACVC,eAAgB,QAITC,EAAAK,UAAoB,EACpBL,EAAAM,WAAqB,EAyDxCN,GApEiCzC,EAAA/F,QPgcjCxB,GAAQwB,QOhcawI,GPqcf,SAAUjK,EAAQC,EAASC,GAEjC,YQ3cA,SAAA2K,GAAgBC,EAAgBC,EAAoBpJ,GAChD,GAAIqJ,GAAeD,EAAapJ,EAASmJ,CACzC,OAAOE,IAAO,GAAKA,GAAOrJ,EAI9B,QAAAsJ,GAAqBC,EAAYC,EAAYC,GACzC,MAAOP,GAAOK,EAAG3J,EAAG4J,EAAG5J,EAAG6J,EAAOzJ,QAC1BkJ,EAAOK,EAAG1J,EAAG2J,EAAG3J,EAAG4J,EAAOxJ,QAGrC,QAAAyJ,GAAiBC,EAAqBC,EAAoBC,GAEtD,GACMC,GAAYhF,KAAKC,IAAK8E,EAAU7J,MAAO6J,EAAU5J,OAEvD,OADyB8J,GAAaJ,EAAaC,IAChCE,EAHQ,EAM/B,QAAAC,GAAsBR,EAAYC,GAC9B,GAAMQ,GAAQT,EAAG3J,EAAI4J,EAAG5J,EAClBqK,EAAQV,EAAG1J,EAAI2J,EAAG3J,CACxB,OAAOiF,MAAKoF,KACR,EAAU,EACV,EAAU,GRqblB1L,OAAOC,eAAeH,EAAS,cAAgBI,OAAO,IQjb7CJ,EAAAgL,cACAhL,EAAAoL,SACApL,EAAAyL,eR8cH,SAAU1L,EAAQC,EAASC,GAEjC,YAEAC,QAAOC,eAAeH,EAAS,cAAgBI,OAAO,GSnftD,IAAAyL,GAAA5L,EAAA,GAEA6L,EAAA,WAOI,QAAAA,GAAoBC,GAChBF,EAAArK,QAAO2B,IAAK,QACZ,IAAM6I,GAAsB/K,SAASiD,cAAc,OAC7C+H,EAA0BhL,SAASiD,cAAe,OAClDgD,EAA0BjG,SAASiD,cAAe,KAClDgI,EAAiCjL,SAASiD,cAAe,MAC/D8H,GAAI5K,aAAc,QAAS,SAC3B6K,EAAQ7K,aAAc,QAAS,iBAC/B8F,EAAEiF,UAAY,cACdD,EAAe9K,aAAc,QAAS,mBACnB,IAAd2K,GACDhL,KAAKqL,kBAAmBH,GAE5BA,EAAQjK,YAAakF,GACrB+E,EAAQjK,YAAakK,GACrBF,EAAIhK,YAAaiK,GACjBD,EAAI7H,MAAMkI,QAAU,OAEpBpL,SAASqL,KAAKtK,YAAagK,GAC3BjL,KAAKiL,IAAMA,EACXjL,KAAKmG,EAAIA,EACTnG,KAAKkL,QAAUA,EACflL,KAAKmL,eAAiBA,EA4B9B,MA1BYJ,GAAA7J,UAAAmK,kBAAR,SAA2BH,GACvB,GAAMM,GAA0BtL,SAASiD,cAAe,OACxDqI,GAAOnL,aAAc,QAAS,YAC9BmL,EAAOC,iBAAkB,QAASzL,KAAK0L,YAAYC,KAAM3L,OACzDwL,EAAOJ,UAAY,UACnBF,EAAQjK,YAAauK,IAElBT,EAAA7J,UAAA0K,KAAP,SAAaC,EAAiBC,GACrBA,IAAK9L,KAAK8L,GAAKA,GACpB9L,KAAKmG,EAAEiF,UAAYS,EACnB7L,KAAKiL,IAAI7H,MAAMkI,QAAU,SAGrBP,EAAA7J,UAAAwK,YAAR,WACS1L,KAAK8L,IACN9L,KAAK8L,KACL9L,KAAK8L,GAAK,MAEV9L,KAAK+L,QAGNhB,EAAA7J,UAAA6K,KAAP,WACI/L,KAAKmG,EAAEiF,UAAY,GACnBpL,KAAKiL,IAAI7H,MAAMkI,QAAU,OACzBtL,KAAKkL,QAAQc,UAAUC,OAAQ,UAAW,SAElDlB,IT+eA9L,GAAQwB,QAAUsK,GAKZ,SAAU/L,EAAQC,EAASC,GAEjC,YAEAC,QAAOC,eAAeH,EAAS,cAAgBI,OAAO,GUnjBtD,IAAA6M,GAAAhN,EAAA,IAIAiN,EAAAjN,EAAA,IAEAkN,EAAA,WAKI,QAAAA,GAAqBvM,GAAAG,KAAAH,YACjBG,KAAKqM,cAAgB,GAAIF,GAAA1L,QAAeT,KAAKsM,SAASX,KAAK3L,OAC3DA,KAAKqM,cAAcT,OAoB3B,MAjBYQ,GAAAlL,UAAAoL,SAAR,SAAkB/I,EAAegJ,EAAqBC,GAClDxM,KAAKyM,aACLzM,KAAK0M,UAAY,GAAIR,GAAAzL,QACjB8C,EAAM7D,KACNM,KAAKH,UACLG,KAAKqM,cACLE,EACAC,GAEJxM,KAAK0M,UAAUC,KAAKpJ,IAGhB6I,EAAAlL,UAAAuL,WAAR,WACQzM,KAAK0M,iBACE1M,MAAK0M,WAGxBN,IVuiBAnN,GAAQwB,QAAU2L,CUriBJ,IAAIA,GACdlM,SAAS0M,eAAe,eV0iBtB,SAAU5N,EAAQC,EAASC,GAEjC,YAEAC,QAAOC,eAAeH,EAAS,cAAgBI,OAAO,GWllBtD,IAAAC,GAAAJ,EAAA,GAEA2N,EAAA3N,EAAA,IACA4N,EAAA5N,EAAA,IAKAyG,EAAAzG,EAAA,GAEA6N,EAAA7N,EAAA,IACA8N,EAAA9N,EAAA,GACA+N,EAAA/N,EAAA,GACAgO,EAAAhO,EAAA,IACAiO,EAAAjO,EAAA,GACAkO,EAAAlO,EAAA,GAEAmO,EAAAnO,EAAA,GACAoO,EAAApO,EAAA,IACAuH,EAAAvH,EAAA,IAGAqO,EAAA,WAkBI,QAAAA,GACY7N,EACAG,EACAwM,EACAE,EACAC,GAJAxM,KAAAN,OACAM,KAAAH,YACAG,KAAAqM,gBACArM,KAAAuM,cACAvM,KAAAwM,SAERxM,KAAKwN,WAAa,GAAIlJ,KACtBtE,KAAKyN,MAAQ,GAAIL,GAAA3M,QACjBT,KAAK0N,SACL1N,KAAK2N,WACL3N,KAAK4N,WACL5N,KAAK6N,YAAa,EACb7N,KAAKwM,SAAW7G,EAAAlF,QAAY8E,SAC7BvF,KAAK0E,MAAQ,EACL1E,KAAKwM,SAAW7G,EAAAlF,QAAY+E,UACpCxF,KAAK0E,MAAQ,KAGjB1E,KAAKC,WAAaC,SAASC,gBACvBb,EAAAc,aACA,OAEJJ,KAAKC,WAAWI,aAAc,QAASf,EAAAc,cACvCJ,KAAKC,WAAWI,aAAc,QAAS,OACvCL,KAAKC,WAAWI,aAAc,SAAU,QAGxCL,KAAKC,WAAWI,aAAc,OAAQ,SACtCL,KAAKC,WAAWI,aAAc,UAAW,OAASL,KAAKN,KAAKiB,MAAQ,IAAMX,KAAKN,KAAKkB,QAEpFZ,KAAKC,WAAWI,aAAc,QAAS,2BACvCL,KAAK8N,UAAY,GAAIR,GAAA7M,QAAWT,KAAK+N,aAAapC,KAAM3L,MAAQuM,EAAavM,KAAKH,WAClFA,EAAUoB,YAAajB,KAAKC,YAsapC,MApaYsN,GAAArM,UAAA6M,aAAR,SAAsBrE,GAClB1J,KAAKgO,OAAOpG,YAAa8B,IAEtB6D,EAAArM,UAAAyL,KAAP,SAAapJ,GAETvD,KAAKiO,eAAiBjO,KAAKkO,aAAc3K,EAAM4K,QAC/CnO,KAAK0N,MAAQ1N,KAAKoO,YAAa7K,EAAMmK,OACrC1N,KAAKqO,iBAAkB9K,EAAM+K,OAAQ/K,EAAMgL,KAE3CrO,SAASqL,KAAKE,iBAAiB,UAAWzL,KAAKwO,kBAAkB7C,KAAM3L,OACvEA,KAAK0I,SAED6E,EAAArM,UAAAmN,iBAAR,SAA0BxH,EAA4BqC,GAClDlJ,KAAKsO,OAAStO,KAAKyO,YAAa5H,GAChC7G,KAAKuO,IAAMvO,KAAK0O,SAAUxF,GAErBlJ,KAAKwM,SAAW7G,EAAAlF,QAAY8E,UAC7BvF,KAAKgO,OAAShO,KAAKsO,OACnBtO,KAAK2O,GAAK3O,KAAKuO,KACPvO,KAAKwM,SAAW7G,EAAAlF,QAAY+E,UACpCxF,KAAKgO,OAAShO,KAAKuO,IACnBvO,KAAK2O,GAAK3O,KAAKsO,SAGff,EAAArM,UAAAC,QAAR,WAEI,IADAjB,SAASqL,KAAKqD,oBAAoB,UAAW5O,KAAKwO,kBAAkB7C,KAAM3L,OACnEA,KAAKH,UAAUgP,iBAClB7O,KAAKH,UAAUuB,YAAYpB,KAAKH,UAAUiP,YAG1CvB,EAAArM,UAAAwH,MAAR,WAEI1I,KAAKyN,MAAM1B,OACX/L,KAAK+O,qBACL/O,KAAKgP,eAAiBC,YAAajP,KAAKkP,OAAOvD,KAAM3L,MAAQ,IAC7DA,KAAKmP,UAAW,GAEZ5B,EAAArM,UAAAkO,mBAAR,WACIlP,SAASqL,KAAKqD,oBAAqB,UAAW5O,KAAKqP,kBACnDnP,SAASqL,KAAKqD,oBAAqB,QAAS5O,KAAKqP,mBAE7C9B,EAAArM,UAAA6N,mBAAR,WACI7O,SAASqL,KAAKE,iBAAiB,UAAWzL,KAAKqP,iBAAiB1D,KAAM3L,OACtEE,SAASqL,KAAKE,iBAAiB,QAASzL,KAAKqP,iBAAiB1D,KAAM3L,QAEhEuN,EAAArM,UAAAuN,YAAR,SAAqB5H,GACjB,MAAO,IAAImG,GAAAvM,QACPT,KAAKN,KACLM,KAAKC,WACL4G,EACA7G,KAAKsP,aAAa3D,KAAM3L,QAGxBuN,EAAArM,UAAAwN,SAAR,SAAkBxF,GACd,MAAO,IAAI+D,GAAAxM,QAAKT,KAAKC,WAAYiJ,IAE7BqE,EAAArM,UAAAoO,aAAR,SAAsB5G,EAAehJ,GACjCM,KAAK2N,QAAQ4B,KAAM,GAAIrC,GAAAzM,QAAQiI,EAAOhJ,EAAMM,KAAKC,cAE7CsN,EAAArM,UAAAsO,UAAR,SAAmBC,GACf,MAAO,IAAI5C,GAAApM,QAAMgP,EAAYzP,KAAKC,aAE9BsN,EAAArM,UAAAkN,YAAR,SAAqBV,GACjB,MAAOA,GAAMgC,IAAK1P,KAAKwP,UAAWxP,OAE9BuN,EAAArM,UAAAgN,aAAR,SAAsBC,GAClB,MAAOA,GAAOuB,IAAK1P,KAAK2P,YAAa3P,OAEjCuN,EAAArM,UAAAyO,YAAR,SAAqBC,GACjB,MAAO,IAAI9C,GAAArM,QAAOmP,EAAO5P,KAAKC,WAAYD,KAAK6P,WAAWlE,KAAM3L,QAE5DuN,EAAArM,UAAA4O,aAAR,SAAsBlG,GAClB5J,KAAKiO,eAAe8B,OAAQnG,EAAO,IAE/B2D,EAAArM,UAAA2O,WAAR,SAAoBnH,EAAe9I,GAC/BI,KAAK4N,QAAQ2B,KAAM,GAAI9I,GAAAhG,QAAQiI,EAAO9I,EAAMI,KAAKC,cAE7CsN,EAAArM,UAAA8O,SAAR,SAAkBvQ,GACd,GAAImQ,EAYJ,OAXA5P,MAAKiO,eAAegC,KAAM,SAAE/J,EAAUgK,GAClC,GAAI3F,GAAqBrE,EAAEnE,WACvByI,EAAkBtE,EAAElE,SAOxB,OALKmL,GAAA9C,OAAQ5K,EAAO8K,EAAYC,IAC3B2C,EAAAlD,YAAaxK,EAAO8K,EAAYC,KACjCoF,EAAQ1J,EACR0J,EAAMjG,SAAUuG,IAEbC,QAASP,KAEbA,GAEHrC,EAAArM,UAAAkP,OAAR,SAAgB3Q,GACZ,GAAM4Q,GAAWrQ,KAAKuO,IAAIxM,WACpBuO,EAAUtQ,KAAKuO,IAAIvM,SAEzB,IAAKmL,EAAA9C,OAAQ5K,EAAO4Q,EAAUC,IACzBnD,EAAAlD,YAAaxK,EAAO4Q,EAAUC,GAC1B,MAAOtQ,MAAKuO,KAGjBhB,EAAArM,UAAAqP,QAAR,SAAiB1E,EAAiB2E,GAC9BC,cAAezQ,KAAKgP,gBACpBhP,KAAK6N,YAAa,EAClB7N,KAAKqM,cAAcT,KAAMC,EAAS2E,GAClCxQ,KAAKmB,WAEDoM,EAAArM,UAAAwP,KAAR,WACI1Q,KAAKyN,MAAM7B,KAAM,cAAe5L,KAAK0I,MAAMiD,KAAM3L,OACjDA,KAAKmP,UAAW,EAChBsB,cAAezQ,KAAKgP,iBAEhBzB,EAAArM,UAAAyP,YAAR,WACI,GAAIC,GAEAJ,EADAK,GAAgB,CAwBpB,OAtBK7Q,MAAKwM,SAAW7G,EAAAlF,QAAY8E,SACO,IAA/BvF,KAAKiO,eAAe6C,QACrBF,EAAM,kBACNJ,GAAU,EACVK,GAAO,GACuB,IAAtB7Q,KAAK0N,MAAMoD,SACnBF,EAAM,gBACNJ,GAAU,EACVK,GAAO,GAEH7Q,KAAKwM,SAAW7G,EAAAlF,QAAY+E,UACA,IAA/BxF,KAAKiO,eAAe6C,QACrBF,EAAM,gBACNJ,GAAU,EACVK,GAAO,GACuB,IAAtB7Q,KAAK0N,MAAMoD,SACnBF,EAAM,kBACNJ,GAAU,EACVK,GAAO,IAGVA,GAAO7Q,KAAKuQ,QAASK,EAAKJ,GACxBK,GAEHtD,EAAArM,UAAAgO,OAAR,WACI,GAAKlP,KAAK2Q,cAEN,WADAtD,GAAA5M,QAAU+D,SAAUxE,KAAKuM,YAAavM,KAAKwM,OAAQxM,KAAK0E,MAGxD1E,MAAK+Q,cACL/Q,KAAKgR,gBACLhR,KAAKiR,gBACLjR,KAAKkR,kBACLlR,KAAKmR,YAGL5D,EAAArM,UAAAkQ,YAAR,WACSpR,KAAKwM,SAAW7G,EAAAlF,QAAY8E,SAC7BvF,KAAK0E,OAAS,EACN1E,KAAKwM,SAAW7G,EAAAlF,QAAY+E,UACpCxF,KAAK0E,OAAS,GAElB1E,KAAK8N,UAAUsD,YAAapR,KAAK0E,QAE7B6I,EAAArM,UAAA0G,YAAR,SAAqB8B,EAAoB2H,GAChCA,IAASrR,KAAKwM,QAASxM,KAAK8N,UAAUwD,UAAW5H,GACjD2H,IAAS1L,EAAAlF,QAAY8E,SACtBvF,KAAKsO,OAAO1G,YAAa8B,GACjB2H,IAAS1L,EAAAlF,QAAY+E,SAC7BxF,KAAKuO,IAAI3G,YAAa8B,IAGtB6D,EAAArM,UAAA+P,cAAR,cAAAlR,GAAAC,KACQuR,KACAC,EAAiB,CACrBxR,MAAK4N,QAAQ7M,QAAS,SAAE2I,EAAgBE,GACpC,GAAM6H,GAAS/H,EAAO5H,kBAChB4P,EAAoB3R,EAAKuO,OAAOvM,WAChC4P,EAAmB5R,EAAKuO,OAAOtM,SAEhCyP,GAAOjR,GAAKT,EAAKL,KAAKkB,QACvB2Q,EAAShC,KAAM3F,GACfF,EAAOvI,WACCgM,EAAAlD,YAAawH,EAAQC,EAAWC,IACxC5R,EAAK6H,YAAa8B,EAAO7B,WAAYlC,EAAAlF,QAAY8E,UACjDgM,EAAShC,KAAM3F,GACfF,EAAOvI,WAEPuI,EAAOrI,kBAAmBoQ,KAGlCF,EAASxQ,QAAS,SAAE6Q,GAChB7R,EAAK6N,QAAQmC,OAAQ6B,EAAMJ,EAAQ,GACnCA,GAAU,KAGVjE,EAAArM,UAAA8P,cAAR,cAAAjR,GAAAC,KACQ6R,KACAL,EAAiB,CACrBxR,MAAK2N,QAAQ5M,QAAQ,SAAU+Q,EAAgBlI,GAU3C,IAAM,GARFmI,GACAC,EACAP,EACAQ,EACAC,EACAC,EACAvC,EAPExG,EAAgB0I,EAAOM,UAAU,GAS7BC,EAAa,EAAGA,EAAajJ,EAAOiJ,IAAe,CAKzD,GAJAzC,EAAQ,KACR6B,EAASK,EAAOhQ,kBAChBmQ,EAASH,EAAO/P,WAChBmQ,EAAYC,GAAY,EACnBL,EAAOQ,YAER,WADAT,GAAgBtC,KAAM3F,EAI1B,IAAK6H,EAAOlR,EAAI,GAAKkR,EAAOlR,EAAIP,KAAKN,KAAKiB,OACrC8Q,EAAOjR,EAAI,GAAKiR,EAAOjR,GAAKR,KAAKN,KAAKkB,OAKvC,MAHAiR,GAAgBtC,KAAM3F,OAEtBkI,GAAO3Q,SAKXyO,GAAQ5P,KAAKgQ,UAAYzP,EAAGkR,EAAOlR,EAAGC,EAAGyR,EAAOzR,IAC3CoP,IACDsC,GAAY,EACZH,EAAgBnC,EAAM2C,cACtBP,EAAiBF,EAAOS,cACpB3C,EAAMpG,OAAQwI,IAAoB,EAClChS,KAAK8P,aAAcF,EAAMhG,OAEzBgG,EAAMjG,UAAW,IAKzBiG,EAAQ5P,KAAKgQ,UAAYzP,EAAG0R,EAAO1R,EAAGC,EAAGiR,EAAOjR,IAC3CoP,IACDuC,GAAY,EACZJ,EAAgBnC,EAAM2C,cACtBP,EAAiBF,EAAOS,cACxBT,EAAOtI,OAAQuI,GACwB,IAAnCnC,EAAMpG,OAAQwI,GACdhS,KAAK8P,aAAcF,EAAMhG,OAEzBgG,EAAMjG,UAAW,IAInBuI,GAAcC,IAChBvC,EAAQ5P,KAAKgQ,SAAUyB,MAEnBM,EAAgBnC,EAAM2C,cACtBP,EAAiBF,EAAOS,cACxBT,EAAOtI,OAAQuI,GACwB,IAAnCnC,EAAMpG,OAAQwI,GACdhS,KAAK8P,aAAcF,EAAMhG,OAEzBgG,EAAMjG,UAAW,IAI7BmI,EAAO5C,WAEZlP,MACH6R,EAAgB9Q,QAAS,SAAE6Q,GACvB7R,EAAK4N,QAAQoC,OAAQ6B,EAAMJ,EAAQ,GACnCA,GAAU,KAGVjE,EAAArM,UAAA6P,YAAR,cAAAhR,GAAAC,KACQwS,KACAhB,EAAiB,EACfE,EAAoB1R,KAAKsO,OAAOvM,WAChC4P,EAAmB3R,KAAKsO,OAAOtM,SACrChC,MAAK0N,MAAM3M,QAAS,SAAU0R,EAAY7I,GACtC,GAEIsI,GACAC,EACAvC,EACA8C,EALEhS,EAAS+R,EAAKxQ,YAChBwP,EAAiBgB,EAAK3Q,iBAe1B,KARK2P,EAAOlR,EAAIG,EAAS,GAAK+Q,EAAOlR,EAAIG,EAASV,KAAKN,KAAKiB,QACxD8R,EAAK9Q,WAAY,MAGhB8P,EAAOjR,EAAIE,EAAS,GAAKyM,EAAAlD,YAAawH,EAAQC,EAAWC,KAC1Dc,EAAK9Q,WAAY,KAGhB8P,EAAOjR,EAAIE,GAAUV,KAAKN,KAAKkB,OAIhC,MAHA4R,GAAcjD,KAAM3F,OAEpB6I,GAAKtR,SAKTsQ,GAASgB,EAAK3Q,kBACd4Q,GAAkBnS,EAAGkR,EAAOlR,EAAGC,EAAGiS,EAAKhT,MAAMe,GAC7CoP,EAAQ5P,KAAKgQ,SAAU0C,IAAmB1S,KAAKoQ,OAAQsC,GAClD9C,IACD5P,KAAKoR,cACLc,GAAY,EACZO,EAAK9Q,WAAY,KAES,IAAtBiO,EAAMpG,OAAQ,GACdxJ,KAAK8P,aAAcF,EAAMhG,OAEzBgG,EAAMjG,UAAW,IAKzB8H,EAASgB,EAAK3Q,kBACd4Q,GAAkBnS,EAAGkS,EAAKhT,MAAMc,EAAGC,EAAGiR,EAAOjR,GAC7CoP,EAAQ5P,KAAKgQ,SAAU0C,IAAmB1S,KAAKoQ,OAAQsC,GAClD9C,IACD5P,KAAKoR,cACLe,GAAY,EACZM,EAAK9Q,WAAY,KACS,IAAtBiO,EAAMpG,OAAQ,GACdxJ,KAAK8P,aAAcF,EAAMhG,OAEzBgG,EAAMjG,UAAW,IAInBuI,GAAcC,IAChBvC,EAAQ5P,KAAKgQ,SAAUyB,IAAYzR,KAAKoQ,OAAQqB,MAE5CgB,EAAK9Q,WAAY,KACjB8Q,EAAK9Q,WAAY,KACS,IAAtBiO,EAAMpG,OAAQ,GACdxJ,KAAK8P,aAAcF,EAAMhG,OAEzBgG,EAAMjG,UAAW,IAI7B8H,EAASgB,EAAK3Q,kBACd2Q,EAAKpR,kBAAmBoQ,IACzBzR,MACHwS,EAAczR,QAAS,SAAE6Q,GACrB7R,EAAK2N,MAAMqC,OAAQ6B,EAAMJ,EAAQ,GACjCA,GAAU,KAGVjE,EAAArM,UAAAmO,iBAAR,SAA0BsD,GACtB,GAAIC,GAAgC,YAAXD,EAAE/S,IAC3BI,MAAKwN,WAAWvJ,IAAK0O,EAAEE,QAASD,IAE5BrF,EAAArM,UAAAsN,kBAAR,SAA2BmE,GACJ,KAAdA,EAAEE,UAAsC,IAApB7S,KAAK6N,YAC1B7N,KAAK8S,aAGLvF,EAAArM,UAAAgQ,gBAAR,cAAAnR,GAAAC,IACIA,MAAKwN,WAAWzM,QAAS,SAAE1B,EAAgB2B,GACvC,GAAK3B,EACD,OAAS2B,GACL,IAAK,IACL,IAAK,IACDjB,EAAKgT,WACL,MACJ,KAAK,IACL,IAAK,IACDhT,EAAKiT,YACL,MACJ,KAAK,IACL,IAAK,IACDjT,EAAKkT,SACL,MACJ,KAAK,IACL,IAAK,IACDlT,EAAKmT,WACL,MACJ,KAAK,IACDnT,EAAKoT,iBAOjB5F,EAAArM,UAAA+R,QAAR,WACIjT,KAAKgO,OAAOpF,UAER2E,EAAArM,UAAAgS,UAAR,WACIlT,KAAKgO,OAAOnF,YAER0E,EAAArM,UAAA6R,UAAR,WACI/S,KAAKgO,OAAO3G,YAERkG,EAAArM,UAAA8R,WAAR,WACIhT,KAAKgO,OAAOvG,aAER8F,EAAArM,UAAAiS,WAAR,WACInT,KAAKgO,OAAO3F,aAERkF,EAAArM,UAAAiQ,SAAR,WACIpE,EAAAtM,QAAG2S,SACCpT,KAAK2O,GACL3O,KAAK0N,MACL1N,KAAK4N,QACL5N,KAAKN,OAGL6N,EAAArM,UAAA4R,UAAR,WACS9S,KAAKmP,SACNnP,KAAK0I,QAEL1I,KAAK0Q,QAIjBnD,IXsjBAtO,GAAQwB,QAAU8M,GAKZ,SAAUvO,EAAQC,EAASC,GAEjC,YAEA,IAAI0G,GAAa5F,MAAQA,KAAK4F,WAAc,WACxC,GAAIC,GAAgB1G,OAAO2G,iBACpBC,uBAA2BC,QAAS,SAAUC,EAAGC,GAAKD,EAAEF,UAAYG,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAIC,KAAKD,GAAOA,EAAEE,eAAeD,KAAIF,EAAEE,GAAKD,EAAEC,IACzE,OAAO,UAAUF,EAAGC,GAEhB,QAASG,KAAOrG,KAAKsG,YAAcL,EADnCJ,EAAcI,EAAGC,GAEjBD,EAAE/E,UAAkB,OAANgF,EAAa/G,OAAOoH,OAAOL,IAAMG,EAAGnF,UAAYgF,EAAEhF,UAAW,GAAImF,OAGvFlH,QAAOC,eAAeH,EAAS,cAAgBI,OAAO,GYpjCtD,IAAAmH,GAAAtH,EAAA,GAEAmU,EAAA,SAAA1M,GAEI,QAAA0M,GAAa5D,EAAwB5P,GZqjCjC,MYpjCA8G,GAAAI,KAAA/G,KAAOyP,EAAWhQ,MAAOgQ,EAAW/O,OAAQ+O,EAAW6D,WAAY,SAAUzT,IAAWG,KAEhG,MALkC4F,GAAAyN,EAAA1M,GAKlC0M,GALkC7M,EAAA/F,QZ2jClCxB,GAAQwB,QAAU4S,GAKZ,SAAUrU,EAAQC,EAASC,GAEjC,YAEAC,QAAOC,eAAeH,EAAS,cAAgBI,OAAO,GazkCtD,IAAAkU,GAAA,WAGI,QAAAA,GAAa9T,GACTO,KAAKO,EAAId,EAAMc,EACfP,KAAKQ,EAAIf,EAAMe,EAavB,MAXW+S,GAAArS,UAAAW,OAAP,SAAeD,GACX5B,KAAK4B,IAAsB,EAAd5B,KAAK4B,IAEf2R,EAAArS,UAAAkI,MAAP,SAAcY,GACVhK,KAAKO,EAAIP,KAAKO,EAAI,EAAIP,KAAKO,EAAIyJ,EAAMhK,KAAKO,EAAIyJ,EAC9ChK,KAAKQ,EAAIR,KAAKQ,EAAI,EAAIR,KAAKQ,EAAIwJ,EAAMhK,KAAKQ,EAAIwJ,GAE3CuJ,EAAArS,UAAAkR,SAAP,SAAiBoB,GACb,GAAIC,GAAchO,KAAKiO,MAAO1T,KAAKO,EAAGP,KAAKQ,EAC3C,OAAOgT,GAAM/N,KAAK+N,IAAKC,GAAQA,GAEvCF,Ib0kCAtU,GAAQwB,QAAU8S,GAKZ,SAAUvU,EAAQC,EAASC,GAEjC,YAEA,IAAI0G,GAAa5F,MAAQA,KAAK4F,WAAc,WACxC,GAAIC,GAAgB1G,OAAO2G,iBACpBC,uBAA2BC,QAAS,SAAUC,EAAGC,GAAKD,EAAEF,UAAYG,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAIC,KAAKD,GAAOA,EAAEE,eAAeD,KAAIF,EAAEE,GAAKD,EAAEC,IACzE,OAAO,UAAUF,EAAGC,GAEhB,QAASG,KAAOrG,KAAKsG,YAAcL,EADnCJ,EAAcI,EAAGC,GAEjBD,EAAE/E,UAAkB,OAANgF,EAAa/G,OAAOoH,OAAOL,IAAMG,EAAGnF,UAAYgF,EAAEhF,UAAW,GAAImF,OAGvFlH,QAAOC,eAAeH,EAAS,cAAgBI,OAAO,Gc9mCtD,IAAAmH,GAAAtH,EAAA,GAMAyU,EAAA,SAAAhN,GAOI,QAAAgN,GAAoBC,EAAqB/T,EAAuBgQ,GAAhE,GAAA9P,GAAAC,KACUF,GACFgJ,KAAQ6K,EAAME,cAAeD,EAAOzL,UACpCY,OAAU,QACVC,eAAgB,MdqnCpB,OcnnCAjJ,GAAA4G,EAAAI,KAAA/G,KAAO4T,EAAOnU,MAAOmU,EAAOlU,MAAQa,EAAG,EAAGC,EAAG,GAAK,OAAQX,EAAWC,IAAYE,KAC5E4T,EAAOzL,SACRpI,EAAKoI,SAAWyL,EAAOzL,SAEvBpI,EAAKoI,SAAW,EAEpBpI,EAAK8P,WAAaA,EAClB9P,EAAK2J,OAASkK,EAAOlK,OACrB3J,EAAK6J,OAAS,Ed2mCP7J,EczkCf,MAvDmC6F,GAAA+N,EAAAhN,GAuBxBgN,EAAAzS,UAAAyI,SAAP,SAAiBC,GACb5J,KAAK4J,MAAQA,GAEV+J,EAAAzS,UAAAqR,YAAP,WACI,MAAOvS,MAAKmI,UAETwL,EAAAzS,UAAAsI,OAAP,SAAerB,GASX,MARAnI,MAAKmI,UAAYA,EACjBnI,KAAKiI,cACAjI,KAAKmI,UAAY,IACbnI,KAAK0J,QAAU,GAChB1J,KAAK6P,WAAY7P,KAAKP,MAAOO,KAAK0J,QAEtC1J,KAAKmB,WAEFnB,KAAKmI,UAERwL,EAAAzS,UAAA+G,YAAR,WACIjI,KAAKC,WAAWI,aAAc,OAAQsT,EAAME,cAAe7T,KAAKmI,YAErDwL,EAAAE,cAAf,SAA8B1L,GAC1B,OAASA,GACL,IAAK,GAAG,MAAO,SACf,KAAK,GAAG,MAAO,SACf,KAAK,GAAG,MAAO,SACf,KAAK,GAAG,MAAO,SACf,KAAK,GAAG,MAAO,SACf,KAAK,GAAG,MAAO,SACf,SACA,IAAK,GAAG,MAAO,YAG3BwL,GAvDmCnN,EAAA/F,QdoqCnCxB,GAAQwB,QAAUkT,GAKZ,SAAU3U,EAAQC,EAASC,GAEjC,YejqCA,SAAAkU,GAAmBzE,EAAgBjB,EAAoBE,EAAwBlO,GACtEiP,YAAc3B,GAAAvM,QACfqT,EAAgBnF,EAAIjB,EAAOE,EAASlO,GACduN,EAAAxM,QAI9B,QAAAsT,GAA4BC,EAAW9N,GACnC,GAAM+N,GAAQD,EAAEtS,UACVwS,EAAQhO,EAAExE,UACVyS,EAAKH,EAAEjS,WAAWvB,EAClB4T,EAAKlO,EAAEnE,WAAWvB,CAGxB,OAAKyT,GAAMzT,EAAI,GAAK0T,EAAM1T,EAAI,GAAW,EACpC0T,EAAM1T,EAAI,GAAKyT,EAAMzT,EAAI,EAAU,EAGnC0T,EAAM1T,EAAI,GAAKyT,EAAMzT,EAAI,EAAU2T,EAAKC,GAAM,EAAI,EAGlDF,EAAM1T,EAAI,GAAKyT,EAAMzT,EAAI,GAAU2T,EAAKC,EAAK,GAG1C,EAEZ,QAAAC,GAAoBC,EAAgBhG,EAAgB5O,GAChD,GAAMiS,GAAmBrD,EAAOtM,UAC1BuS,EAAoBC,EAAoBF,EAAQ5U,EAAMiS,EAAW/Q,OACvE,KAAM6T,EAAQF,EAAWjG,KAAYoG,EAASH,EAAWjG,GAAW,OAAO,CAC3E,IAAMqG,GAAwBC,EAAkBN,EAAQ5U,EAAKkB,OAAQ+Q,EAAW/Q,QAC1EiU,EAA6BN,EAAUhU,EAAI+N,EAAO7O,MAAMc,EAAI+N,EAAO7O,MAAMc,EAAIoR,EAAWhR,MAAQ2N,EAAO7O,MAAMc,EAC7GuU,EAAmBrP,KAAK+N,IAAKqB,EAAqBN,EAAUhU,EAClE,OAAS+N,GAAOlH,WAAauN,EAAkBG,EAEnD,QAAAhB,GAAyBxF,EAAgBZ,EAAoBE,EAAwBlO,GAEjF4O,EAAOjG,WACP,IAAM0M,GAAiCrH,EAClCsH,OAAQ,SAAArC,GAAK,MAAA0B,GAAW1B,EAAGrE,EAAQ5O,KACnCuV,KAAMlB,EACXmB,GACI5G,EACAyG,EACArV,GAmBR,QAAAwV,GAA6B5G,EAAgB6G,EAAyBzV,GAClE,GAAyB,IAApByV,EAASrE,OAAd,CACA,GAAMsE,GAAuB9G,EAAOtM,UAAUpB,OACxCyU,EAA2C,IAApBF,EAASrE,OAChCwE,EAAmBd,EAAoBW,EAAS,GAAIzV,EAAM0V,GAC1DG,EAAsBF,EAAcC,EAAWd,EAAoBW,EAAS,GAAIzV,EAAM0V,EACvFX,GAAQa,EAAUhH,IAAYkH,EAAsBD,EAAaD,EAAUhH,GAC5EA,EAAOjH,YACCqN,EAASY,EAAUhH,IAAYmH,EAAuBF,EAAaD,EAAUhH,KACrFA,EAAO7G,aAef,QAAA+N,GAA+BE,EAAmBC,EAAiBrH,GAC/D,MAAOmG,GAAQiB,EAAWpH,IACnBnB,EAAAlD,YAAa0L,GACEpV,EAAG+N,EAAO/G,WAAY/G,EAAG8N,EAAO7O,MAAMe,GACxC8N,EAAOtM,WAI/B,QAAAyT,GAAgCC,EAAmBC,EAAiBrH,GAChE,MAAOoG,GAASgB,EAAWpH,IACpBnB,EAAAlD,YAAa0L,GACEpV,EAAG+N,EAAO3G,YAAanH,EAAG8N,EAAO7O,MAAMe,GACzC8N,EAAOtM,WAI/B,QAAA4S,GAA2BN,EAAgBsB,EAAqBR,GAC5D,GAAMzV,GAAe2U,EAAO5S,SAG5B,SAF+B/B,EAAKa,EAAI,EAAI,EAAI,EAAI8T,EAAO7U,MAAMe,IACjCoV,EAAcR,EAAed,EAAO7U,MAAMe,IAC7BiF,KAAK+N,IAAK7T,EAAKa,GAEhE,QAAAgU,GAA6BF,EAAgB1N,EAAiBwO,GAE1D,GAAMzV,GAAe2U,EAAO5S,UACtBjC,EAAgB6U,EAAOvS,WACvB8T,EAAuBjB,EAAkBN,EAAQ1N,EAAUhG,OAAQwU,GACrEU,EAAiBrW,EAAMc,EAAMZ,EAAKY,EAAIsV,EACpCE,EAAoBD,EAASlP,EAAUjG,KAM7C,OAJKoV,GAAY,IACbD,GAAsB,EAAZC,IAIVxV,EAAGkF,KAAK+N,IAAKsC,GACbtV,EAAGoG,EAAUhG,OAASwU,EAAe,IAG7C,QAAAX,GAAiBhV,EAAe6O,GAC5B,MAAO7O,GAAMc,GAAK+N,EAAO7O,MAAMc,EAEnC,QAAAmU,GAAkBjV,EAAe6O,GAC7B,MAAO7O,GAAMc,GAAK+N,EAAO7O,MAAMc,EAAI+N,EAAOtM,UAAUrB,MAAQ,EfiiChExB,OAAOC,eAAeH,EAAS,cAAgBI,OAAO,GerrCtD,IAAA2N,GAAA9N,EAAA,GACA+N,EAAA/N,EAAA,GAIAiO,EAAAjO,EAAA,EAoJAD,GAAAwB,SACI2S,SAAQA,IfuqCN,SAAUpU,EAAQC,EAASC,GAEjC,YAEAC,QAAOC,eAAeH,EAAS,cAAgBI,OAAO,GgBr0CtD,IAAK2W,IAAL,SAAKA,GACDA,IAAA,eACAA,IAAA,mBACAA,IAAA,qBACAA,IAAA,gBAJCA,WAOL/W,EAAAwB,QAAeuV,GhB20CT,SAAUhX,EAAQC,EAASC,GAEjC,YAEA,IAAI0G,GAAa5F,MAAQA,KAAK4F,WAAc,WACxC,GAAIC,GAAgB1G,OAAO2G,iBACpBC,uBAA2BC,QAAS,SAAUC,EAAGC,GAAKD,EAAEF,UAAYG,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAIC,KAAKD,GAAOA,EAAEE,eAAeD,KAAIF,EAAEE,GAAKD,EAAEC,IACzE,OAAO,UAAUF,EAAGC,GAEhB,QAASG,KAAOrG,KAAKsG,YAAcL,EADnCJ,EAAcI,EAAGC,GAEjBD,EAAE/E,UAAkB,OAANgF,EAAa/G,OAAOoH,OAAOL,IAAMG,EAAGnF,UAAYgF,EAAEhF,UAAW,GAAImF,OAGvFlH,QAAOC,eAAeH,EAAS,cAAgBI,OAAO,GiB/1CtD,IAAAmH,GAAAtH,EAAA,GAKA+W,EAAA,SAAAtP,GAKI,QAAAsP,GAAaxW,EAAeC,EAAYG,GAAxC,GAAAE,GAAAC,KACUF,GACFgJ,KAAQ,MACRC,OAAU,QACVC,eAAgB,MjB+1CpB,OiB71CAjJ,GAAA4G,EAAAI,KAAA/G,KAAOP,EAAOC,GAAQa,EAAG,EAAGC,GAAI,GAAK,OAAQX,EAAWC,IAAYE,KACpED,EAAKoI,SAAW,EAEhBpI,EAAKuS,aAAc,EjB01CZvS,EiB5zCf,MA5CoC6F,GAAAqQ,EAAAtP,GAgBzBsP,EAAA/U,UAAAY,gBAAP,WACI,OACIvB,EAAGP,KAAKP,MAAMc,EAAIkF,KAAKyQ,KAAKlW,KAAKL,KAAKY,GACtCC,EAAGR,KAAKP,MAAMe,EAAIiF,KAAKyQ,KAAKlW,KAAKL,KAAKa,KAGvCyV,EAAA/U,UAAAqR,YAAP,WACI,MAAOvS,MAAKmI,UAET8N,EAAA/U,UAAAsI,OAAP,SAAerB,GAKX,MAJAnI,MAAKmI,UAAYA,EACbnI,KAAKmI,UAAY,GACjBnI,KAAKmB,UAEFnB,KAAKmI,UAET8N,EAAA/U,UAAAkR,SAAP,SAAiBoB,GACb,MAAOxT,MAAKL,KAAKyS,SAAUoB,IAExByC,EAAA/U,UAAAgO,OAAP,WACIlP,KAAKP,MAAQO,KAAK8B,kBAClB9B,KAAKqB,qBAEF4U,EAAA/U,UAAAC,QAAP,WAEInB,KAAKsS,aAAc,EACnBtS,KAAKH,UAAUuB,YAAYpB,KAAKC,aAExCgW,GA5CoCzP,EAAA/F,QjBw4CpCxB,GAAQwB,QAAUwV,GAKZ,SAAUjX,EAAQC,EAASC,GAEjC,YAEAC,QAAOC,eAAeH,EAAS,cAAgBI,OAAO,GkBt5CtD,IAAAyL,GAAA5L,EAAA,GAEAiX,EAAA,WAOI,QAAAA,GAAapI,EAAwBqI,EAAmBvW,GACpDiL,EAAArK,QAAO2B,IAAK,aACZpC,KAAK+N,aAAeA,EACpB/N,KAAKH,UAAYA,EACjBG,KAAKC,WAAaC,SAASiD,cAAe,OAC1CnD,KAAKC,WAAW+L,UAAUxJ,IAAK,cAC/BxC,KAAKC,WAAWmL,UAAY+K,EAAUE,aAAc/V,OAAS8V,IAC7DpW,KAAK0E,MAAQ1E,KAAKC,WAAWqW,cAAe,IAAIH,EAAUI,GAAGC,OAC7DxW,KAAK4N,QAAU5N,KAAKC,WAAWqW,cAAe,IAAIH,EAAUI,GAAGE,SAE/D5W,EAAUoB,YAAajB,KAAKC,YAwCpC,MArCWkW,GAAAjV,UAAAkQ,YAAP,SAAoB1M,GAChB1E,KAAK0E,MAAM0G,UAAY9K,OAAQoE,IASpByR,EAAAE,aAAf,SAA6BD,GACzB,MAAO,2BACSA,EAAS,2CACED,EAAUI,GAAGC,MAAK,wCAC9BL,EAAUI,GAAGE,QAAO,sBAI/BN,EAAAjV,UAAAwV,gBAAR,WACI,GAAMC,GAAoB3W,KAAK4N,QAAQ0I,cAAc,IAAIH,EAAUI,GAAGK,SACjED,KACDA,EAASE,GAAK,KAIfV,EAAAjV,UAAAoQ,UAAP,SAAkB5H,GAAlB,GAAA3J,GAAAC,IACIA,MAAK0W,iBACL,IAAMI,GAAO5W,SAASiD,cAAe,MACrC2T,GAAKC,QAAU,WACXhX,EAAKgO,aAAcrE,GACnB3J,EAAK2W,kBACLI,EAAKD,GAAKV,EAAUI,GAAGK,UAE3BE,EAAKD,GAAKV,EAAUI,GAAGK,SACvBE,EAAK1L,UAAY9K,OAASoJ,GAC1B1J,KAAK4N,QAAQ3M,YAAa6V,IA/BfX,EAAAI,IACXC,MAAO,QACPC,QAAS,UACTG,SAAU,YA8BlBT,IlBy4CAlX,GAAQwB,QkBl8Ca0V,GlBu8Cf,SAAUnX,EAAQC,EAASC,GAEjC,YAEA,IAAI0G,GAAa5F,MAAQA,KAAK4F,WAAc,WACxC,GAAIC,GAAgB1G,OAAO2G,iBACpBC,uBAA2BC,QAAS,SAAUC,EAAGC,GAAKD,EAAEF,UAAYG,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAIC,KAAKD,GAAOA,EAAEE,eAAeD,KAAIF,EAAEE,GAAKD,EAAEC,IACzE,OAAO,UAAUF,EAAGC,GAEhB,QAASG,KAAOrG,KAAKsG,YAAcL,EADnCJ,EAAcI,EAAGC,GAEjBD,EAAE/E,UAAkB,OAANgF,EAAa/G,OAAOoH,OAAOL,IAAMG,EAAGnF,UAAYgF,EAAEhF,UAAW,GAAImF,OAGvFlH,QAAOC,eAAeH,EAAS,cAAgBI,OAAO,GmBv9CtD,IAAAmH,GAAAtH,EAAA,GAGA8W,EAAA,SAAArP,GAGI,QAAAqP,GAAatN,EAAeb,EAAwBhI,GAApD,GAAAE,GACI4G,EAAAI,KAAA/G,KAAO0I,GACE/H,MAAO,EAAGC,OAAQ,IAClBL,EAAG,EAAGC,EAAG,GACX,OACAX,IAAWG,InBm9ClB,OmBl9CAD,GAAK8H,WAAaA,EnBk9CX9H,EmBh9Cf,MAXoC6F,GAAAoQ,EAAArP,GAWpCqP,GAXoCxP,EAAA/F,QnB+9CpCxB,GAAQwB,QAAUuV,GAKZ,SAAUhX,EAAQC,EAASC,GAEjC,YAEAC,QAAOC,eAAeH,EAAS,cAAgBI,OAAO,GoB5+CtD,IAAA+N,GAAAlO,EAAA,GACAmO,EAAAnO,EAAA,GACA8X,EAAA9X,EAAA,IACA+X,EAAA/X,EAAA,IACAyG,EAAAzG,EAAA,GACA4L,EAAA5L,EAAA,GAGAgY,EAAA,WASI,QAAAA,GAAapL,GACThB,EAAArK,QAAO2B,IAAK,iBACZpC,KAAK8L,GAAKA,EACV9L,KAAKyN,MAAQ,GAAIL,GAAA3M,SAAO,GACxBT,KAAKmX,gBAAkB,GAAIH,GAAAvW,QAAiBT,KAAKyN,MAAMtC,eAAgBnL,KAAKoX,YAAYzL,KAAM3L,OAC9FA,KAAKqX,SAAW,GAAIJ,GAAAxW,QAAUT,KAAKyN,MAAMtC,eAAgBnL,KAAKsX,WAAW3L,KAAM3L,OAwBvF,MArBYkX,GAAAhW,UAAAkW,YAAR,SAAqB7T,GACjB,GAAMgU,GAAwBlK,EAAA5M,QAAU4E,SAAU9B,EAAOoC,EAAAlF,QAAY8E,UAC/DiS,EAAuBnK,EAAA5M,QAAU4E,SAAU9B,EAAOoC,EAAAlF,QAAY+E,QACpExF,MAAKqX,SAASnI,QACV3L,MAAOjD,OAAQiD,GACfgC,SAAUgS,EACV/R,QAASgS,KAIVN,EAAAhW,UAAA0K,KAAP,SAAaC,EAAkB2E,GAC3B3E,EAAUA,EAAUA,EAAUqL,EAAcO,eAAiBP,EAAcO,eAC3EzX,KAAKyN,MAAM7B,KAAMC,IAGbqL,EAAAhW,UAAAoW,WAAR,SAAoB/K,EAAqBC,GAAzC,GAAAzM,GAAAC,IACI8K,GAAArK,QAAO8C,MAAOjD,OAAQiM,IACjBzJ,KAAM,SAAAS,GAAS,MAAAxD,GAAK+L,GAAIvI,EAAOgJ,EAAaC,KAC5CkL,MAAOC,QAAQC,MACf9U,KAAM,WAAM,MAAA/C,GAAK0N,MAAM1B,UA7BjBmL,EAAAO,eAAyB,iBA+B5CP,IpBo+CAjY,GAAQwB,QoB1gDayW,GpB+gDf,SAAUlY,EAAQC,EAASC,GAEjC,YAEAC,QAAOC,eAAeH,EAAS,cAAgBI,OAAO,GqB3hDtD,IAAAgO,GAAAnO,EAAA,GACA2Y,EAAA3Y,EAAA,IACA4L,EAAA5L,EAAA,GAEA4Y,EAAA,WAII,QAAAA,GAAajY,EAAwBkY,GACjCjN,EAAArK,QAAO2B,IAAK,kBACZpC,KAAKH,UAAYA,EACjBG,KAAK+X,cAAgBA,CAErB,IAAMC,GAA0B9X,SAASiD,cAAe,MACxD6U,GAAQhM,UAAUxJ,IAAK,oBACvBxC,KAAKiY,iBAAkBD,GACvBhY,KAAKH,UAAUoB,YAAa+W,GA2CpC,MAxCYF,GAAA5W,UAAA+W,iBAAR,SAA0BpY,GAA1B,GAAAE,GAAAC,KACQkY,GAA6B,CACjCL,GAAApX,QAAUM,QAAS,SAAEwC,EAAO2M,GACxB,GAAMiI,GAA6BjY,SAASiD,cAAc,QACpDiV,EAAqB/K,EAAA5M,QAAU4E,SAAU6K,GACzCmI,EAAyBD,GAAc7U,EAAM+U,SAC/CC,EAAe,EAEnBJ,GAAUnM,UAAUxJ,IAAI,cACnB6V,GAAiBH,GAClBC,EAAU1M,iBAAiB,QAAS,WAChC,GAAM+M,GAAO3Y,EAAUyW,cAAe,YACjCkC,KAAOA,EAAK3B,GAAK,IACtBsB,EAAUtB,GAAK,WACf9W,EAAKgY,cAAe7H,KAExBiI,EAAUnM,UAAUxJ,IAAI,YAExB2V,EAAUnM,UAAUxJ,IAAI,UAGxB+V,EADCF,EACc,gBACPH,EACO3U,EAAMkV,IAEN,aAEnBN,EAAU/M,UAAY0M,EAAgBY,cAAeH,EAAcjY,OAAQ4P,IAC3ErQ,EAAUoB,YAAakX,GACvBD,EAAoBG,KAIbP,EAAAY,cAAf,SAA8BD,EAAalV,GACvC,MAAO,qDACmCkV,EAAG,uBACpClV,EAAK,kBAItBuU,IrBuhDA7Y,GAAQwB,QAAUqX,GAKZ,SAAU9Y,EAAQC,EAASC,GAEjC,YAEAC,QAAOC,eAAeH,EAAS,cAAgBI,OAAO,GsB3lDtD,IAAMsZ,KACAL,SAAU,IAAKG,IAAK,kBACpBH,SAAU,IAAKG,IAAK,iBAG1BxZ,GAAAwB,QAAekY,GtBgmDT,SAAU3Z,EAAQC,EAASC,GAEjC,YAEAC,QAAOC,eAAeH,EAAS,cAAgBI,OAAO,GuBzmDtD,IAAAsG,GAAAzG,EAAA,GAQA0Z,EAAA,WAcI,QAAAA,GAAa/Y,EAAwByX,GACjCtX,KAAKsX,WAAaA,CAElB,IAAMU,GAAmB9X,SAASiD,cAAc,MAChD6U,GAAQhM,UAAUxJ,IAAK,kBACvBwV,EAAQ5M,UAAYwN,EAASC,SAC7B7Y,KAAKuM,YAAcyL,EAAQc,qBAAsB,MAAO,GACxD9Y,KAAK+Y,kBAAoBf,EAAQ1B,cAAe,IAAIsC,EAASrC,GAAGyC,SAAQ,cACxEhZ,KAAKiZ,iBAAmBjB,EAAQ1B,cAAe,IAAIsC,EAASrC,GAAG2C,QAAO,cACtElZ,KAAKmZ,eAAiBnB,EAAQoB,uBAA2BR,EAASrC,GAAGyC,SAAQ,WAAY,GACzFhZ,KAAKqZ,cAAgBrB,EAAQoB,uBAA2BR,EAASrC,GAAG2C,QAAO,WAAY,GACvFlZ,KAAKsZ,YAActB,EAAQ1B,cAAe,IAAIsC,EAASrC,GAAGgD,OAC1DvZ,KAAKwZ,oBAEL3Z,EAAUoB,YAAa+W,GAmD/B,MA3BYY,GAAA1X,UAAAsY,kBAAR,cAAAzZ,GAAAC,IACIA,MAAKmZ,eAAe1N,iBAChB,QACA,WAAM,MAAA1L,GAAK0Z,UAAW9T,EAAAlF,QAAY8E,YACtCvF,KAAKqZ,cAAc5N,iBACf,QACA,WAAM,MAAA1L,GAAK0Z,UAAW9T,EAAAlF,QAAY+E,WACtCxF,KAAKsZ,YAAY7N,iBAAkB,QAAS,WAAM,MAAA1L,GAAKuX,WAAYvX,EAAKwD,MAAOxD,EAAKyM,WAGhFoM,EAAA1X,UAAAuY,UAAR,SAAmBjN,GACVA,IAAW7G,EAAAlF,QAAY8E,UACxBvF,KAAKmZ,eAAenN,UAAUxJ,IAAK,YACnCxC,KAAKqZ,cAAcrN,UAAUC,OAAQ,aAC7BO,IAAW7G,EAAAlF,QAAY+E,UAC/BxF,KAAKmZ,eAAenN,UAAUC,OAAQ,YACtCjM,KAAKqZ,cAAcrN,UAAUxJ,IAAK,aAEtCxC,KAAKwM,OAASA,GAGXoM,EAAA1X,UAAAgO,OAAP,SAAewK,GACX1Z,KAAKuD,OAASmW,EAAQnW,MACtBvD,KAAKuM,YAAYnB,UAAY,UAAUsO,EAAQnW,MAC/CvD,KAAK+Y,kBAAkB3N,UAAY,cAAcsO,EAAQnU,SACzDvF,KAAKiZ,iBAAiB7N,UAAY,cAAcsO,EAAQlU,SA9C7CoT,EAAArC,IACXyC,SAAU,WACVE,QAAS,UACTK,MAAO,SAGIX,EAAAC,SAAY,sGAGED,EAASrC,GAAGyC,SAAQ,yEAE3BJ,EAASrC,GAAGyC,SAAQ,mFAEbJ,EAASrC,GAAG2C,QAAO,iFAE1BN,EAASrC,GAAG2C,QAAO,wFAGvBN,EAASrC,GAAGgD,MAAK,yBA8BvCX,IvBkkDA3Z,GAAQwB,QuBjpDamY,KvBqpDlB","file":"app.bundle.js","sourcesContent":["webpackJsonp([0],[\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Constants_1 = __webpack_require__(3);\r\nvar Trajectory_1 = __webpack_require__(12);\r\nvar Entity = /** @class */ (function () {\r\n    function Entity(point, size, traj, type, mountNode, attributes) {\r\n        var _this = this;\r\n        this.domElement = document.createElementNS(Constants_1.SVGNAMESPACE, type);\r\n        this.type = type;\r\n        this.point = point;\r\n        this.domElement.setAttribute('x', String(this.point.x));\r\n        this.domElement.setAttribute('y', String(this.point.y));\r\n        this.traj = new Trajectory_1.default(traj);\r\n        if (this.type === 'circle') {\r\n            this.radius = +size;\r\n            this.domElement.setAttribute('r', String(this.radius));\r\n        }\r\n        else {\r\n            this.size = size;\r\n            this.domElement.setAttribute('width', String(this.size.width));\r\n            this.domElement.setAttribute('height', String(this.size.height));\r\n        }\r\n        if (attributes !== undefined) {\r\n            Object.keys(attributes).forEach(function (key) {\r\n                return _this.domElement.setAttribute(key, String(attributes[key]));\r\n            });\r\n        }\r\n        this.mountNode = mountNode;\r\n        this.mountNode.appendChild(this.domElement);\r\n    }\r\n    Entity.prototype.destroy = function () {\r\n        this.mountNode.removeChild(this.domElement);\r\n    };\r\n    Entity.prototype.updateDOMPosition = function (newPoint) {\r\n        var xAttr = '';\r\n        var yAttr = '';\r\n        if (newPoint !== undefined) {\r\n            this.point = newPoint;\r\n        }\r\n        if (this.type === 'circle') {\r\n            xAttr = 'cx';\r\n            yAttr = 'cy';\r\n        }\r\n        else if (this.type === 'rect') {\r\n            xAttr = 'x';\r\n            yAttr = 'y';\r\n        }\r\n        this.domElement.setAttribute(xAttr, String(this.point.x));\r\n        this.domElement.setAttribute(yAttr, String(this.point.y));\r\n    };\r\n    Entity.prototype.updateSize = function (size) {\r\n        if (this.type === 'circle') {\r\n            if (size)\r\n                this.radius = +size;\r\n            this.domElement.setAttribute('r', String(this.radius));\r\n        }\r\n        else {\r\n            if (size)\r\n                this.size = size;\r\n            this.domElement.setAttribute('width', String(this.size.width));\r\n            this.domElement.setAttribute('height', String(this.size.height));\r\n        }\r\n    };\r\n    Entity.prototype.getTraj = function () {\r\n        return this.traj;\r\n    };\r\n    Entity.prototype.invertTraj = function (axis) {\r\n        this.traj.invert(axis);\r\n    };\r\n    Entity.prototype.getNextPosition = function () {\r\n        return {\r\n            x: this.point.x + this.traj.x,\r\n            y: this.point.y + this.traj.y\r\n        };\r\n    };\r\n    Entity.prototype.getPoint = function () {\r\n        return this.point;\r\n    };\r\n    Entity.prototype.getSize = function () {\r\n        return this.size;\r\n    };\r\n    Entity.prototype.getRadius = function () {\r\n        return this.radius;\r\n    };\r\n    return Entity;\r\n}());\r\nexports.default = Entity;\r\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar PlayerTypes;\r\n(function (PlayerTypes) {\r\n    PlayerTypes[\"capture\"] = \"capture\";\r\n    PlayerTypes[\"defender\"] = \"defender\";\r\n})(PlayerTypes || (PlayerTypes = {}));\r\nexports.default = PlayerTypes;\r\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Load = /** @class */ (function () {\r\n    function Load() {\r\n    }\r\n    Load.css = function (file) {\r\n        if (this.loadedCss.has(file))\r\n            return;\r\n        this.loadedCss.add(file);\r\n        var options = {\r\n            method: 'get',\r\n            headers: { 'Content-Type': 'text/css' }\r\n        };\r\n        fetch(\"css/\" + file + \".css\", options)\r\n            .then(function (resp) { return resp.text(); })\r\n            .then(Load.attachToDocument);\r\n    };\r\n    Load.attachToDocument = function (resp) {\r\n        var styleTag = document.createElement('style');\r\n        var style = document.createTextNode(resp);\r\n        styleTag.appendChild(style);\r\n        document.head.appendChild(styleTag);\r\n    };\r\n    Load.level = function (level) {\r\n        var _this = this;\r\n        if (this.loadedLevels.has(level))\r\n            return this.serveFromCache(level);\r\n        if (this.pendingLevels.has(level))\r\n            return this.pendingLevels.get(level);\r\n        // this.loadedLevels.add( level );\r\n        var options = {\r\n            method: 'get',\r\n            headers: { 'Content-Type': 'application/json' }\r\n        };\r\n        var promise = fetch(\"levels/\" + level + \".json\", options)\r\n            .then(function (resp) { return resp.json(); })\r\n            .then(this.toLevel)\r\n            .then(function (levelI) { return _this.saveLevel(level, levelI); });\r\n        this.pendingLevels.set(level, promise);\r\n        return promise;\r\n    };\r\n    Load.toLevel = function (level) {\r\n        return level;\r\n    };\r\n    Load.saveLevel = function (level, levelI) {\r\n        this.pendingLevels.delete(level);\r\n        this.loadedLevels.set(level, levelI);\r\n        return Promise.resolve(levelI);\r\n    };\r\n    Load.serveFromCache = function (level) {\r\n        return Promise.resolve(this.loadedLevels.get(level));\r\n    };\r\n    Load.loadedCss = new Set();\r\n    Load.loadedLevels = new Map();\r\n    Load.pendingLevels = new Map();\r\n    return Load;\r\n}());\r\nexports.default = Load;\r\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SVGNAMESPACE = \"http://www.w3.org/2000/svg\";\r\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar PlayerTypes_1 = __webpack_require__(1);\r\nfunction getKey(level) {\r\n    return \"level-\" + level;\r\n}\r\nfunction setScore(level, playerType, score) {\r\n    var levelKey = getKey(level);\r\n    var raw = localStorage.getItem(levelKey);\r\n    if (!raw) {\r\n        localStorage.setItem(levelKey, JSON.stringify((_a = {},\r\n            _a[playerType] = score,\r\n            _a)));\r\n    }\r\n    else {\r\n        var data = JSON.parse(raw);\r\n        if (!data[playerType] || score > data[playerType]) {\r\n            data[playerType] = score;\r\n            localStorage.setItem(levelKey, JSON.stringify(data));\r\n        }\r\n    }\r\n    var _a;\r\n}\r\nfunction getScore(level, type) {\r\n    var levelKey = getKey(level);\r\n    var raw = localStorage.getItem(levelKey);\r\n    if (!raw)\r\n        return 0;\r\n    var info = JSON.parse(raw);\r\n    if (!type) {\r\n        if (info.defender && info.capture)\r\n            return Math.max(info.defender, info.capture);\r\n        if (info.defender)\r\n            return info.defender;\r\n        if (info.capture)\r\n            return info.capture;\r\n    }\r\n    if (type === PlayerTypes_1.default.capture)\r\n        return info.capture ? info.capture : 0;\r\n    if (type === PlayerTypes_1.default.defender)\r\n        return info.defender ? info.defender : 0;\r\n}\r\nexports.default = {\r\n    setScore: setScore,\r\n    getScore: getScore\r\n};\r\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Constants_1 = __webpack_require__(3);\r\nvar Entity_1 = __webpack_require__(0);\r\nvar Reward_1 = __webpack_require__(15);\r\nvar Paddle = /** @class */ (function (_super) {\r\n    __extends(Paddle, _super);\r\n    function Paddle(boardSize, mountNode, paddleConfig, emitBullet) {\r\n        var _this = _super.call(this, paddleConfig.position, paddleConfig.size, { x: 0, y: 0 }, 'rect', mountNode, paddleConfig.attributes || Paddle.defaults.attributes) || this;\r\n        _this.boardSize = boardSize;\r\n        _this.emitBullet = emitBullet;\r\n        _this.sheild = document.createElementNS(Constants_1.SVGNAMESPACE, 'circle');\r\n        _this.sheild.setAttribute('cx', String(paddleConfig.position.x + paddleConfig.size.width / 2));\r\n        _this.sheild.setAttribute('cy', String(paddleConfig.position.y));\r\n        _this.sheild.style.opacity = '0.3';\r\n        _this.moveAmount = Paddle.defaults.moveAmount;\r\n        return _this;\r\n    }\r\n    Paddle.prototype.moveLeft = function () {\r\n        var nxtLeft = this.nextLeft();\r\n        if (this.point.x !== nxtLeft) {\r\n            this.point.x = nxtLeft;\r\n            this.updateDOMPosition();\r\n        }\r\n    };\r\n    Paddle.prototype.nextLeft = function () {\r\n        var maxMove = this.moveAmount;\r\n        while ((this.point.x - maxMove) < 0) {\r\n            maxMove--;\r\n        }\r\n        return this.point.x - maxMove;\r\n    };\r\n    Paddle.prototype.moveRight = function () {\r\n        var nxtRight = this.nextRight();\r\n        if (this.point.x !== nxtRight) {\r\n            this.point.x = nxtRight;\r\n            this.updateDOMPosition();\r\n        }\r\n    };\r\n    Paddle.prototype.nextRight = function () {\r\n        var maxMove = this.moveAmount;\r\n        while ((this.point.x + this.size.width + maxMove) > this.boardSize.width) {\r\n            maxMove--;\r\n        }\r\n        return this.point.x + maxMove;\r\n    };\r\n    Paddle.prototype.applyReward = function (rewardType) {\r\n        this.rewardType = rewardType;\r\n        if (this.rewardType === Reward_1.default.wide)\r\n            this.makeWide();\r\n        else\r\n            this.makeDefault();\r\n        this.updateColor();\r\n    };\r\n    Paddle.prototype.updateColor = function () {\r\n        this.domElement.setAttribute('fill', Paddle.getColor(this.rewardType));\r\n    };\r\n    Paddle.getColor = function (strength) {\r\n        switch (strength) {\r\n            case 7: return '#FF0D72';\r\n            case 6: return '#0DC2FF';\r\n            case 5: return '#0DFF72';\r\n            case 4: return '#F538FF';\r\n            case 3: return '#FF8E0D';\r\n            case 2: return '#FFE138';\r\n            default:\r\n            case 1: return '#3877FF';\r\n        }\r\n    };\r\n    Paddle.prototype.activateSheld = function () {\r\n    };\r\n    Paddle.prototype.useReward = function () {\r\n        switch (this.rewardType) {\r\n            case Reward_1.default.machine:\r\n                this.shootMachine();\r\n                break;\r\n            case Reward_1.default.rocket:\r\n                this.shootRocket();\r\n                break;\r\n            default: break;\r\n        }\r\n    };\r\n    Paddle.prototype.shootRocket = function () {\r\n        var start = {\r\n            x: this.point.x + (this.size.width / 2),\r\n            y: this.point.y - this.size.height\r\n        };\r\n        var size = {\r\n            width: 3, height: 9\r\n        };\r\n        this.emitBullet(start, size);\r\n    };\r\n    Paddle.prototype.shootMachine = function () {\r\n        var size = {\r\n            width: 1, height: 3\r\n        };\r\n        this.emitBullet({\r\n            x: this.point.x,\r\n            y: this.point.y - this.size.height\r\n        }, size);\r\n        this.emitBullet({\r\n            x: this.point.x + this.size.width,\r\n            y: this.point.y - this.size.height\r\n        }, size);\r\n    };\r\n    Paddle.prototype.makeWide = function () {\r\n        this.updateSize(Paddle.defaults.sizes.wide);\r\n    };\r\n    Paddle.prototype.makeDefault = function () {\r\n        this.updateSize(Paddle.defaults.sizes.default);\r\n    };\r\n    Paddle.prototype.moveUp = function () { };\r\n    Paddle.prototype.moveDown = function () { };\r\n    Paddle.defaults = {\r\n        sizes: {\r\n            default: { width: 9, height: 3 },\r\n            wide: { width: 14, height: 3 }\r\n        },\r\n        attributes: {\r\n            'fill': 'gray',\r\n            'stroke': 'black',\r\n            'stroke-width': '0.5'\r\n        },\r\n        moveAmount: 3\r\n    };\r\n    return Paddle;\r\n}(Entity_1.default));\r\nexports.default = Paddle;\r\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Entity_1 = __webpack_require__(0);\r\nvar Guy = /** @class */ (function (_super) {\r\n    __extends(Guy, _super);\r\n    function Guy(mountNode, guyConfig) {\r\n        var _this = _super.call(this, guyConfig.position, guyConfig.size, { x: 0, y: 0 }, 'rect', mountNode, guyConfig.attributes || Guy.defaults.attributes) || this;\r\n        _this.hitCount = 0;\r\n        _this.speed = guyConfig.speed || Guy.defaults.speed;\r\n        return _this;\r\n    }\r\n    Guy.prototype.moveLeft = function () {\r\n        this.point.x -= this.speed;\r\n        this.updateDOMPosition();\r\n    };\r\n    Guy.prototype.moveRight = function () {\r\n        this.point.x += this.speed;\r\n        this.updateDOMPosition();\r\n    };\r\n    Guy.prototype.moveUp = function () {\r\n        this.point.y -= this.speed;\r\n        this.updateDOMPosition();\r\n    };\r\n    Guy.prototype.moveDown = function () {\r\n        this.point.y += this.speed;\r\n        this.updateDOMPosition();\r\n    };\r\n    Guy.prototype.grow = function () {\r\n        if (this.size.width >= Guy.MAX_WIDTH || this.size.height >= Guy.MAX_HEIGHT)\r\n            return;\r\n        this.size.width++;\r\n        this.size.height++;\r\n        this.updateSize();\r\n        return;\r\n    };\r\n    Guy.prototype.getHit = function (str) {\r\n        this.hitCount++;\r\n        if (this.hitCount % 10) {\r\n            this.grow();\r\n        }\r\n        return this.hitCount;\r\n    };\r\n    // TODO: implement functions below\r\n    Guy.prototype.applyReward = function (reward) { };\r\n    Guy.prototype.setIndex = function (index) { this.index = index; };\r\n    Guy.prototype.useReward = function () { };\r\n    Guy.defaults = {\r\n        speed: 1,\r\n        attributes: {\r\n            'fill': 'gray',\r\n            'stroke': 'black',\r\n            'stroke-width': '0.5'\r\n        }\r\n    };\r\n    Guy.MAX_WIDTH = 5;\r\n    Guy.MAX_HEIGHT = 5;\r\n    return Guy;\r\n}(Entity_1.default));\r\nexports.default = Guy;\r\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction hitsIt(pointX, blockStart, width) {\r\n    var val = (blockStart + width) - pointX;\r\n    return val >= 0 && val <= width;\r\n}\r\n// TODO: make isCollision be abstract, taking input Types (block|ball|paddle)\r\n//      and delegating work to functions that handle that case\r\nfunction isCollision(p1, p2, p2Size) {\r\n    return hitsIt(p1.x, p2.x, p2Size.width) &&\r\n        hitsIt(p1.y, p2.y, p2Size.height);\r\n}\r\nexports.isCollision = isCollision;\r\nfunction isNear(circlePoint, blockPoint, blockSize) {\r\n    // TODO: This will have to change when the ball can be different radius\r\n    var ballRadius = 3;\r\n    var blockDist = Math.max(blockSize.width, blockSize.height);\r\n    var distance = getDistance(circlePoint, blockPoint);\r\n    return distance <= blockDist + ballRadius;\r\n}\r\nexports.isNear = isNear;\r\nfunction getDistance(p1, p2) {\r\n    var distX = p1.x - p2.x;\r\n    var distY = p1.y - p2.y;\r\n    return Math.sqrt((distX) * (distX) +\r\n        (distY) * (distY));\r\n}\r\nexports.getDistance = getDistance;\r\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Loader_1 = __webpack_require__(2);\r\nvar Modal = /** @class */ (function () {\r\n    function Modal(showClose) {\r\n        Loader_1.default.css('Modal');\r\n        var mdl = document.createElement('div');\r\n        var content = document.createElement('div');\r\n        var p = document.createElement('p');\r\n        var extensionPoint = document.createElement('div');\r\n        mdl.setAttribute('class', 'modal');\r\n        content.setAttribute('class', 'modal-content');\r\n        p.innerHTML = 'Game Paused';\r\n        extensionPoint.setAttribute('class', 'modal-template');\r\n        if (showClose !== false) {\r\n            this.attachCloseButton(content);\r\n        }\r\n        content.appendChild(p);\r\n        content.appendChild(extensionPoint);\r\n        mdl.appendChild(content);\r\n        mdl.style.display = 'none';\r\n        document.body.appendChild(mdl);\r\n        this.mdl = mdl;\r\n        this.p = p;\r\n        this.content = content;\r\n        this.extensionPoint = extensionPoint;\r\n    }\r\n    Modal.prototype.attachCloseButton = function (content) {\r\n        var clsBtn = document.createElement('span');\r\n        clsBtn.setAttribute('class', 'closeBtn');\r\n        clsBtn.addEventListener('click', this.closeButton.bind(this));\r\n        clsBtn.innerHTML = '&times;';\r\n        content.appendChild(clsBtn);\r\n    };\r\n    Modal.prototype.show = function (message, cb) {\r\n        if (cb)\r\n            this.cb = cb;\r\n        this.p.innerHTML = message;\r\n        this.mdl.style.display = 'block';\r\n    };\r\n    Modal.prototype.closeButton = function () {\r\n        if (this.cb) {\r\n            this.cb();\r\n            this.cb = null;\r\n        }\r\n        else {\r\n            this.hide();\r\n        }\r\n    };\r\n    Modal.prototype.hide = function () {\r\n        this.p.innerHTML = '';\r\n        this.mdl.style.display = 'none';\r\n        this.content.classList.remove('success', 'fail');\r\n    };\r\n    return Modal;\r\n}());\r\nexports.default = Modal;\r\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar GameBoard_1 = __webpack_require__(10);\r\nvar LevelSelector_1 = __webpack_require__(19);\r\nvar Main = /** @class */ (function () {\r\n    function Main(mountNode) {\r\n        this.mountNode = mountNode;\r\n        this.levelSelector = new LevelSelector_1.default(this.setLevel.bind(this));\r\n        this.levelSelector.show();\r\n    }\r\n    Main.prototype.setLevel = function (level, levelNumber, option) {\r\n        this.clearLevel();\r\n        this.gameBoard = new GameBoard_1.default(level.size, this.mountNode, this.levelSelector, levelNumber, option);\r\n        this.gameBoard.init(level);\r\n    };\r\n    Main.prototype.clearLevel = function () {\r\n        if (this.gameBoard) {\r\n            delete this.gameBoard;\r\n        }\r\n    };\r\n    return Main;\r\n}());\r\nexports.default = Main;\r\nvar start = new Main(document.getElementById('gameBoard'));\r\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Constants_1 = __webpack_require__(3);\r\nvar Ball_1 = __webpack_require__(11);\r\nvar Block_1 = __webpack_require__(13);\r\nvar PlayerTypes_1 = __webpack_require__(1);\r\nvar AI_1 = __webpack_require__(14);\r\nvar Paddle_1 = __webpack_require__(5);\r\nvar Guy_1 = __webpack_require__(6);\r\nvar Bullet_1 = __webpack_require__(16);\r\nvar CollisionUtil_1 = __webpack_require__(7);\r\nvar Modal_1 = __webpack_require__(8);\r\nvar UserScore_1 = __webpack_require__(4);\r\nvar StatusBar_1 = __webpack_require__(17);\r\nvar Reward_1 = __webpack_require__(18);\r\nvar GameBoard = /** @class */ (function () {\r\n    function GameBoard(size, mountNode, levelSelector, levelNumber, option) {\r\n        this.size = size;\r\n        this.mountNode = mountNode;\r\n        this.levelSelector = levelSelector;\r\n        this.levelNumber = levelNumber;\r\n        this.option = option;\r\n        this.activeKeys = new Map();\r\n        this.modal = new Modal_1.default();\r\n        this.balls = [];\r\n        this.bullets = [];\r\n        this.rewards = [];\r\n        this.levelEnded = false;\r\n        if (this.option === PlayerTypes_1.default.defender) {\r\n            this.score = 0;\r\n        }\r\n        else if (this.option === PlayerTypes_1.default.capture) {\r\n            this.score = 200;\r\n        }\r\n        this.domElement = document.createElementNS(Constants_1.SVGNAMESPACE, 'svg');\r\n        this.domElement.setAttribute('xmlns', Constants_1.SVGNAMESPACE);\r\n        this.domElement.setAttribute('width', '85%');\r\n        this.domElement.setAttribute('height', '100%');\r\n        // TODO: figure out how to set background to SVG Element\r\n        //       or have a rect container that the rest of the elements go on to, instead of SVG element\r\n        this.domElement.setAttribute('fill', 'black');\r\n        this.domElement.setAttribute('viewBox', '0 0 ' + this.size.width + ' ' + this.size.height);\r\n        // TODO: use classes instead of inline styles\r\n        this.domElement.setAttribute('style', 'border:1px solid black;');\r\n        this.statusBar = new StatusBar_1.default(this.rewardSelect.bind(this), levelNumber, this.mountNode);\r\n        mountNode.appendChild(this.domElement);\r\n    }\r\n    GameBoard.prototype.rewardSelect = function (reward) {\r\n        this.player.applyReward(reward);\r\n    };\r\n    GameBoard.prototype.init = function (level) {\r\n        // build stuff\r\n        this.renderedBlocks = this.renderBlocks(level.blocks);\r\n        this.balls = this.renderBalls(level.balls);\r\n        this.buildPlayerAndAI(level.paddle, level.guy);\r\n        document.body.addEventListener('keydown', this.globalKeyListener.bind(this));\r\n        this.start();\r\n    };\r\n    GameBoard.prototype.buildPlayerAndAI = function (paddleConfig, guyConfig) {\r\n        this.paddle = this.buildPaddle(paddleConfig);\r\n        this.guy = this.buildGuy(guyConfig);\r\n        if (this.option === PlayerTypes_1.default.defender) {\r\n            this.player = this.paddle;\r\n            this.ai = this.guy;\r\n        }\r\n        else if (this.option === PlayerTypes_1.default.capture) {\r\n            this.player = this.guy;\r\n            this.ai = this.paddle;\r\n        }\r\n    };\r\n    GameBoard.prototype.destroy = function () {\r\n        document.body.removeEventListener('keydown', this.globalKeyListener.bind(this));\r\n        while (this.mountNode.hasChildNodes()) {\r\n            this.mountNode.removeChild(this.mountNode.lastChild);\r\n        }\r\n    };\r\n    GameBoard.prototype.start = function () {\r\n        // TODO give the user a count down before starting\r\n        this.modal.hide();\r\n        this.attachKeyListeners();\r\n        this.updateInterval = setInterval(this.update.bind(this), 50);\r\n        this.isPaused = false;\r\n    };\r\n    GameBoard.prototype.removeKeyListeners = function () {\r\n        document.body.removeEventListener('keydown', this.keyUpDownHandler);\r\n        document.body.removeEventListener('keyup', this.keyUpDownHandler);\r\n    };\r\n    GameBoard.prototype.attachKeyListeners = function () {\r\n        document.body.addEventListener('keydown', this.keyUpDownHandler.bind(this));\r\n        document.body.addEventListener('keyup', this.keyUpDownHandler.bind(this));\r\n    };\r\n    GameBoard.prototype.buildPaddle = function (paddleConfig) {\r\n        return new Paddle_1.default(this.size, this.domElement, paddleConfig, this.createBullet.bind(this));\r\n    };\r\n    GameBoard.prototype.buildGuy = function (guyConfig) {\r\n        return new Guy_1.default(this.domElement, guyConfig);\r\n    };\r\n    GameBoard.prototype.createBullet = function (start, size) {\r\n        this.bullets.push(new Bullet_1.default(start, size, this.domElement));\r\n    };\r\n    GameBoard.prototype.buildBall = function (ballConfig) {\r\n        return new Ball_1.default(ballConfig, this.domElement);\r\n    };\r\n    GameBoard.prototype.renderBalls = function (balls) {\r\n        return balls.map(this.buildBall, this);\r\n    };\r\n    GameBoard.prototype.renderBlocks = function (blocks) {\r\n        return blocks.map(this.renderBlock, this);\r\n    };\r\n    GameBoard.prototype.renderBlock = function (block) {\r\n        return new Block_1.default(block, this.domElement, this.dropReward.bind(this));\r\n    };\r\n    GameBoard.prototype.destroyBlock = function (index) {\r\n        this.renderedBlocks.splice(index, 1);\r\n    };\r\n    GameBoard.prototype.dropReward = function (start, type) {\r\n        this.rewards.push(new Reward_1.default(start, type, this.domElement));\r\n    };\r\n    GameBoard.prototype.getBlock = function (point) {\r\n        var block;\r\n        this.renderedBlocks.some(function (b, i) {\r\n            var blockPoint = b.getPoint();\r\n            var blockSize = b.getSize();\r\n            if (CollisionUtil_1.isNear(point, blockPoint, blockSize) &&\r\n                CollisionUtil_1.isCollision(point, blockPoint, blockSize)) {\r\n                block = b;\r\n                block.setIndex(i);\r\n            }\r\n            return Boolean(block);\r\n        });\r\n        return block;\r\n    };\r\n    GameBoard.prototype.getGuy = function (point) {\r\n        var guyPoint = this.guy.getPoint();\r\n        var guySize = this.guy.getSize();\r\n        if (CollisionUtil_1.isNear(point, guyPoint, guySize) &&\r\n            CollisionUtil_1.isCollision(point, guyPoint, guySize)) {\r\n            return this.guy;\r\n        }\r\n    };\r\n    GameBoard.prototype.endGame = function (message, success) {\r\n        clearInterval(this.updateInterval);\r\n        this.levelEnded = true;\r\n        this.levelSelector.show(message, success);\r\n        this.destroy();\r\n    };\r\n    GameBoard.prototype.stop = function () {\r\n        this.modal.show('Game Paused', this.start.bind(this));\r\n        this.isPaused = true;\r\n        clearInterval(this.updateInterval);\r\n    };\r\n    GameBoard.prototype.isGameEnded = function () {\r\n        var msg;\r\n        var done = false;\r\n        var success;\r\n        if (this.option === PlayerTypes_1.default.defender) {\r\n            if (this.renderedBlocks.length === 0) {\r\n                msg = 'Level Complete!';\r\n                success = true;\r\n                done = true;\r\n            }\r\n            else if (this.balls.length === 0) {\r\n                msg = 'Level Failed!';\r\n                success = false;\r\n                done = true;\r\n            }\r\n        }\r\n        else if (this.option === PlayerTypes_1.default.capture) {\r\n            if (this.renderedBlocks.length === 0) {\r\n                msg = 'Level Failed!';\r\n                success = false;\r\n                done = true;\r\n            }\r\n            else if (this.balls.length === 0) {\r\n                msg = 'Level Complete!';\r\n                success = true;\r\n                done = true;\r\n            }\r\n        }\r\n        if (done)\r\n            this.endGame(msg, success);\r\n        return done;\r\n    };\r\n    GameBoard.prototype.update = function () {\r\n        if (this.isGameEnded()) {\r\n            UserScore_1.default.setScore(this.levelNumber, this.option, this.score);\r\n            return;\r\n        }\r\n        else {\r\n            this.updateBalls();\r\n            this.updateBullets();\r\n            this.updateRewards();\r\n            this.dispatchActions();\r\n            this.updateAI();\r\n        }\r\n    };\r\n    GameBoard.prototype.updateScore = function () {\r\n        if (this.option === PlayerTypes_1.default.defender) {\r\n            this.score += 5;\r\n        }\r\n        else if (this.option === PlayerTypes_1.default.capture) {\r\n            this.score -= 5;\r\n        }\r\n        this.statusBar.updateScore(this.score);\r\n    };\r\n    GameBoard.prototype.applyReward = function (reward, what) {\r\n        if (what === this.option)\r\n            this.statusBar.addReward(reward);\r\n        if (what === PlayerTypes_1.default.defender) {\r\n            this.paddle.applyReward(reward);\r\n        }\r\n        else if (what === PlayerTypes_1.default.capture) {\r\n            this.guy.applyReward(reward);\r\n        }\r\n    };\r\n    GameBoard.prototype.updateRewards = function () {\r\n        var _this = this;\r\n        var toDelete = [];\r\n        var offset = 0;\r\n        this.rewards.forEach(function (reward, index) {\r\n            var nxtPos = reward.getNextPosition();\r\n            var paddlePos = _this.paddle.getPoint();\r\n            var paddleSize = _this.paddle.getSize();\r\n            if (nxtPos.y >= _this.size.height) {\r\n                toDelete.push(index);\r\n                reward.destroy();\r\n            }\r\n            else if (CollisionUtil_1.isCollision(nxtPos, paddlePos, paddleSize)) {\r\n                _this.applyReward(reward.rewardType, PlayerTypes_1.default.defender);\r\n                toDelete.push(index);\r\n                reward.destroy();\r\n            }\r\n            else {\r\n                reward.updateDOMPosition(nxtPos);\r\n            }\r\n        });\r\n        toDelete.forEach(function (idx) {\r\n            _this.rewards.splice(idx + offset, 1);\r\n            offset -= 1;\r\n        });\r\n    };\r\n    GameBoard.prototype.updateBullets = function () {\r\n        var _this = this;\r\n        var bulletsToDelete = [];\r\n        var offset = 0;\r\n        this.bullets.forEach(function (bullet, index) {\r\n            var speed = bullet.getSpeed(true);\r\n            var blockStrength;\r\n            var bulletStrength;\r\n            var nxtPos;\r\n            var curPos;\r\n            var hitBlockX;\r\n            var hitBlockY;\r\n            var block;\r\n            for (var indexSpeed = 0; indexSpeed < speed; indexSpeed++) {\r\n                block = null;\r\n                nxtPos = bullet.getNextPosition();\r\n                curPos = bullet.getPoint();\r\n                hitBlockX = hitBlockY = false;\r\n                if (bullet.isDestroyed) {\r\n                    bulletsToDelete.push(index);\r\n                    return;\r\n                }\r\n                // check if it went off screen\r\n                if (nxtPos.x < 0 || nxtPos.x > this.size.width ||\r\n                    nxtPos.y < 0 || nxtPos.y >= this.size.height) {\r\n                    bulletsToDelete.push(index);\r\n                    // TODO: make sure it gets deleted, don't want a memory leak\r\n                    bullet.destroy();\r\n                    return;\r\n                }\r\n                // check if block in front of x path\r\n                block = this.getBlock({ x: nxtPos.x, y: curPos.y });\r\n                if (block) {\r\n                    hitBlockX = true;\r\n                    blockStrength = block.getStrength();\r\n                    bulletStrength = bullet.getStrength();\r\n                    if (block.getHit(bulletStrength) <= 0) {\r\n                        this.destroyBlock(block.index);\r\n                    }\r\n                    else {\r\n                        block.setIndex(-1);\r\n                    }\r\n                }\r\n                // check if ball in front of y path\r\n                block = this.getBlock({ x: curPos.x, y: nxtPos.y });\r\n                if (block) {\r\n                    hitBlockY = true;\r\n                    blockStrength = block.getStrength();\r\n                    bulletStrength = bullet.getStrength();\r\n                    bullet.getHit(blockStrength);\r\n                    if (block.getHit(bulletStrength) === 0) {\r\n                        this.destroyBlock(block.index);\r\n                    }\r\n                    else {\r\n                        block.setIndex(-1);\r\n                    }\r\n                }\r\n                // check if ball in front of xy path (corner hit)\r\n                if (!hitBlockX && !hitBlockY) {\r\n                    block = this.getBlock(nxtPos);\r\n                    if (block) {\r\n                        blockStrength = block.getStrength();\r\n                        bulletStrength = bullet.getStrength();\r\n                        bullet.getHit(blockStrength);\r\n                        if (block.getHit(bulletStrength) === 0) {\r\n                            this.destroyBlock(block.index);\r\n                        }\r\n                        else {\r\n                            block.setIndex(-1);\r\n                        }\r\n                    }\r\n                }\r\n                bullet.update();\r\n            }\r\n        }, this);\r\n        bulletsToDelete.forEach(function (idx) {\r\n            _this.bullets.splice(idx + offset, 1);\r\n            offset -= 1;\r\n        });\r\n    };\r\n    GameBoard.prototype.updateBalls = function () {\r\n        var _this = this;\r\n        var ballsToDelete = [];\r\n        var offset = 0;\r\n        var paddlePos = this.paddle.getPoint();\r\n        var paddleSize = this.paddle.getSize();\r\n        this.balls.forEach(function (ball, index) {\r\n            var radius = ball.getRadius();\r\n            var nxtPos = ball.getNextPosition();\r\n            var hitBlockX;\r\n            var hitBlockY;\r\n            var block;\r\n            var candidatPoint;\r\n            // check if it side wall\r\n            if (nxtPos.x - radius < 0 || nxtPos.x + radius > this.size.width) {\r\n                ball.invertTraj('x');\r\n            }\r\n            // check if hit top wall or paddle\r\n            if (nxtPos.y - radius < 0 || CollisionUtil_1.isCollision(nxtPos, paddlePos, paddleSize)) {\r\n                ball.invertTraj('y');\r\n            }\r\n            // check if fell off screen\r\n            if (nxtPos.y + radius >= this.size.height) {\r\n                ballsToDelete.push(index);\r\n                // TODO: make sure it gets deleted, don't want a memory leak\r\n                ball.destroy();\r\n                return;\r\n            }\r\n            // check if ball in front of x path\r\n            nxtPos = ball.getNextPosition();\r\n            candidatPoint = { x: nxtPos.x, y: ball.point.y };\r\n            block = this.getBlock(candidatPoint) || this.getGuy(candidatPoint);\r\n            if (block) {\r\n                this.updateScore();\r\n                hitBlockX = true;\r\n                ball.invertTraj('x');\r\n                // TODO: different strength for balls\r\n                if (block.getHit(1) === 0) {\r\n                    this.destroyBlock(block.index);\r\n                }\r\n                else {\r\n                    block.setIndex(-1);\r\n                }\r\n            }\r\n            // check if ball in front of y path\r\n            nxtPos = ball.getNextPosition();\r\n            candidatPoint = { x: ball.point.x, y: nxtPos.y };\r\n            block = this.getBlock(candidatPoint) || this.getGuy(candidatPoint);\r\n            if (block) {\r\n                this.updateScore();\r\n                hitBlockY = true;\r\n                ball.invertTraj('y');\r\n                if (block.getHit(1) === 0) {\r\n                    this.destroyBlock(block.index);\r\n                }\r\n                else {\r\n                    block.setIndex(-1);\r\n                }\r\n            }\r\n            // check if ball in front of xy path (corner hit)\r\n            if (!hitBlockX && !hitBlockY) {\r\n                block = this.getBlock(nxtPos) || this.getGuy(nxtPos);\r\n                if (block) {\r\n                    ball.invertTraj('y');\r\n                    ball.invertTraj('x');\r\n                    if (block.getHit(1) === 0) {\r\n                        this.destroyBlock(block.index);\r\n                    }\r\n                    else {\r\n                        block.setIndex(-1);\r\n                    }\r\n                }\r\n            }\r\n            nxtPos = ball.getNextPosition();\r\n            ball.updateDOMPosition(nxtPos);\r\n        }, this);\r\n        ballsToDelete.forEach(function (idx) {\r\n            _this.balls.splice(idx + offset, 1);\r\n            offset -= 1;\r\n        });\r\n    };\r\n    GameBoard.prototype.keyUpDownHandler = function (e) {\r\n        var isKeyDown = e.type === 'keydown';\r\n        this.activeKeys.set(e.keyCode, isKeyDown);\r\n    };\r\n    GameBoard.prototype.globalKeyListener = function (e) {\r\n        if (e.keyCode === 27 && this.levelEnded === false) {\r\n            this.pauseGame();\r\n        }\r\n    };\r\n    GameBoard.prototype.dispatchActions = function () {\r\n        var _this = this;\r\n        this.activeKeys.forEach(function (value, key) {\r\n            if (value) {\r\n                switch (key) {\r\n                    case 65:\r\n                    case 37:\r\n                        _this.onKeyLeft();\r\n                        break;\r\n                    case 68:\r\n                    case 39:\r\n                        _this.onKeyRight();\r\n                        break;\r\n                    case 38:\r\n                    case 87:\r\n                        _this.onKeyUp();\r\n                        break;\r\n                    case 40:\r\n                    case 83:\r\n                        _this.onKeyDown();\r\n                        break;\r\n                    case 32:\r\n                        _this.onSpaceBar();\r\n                        break;\r\n                    default: break;\r\n                }\r\n            }\r\n        });\r\n    };\r\n    GameBoard.prototype.onKeyUp = function () {\r\n        this.player.moveUp();\r\n    };\r\n    GameBoard.prototype.onKeyDown = function () {\r\n        this.player.moveDown();\r\n    };\r\n    GameBoard.prototype.onKeyLeft = function () {\r\n        this.player.moveLeft();\r\n    };\r\n    GameBoard.prototype.onKeyRight = function () {\r\n        this.player.moveRight();\r\n    };\r\n    GameBoard.prototype.onSpaceBar = function () {\r\n        this.player.useReward();\r\n    };\r\n    GameBoard.prototype.updateAI = function () {\r\n        AI_1.default.makeMove(this.ai, this.balls, this.rewards, this.size);\r\n    };\r\n    GameBoard.prototype.pauseGame = function () {\r\n        if (this.isPaused) {\r\n            this.start();\r\n        }\r\n        else {\r\n            this.stop();\r\n        }\r\n    };\r\n    return GameBoard;\r\n}());\r\nexports.default = GameBoard;\r\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Entity_1 = __webpack_require__(0);\r\nvar Ball = /** @class */ (function (_super) {\r\n    __extends(Ball, _super);\r\n    function Ball(ballConfig, mountNode) {\r\n        return _super.call(this, ballConfig.point, ballConfig.radius, ballConfig.trajectory, 'circle', mountNode) || this;\r\n    }\r\n    return Ball;\r\n}(Entity_1.default));\r\nexports.default = Ball;\r\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Trajectory = /** @class */ (function () {\r\n    function Trajectory(point) {\r\n        this.x = point.x;\r\n        this.y = point.y;\r\n    }\r\n    Trajectory.prototype.invert = function (axis) {\r\n        this[axis] = this[axis] * -1;\r\n    };\r\n    Trajectory.prototype.speed = function (val) {\r\n        this.x = this.x > 0 ? this.x + val : this.x - val;\r\n        this.y = this.y > 0 ? this.y + val : this.y - val;\r\n    };\r\n    Trajectory.prototype.getSpeed = function (abs) {\r\n        var hyp = Math.hypot(this.x, this.y);\r\n        return abs ? Math.abs(hyp) : hyp;\r\n    };\r\n    return Trajectory;\r\n}());\r\nexports.default = Trajectory;\r\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Entity_1 = __webpack_require__(0);\r\n// TODO:\r\n// -- blocks that drop rewards\r\n// -- animations on hit\r\nvar Block = /** @class */ (function (_super) {\r\n    __extends(Block, _super);\r\n    function Block(config, mountNode, dropReward) {\r\n        var _this = this;\r\n        var attributes = {\r\n            'fill': Block.getBlockColor(config.strength),\r\n            'stroke': 'black',\r\n            'stroke-width': '0.5'\r\n        };\r\n        _this = _super.call(this, config.point, config.size, { x: 0, y: 0 }, 'rect', mountNode, attributes) || this;\r\n        if (config.strength) {\r\n            _this.strength = config.strength;\r\n        }\r\n        else {\r\n            _this.strength = 1;\r\n        }\r\n        _this.dropReward = dropReward;\r\n        _this.reward = config.reward;\r\n        _this.index = -1;\r\n        return _this;\r\n    }\r\n    Block.prototype.setIndex = function (index) {\r\n        this.index = index;\r\n    };\r\n    Block.prototype.getStrength = function () {\r\n        return this.strength;\r\n    };\r\n    Block.prototype.getHit = function (strength) {\r\n        this.strength -= strength;\r\n        this.updateColor();\r\n        if (this.strength <= 0) {\r\n            if (this.reward > -1) {\r\n                this.dropReward(this.point, this.reward);\r\n            }\r\n            this.destroy();\r\n        }\r\n        return this.strength;\r\n    };\r\n    Block.prototype.updateColor = function () {\r\n        this.domElement.setAttribute('fill', Block.getBlockColor(this.strength));\r\n    };\r\n    Block.getBlockColor = function (strength) {\r\n        switch (strength) {\r\n            case 7: return '#FF0D72';\r\n            case 6: return '#0DC2FF';\r\n            case 5: return '#0DFF72';\r\n            case 4: return '#F538FF';\r\n            case 3: return '#FF8E0D';\r\n            case 2: return '#FFE138';\r\n            default:\r\n            case 1: return '#3877FF';\r\n        }\r\n    };\r\n    return Block;\r\n}(Entity_1.default));\r\nexports.default = Block;\r\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Paddle_1 = __webpack_require__(5);\r\nvar Guy_1 = __webpack_require__(6);\r\nvar CollisionUtil_1 = __webpack_require__(7);\r\n/**\r\n * TODO: scoring for the AI\r\n *  each paddle move is bad\r\n *  each power up use is bad\r\n *  each power up switch is bad\r\n *  each ball drop is bad\r\n */\r\nfunction makeMove(ai, balls, rewards, size) {\r\n    if (ai instanceof Paddle_1.default) {\r\n        makePaddleMove(ai, balls, rewards, size);\r\n    }\r\n    else if (ai instanceof Guy_1.default) {\r\n        makeGuyMove(ai, balls, size);\r\n    }\r\n}\r\nfunction likelyToFallFirst(a, b) {\r\n    var aTraj = a.getTraj();\r\n    var bTraj = b.getTraj();\r\n    var aY = a.getPoint().y;\r\n    var bY = b.getPoint().y;\r\n    // if only one is heading down return that one\r\n    if (aTraj.y > 0 && bTraj.y < 0)\r\n        return -1;\r\n    if (bTraj.y > 0 && aTraj.y < 0)\r\n        return 1;\r\n    // if both are heading down return the lower one\r\n    if (bTraj.y > 0 && aTraj.y > 0)\r\n        return aY > bY ? -1 : 1;\r\n    // if both are heading up return the higher one\r\n    if (bTraj.y < 0 && aTraj.y < 0)\r\n        return aY > bY ? 1 : -1;\r\n    // default case\r\n    return -1;\r\n}\r\nfunction catchable(entity, paddle, size) {\r\n    var paddleSize = paddle.getSize();\r\n    var dropPoint = getEntityDropPoint(entity, size, paddleSize.height);\r\n    if (!isLeft(dropPoint, paddle) && !isRight(dropPoint, paddle))\r\n        return true;\r\n    var movesTillDrop = getMovesTillDrop(entity, size.height, paddleSize.height);\r\n    var nearestPaddlePoint = dropPoint.x > paddle.point.x ? paddle.point.x + paddleSize.width : paddle.point.x;\r\n    var distance = Math.abs(nearestPaddlePoint - dropPoint.x);\r\n    return (paddle.moveAmount * movesTillDrop) > distance;\r\n}\r\nfunction makePaddleMove(paddle, balls, rewards, size) {\r\n    // TODO: don't always try to use reward\r\n    paddle.useReward();\r\n    var entitiesToGoFor = balls //.concat( rewards )\r\n        .filter(function (e) { return catchable(e, paddle, size); })\r\n        .sort(likelyToFallFirst);\r\n    movePaddleToEntity(paddle, entitiesToGoFor, size);\r\n}\r\nfunction getHighestEntity(entities) {\r\n    var highestEntity = entities[0];\r\n    entities.forEach(function (entity) {\r\n        if (highestEntity.point.y > entity.point.y)\r\n            highestEntity = entity;\r\n    });\r\n    return highestEntity;\r\n}\r\nfunction getLowestEntity(entities) {\r\n    var lowestEntity = entities[0];\r\n    entities.forEach(function (entity) {\r\n        if (lowestEntity.point.y < entity.point.y)\r\n            lowestEntity = entity;\r\n    });\r\n    return lowestEntity;\r\n}\r\nfunction movePaddleToEntity(paddle, entities, size) {\r\n    if (entities.length === 0)\r\n        return;\r\n    var paddleHeight = paddle.getSize().height;\r\n    var onlyOneLeft = entities.length === 1;\r\n    var nxtPoint = getEntityDropPoint(entities[0], size, paddleHeight);\r\n    var nxtNxtPoint = onlyOneLeft ? nxtPoint : getEntityDropPoint(entities[1], size, paddleHeight);\r\n    if (isLeft(nxtPoint, paddle) || canAndShouldMoveLeft(nxtNxtPoint, nxtPoint, paddle)) {\r\n        paddle.moveLeft();\r\n    }\r\n    else if (isRight(nxtPoint, paddle) || canAndShouldMoveRight(nxtNxtPoint, nxtPoint, paddle)) {\r\n        paddle.moveRight();\r\n    }\r\n}\r\n// function getNextMove( entity: Entity, dropPoint: Vector ): Entity {\r\n//     const traj: Vector = entity.getTraj();\r\n//     return new Entity (\r\n//         dropPoint,\r\n//         entity.getSize(),\r\n//         { x:traj.x, y: traj.y * -1 },\r\n//         'circle',\r\n//         SVGElement.prototype\r\n//     );\r\n// }\r\nfunction canAndShouldMoveLeft(candidate, current, paddle) {\r\n    return isLeft(candidate, paddle) &&\r\n        CollisionUtil_1.isCollision(current, { x: paddle.nextLeft(), y: paddle.point.y }, paddle.getSize());\r\n}\r\nfunction canAndShouldMoveRight(candidate, current, paddle) {\r\n    return isRight(candidate, paddle) &&\r\n        CollisionUtil_1.isCollision(current, { x: paddle.nextRight(), y: paddle.point.y }, paddle.getSize());\r\n}\r\nfunction getMovesTillDrop(entity, boardHeight, paddleHeight) {\r\n    var traj = entity.getTraj();\r\n    var movesUpAndDown = traj.y > 0 ? 0 : 2 * entity.point.y;\r\n    var movesTillPaddle = boardHeight - paddleHeight - entity.point.y;\r\n    return (movesUpAndDown + movesTillPaddle) / Math.abs(traj.y);\r\n}\r\nfunction getEntityDropPoint(entity, boardSize, paddleHeight) {\r\n    // naive algorithm that ignores blocks\r\n    var traj = entity.getTraj();\r\n    var point = entity.getPoint();\r\n    var movesTillHit = getMovesTillDrop(entity, boardSize.height, paddleHeight);\r\n    var xCoord = point.x + (traj.x * movesTillHit);\r\n    var xOverFlow = xCoord - boardSize.width;\r\n    if (xOverFlow > 0) {\r\n        xCoord -= xOverFlow * 2;\r\n    }\r\n    return {\r\n        x: Math.abs(xCoord),\r\n        y: boardSize.height - paddleHeight - 0.5\r\n    };\r\n}\r\nfunction isLeft(point, paddle) {\r\n    return point.x <= paddle.point.x;\r\n}\r\nfunction isRight(point, paddle) {\r\n    return point.x >= paddle.point.x + paddle.getSize().width - 1;\r\n}\r\nfunction makeGuyMove(guy, balls, size) {\r\n}\r\nexports.default = {\r\n    makeMove: makeMove\r\n};\r\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Reward;\r\n(function (Reward) {\r\n    Reward[Reward[\"none\"] = 0] = \"none\";\r\n    Reward[Reward[\"rocket\"] = 1] = \"rocket\";\r\n    Reward[Reward[\"machine\"] = 2] = \"machine\";\r\n    Reward[Reward[\"wide\"] = 3] = \"wide\";\r\n})(Reward || (Reward = {}));\r\nexports.default = Reward;\r\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Entity_1 = __webpack_require__(0);\r\nvar Bullet = /** @class */ (function (_super) {\r\n    __extends(Bullet, _super);\r\n    function Bullet(point, size, mountNode) {\r\n        var _this = this;\r\n        var attributes = {\r\n            'fill': 'red',\r\n            'stroke': 'black',\r\n            'stroke-width': '0.5'\r\n        };\r\n        _this = _super.call(this, point, size, { x: 0, y: -9 }, 'rect', mountNode, attributes) || this;\r\n        _this.strength = 1;\r\n        _this.isDestroyed = false;\r\n        return _this;\r\n    }\r\n    Bullet.prototype.getNextPosition = function () {\r\n        return {\r\n            x: this.point.x + Math.sign(this.traj.x),\r\n            y: this.point.y + Math.sign(this.traj.y)\r\n        };\r\n    };\r\n    Bullet.prototype.getStrength = function () {\r\n        return this.strength;\r\n    };\r\n    Bullet.prototype.getHit = function (strength) {\r\n        this.strength -= strength;\r\n        if (this.strength <= 0) {\r\n            this.destroy();\r\n        }\r\n        return this.strength;\r\n    };\r\n    Bullet.prototype.getSpeed = function (abs) {\r\n        return this.traj.getSpeed(abs);\r\n    };\r\n    Bullet.prototype.update = function () {\r\n        this.point = this.getNextPosition();\r\n        this.updateDOMPosition();\r\n    };\r\n    Bullet.prototype.destroy = function () {\r\n        // TODO: add some cool animations on destroy\r\n        this.isDestroyed = true;\r\n        this.mountNode.removeChild(this.domElement);\r\n    };\r\n    return Bullet;\r\n}(Entity_1.default));\r\nexports.default = Bullet;\r\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Loader_1 = __webpack_require__(2);\r\nvar StatusBar = /** @class */ (function () {\r\n    function StatusBar(rewardSelect, levelName, mountNode) {\r\n        Loader_1.default.css('StatusBar');\r\n        this.rewardSelect = rewardSelect;\r\n        this.mountNode = mountNode;\r\n        this.domElement = document.createElement('div');\r\n        this.domElement.classList.add('status-bar');\r\n        this.domElement.innerHTML = StatusBar.getInnerHTML(String(levelName));\r\n        this.score = this.domElement.querySelector(\"#\" + StatusBar.ID.SCORE);\r\n        this.rewards = this.domElement.querySelector(\"#\" + StatusBar.ID.REWARDS);\r\n        mountNode.appendChild(this.domElement);\r\n    }\r\n    StatusBar.prototype.updateScore = function (score) {\r\n        this.score.innerHTML = String(score);\r\n    };\r\n    StatusBar.getInnerHTML = function (levelName) {\r\n        return \"\\n            <h3>Level \" + levelName + \"</h3>\\n            <h4>Score: <span id='\" + StatusBar.ID.SCORE + \"'></span></h4>\\n            <div id='\" + StatusBar.ID.REWARDS + \"'></div>\\n        \";\r\n    };\r\n    StatusBar.prototype.removeSelection = function () {\r\n        var selected = this.rewards.querySelector(\"#\" + StatusBar.ID.SELECTED);\r\n        if (selected) {\r\n            selected.id = '';\r\n        }\r\n    };\r\n    StatusBar.prototype.addReward = function (reward) {\r\n        var _this = this;\r\n        this.removeSelection();\r\n        var node = document.createElement('div');\r\n        node.onclick = function () {\r\n            _this.rewardSelect(reward);\r\n            _this.removeSelection();\r\n            node.id = StatusBar.ID.SELECTED;\r\n        };\r\n        node.id = StatusBar.ID.SELECTED;\r\n        node.innerHTML = String(reward);\r\n        this.rewards.appendChild(node);\r\n    };\r\n    StatusBar.ID = {\r\n        SCORE: 'score',\r\n        REWARDS: 'rewards',\r\n        SELECTED: 'selected'\r\n    };\r\n    return StatusBar;\r\n}());\r\nexports.default = StatusBar;\r\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Entity_1 = __webpack_require__(0);\r\nvar Reward = /** @class */ (function (_super) {\r\n    __extends(Reward, _super);\r\n    function Reward(start, rewardType, mountNode) {\r\n        var _this = _super.call(this, start, { width: 3, height: 3 }, { x: 0, y: 1 }, 'rect', mountNode) || this;\r\n        _this.rewardType = rewardType;\r\n        return _this;\r\n    }\r\n    return Reward;\r\n}(Entity_1.default));\r\nexports.default = Reward;\r\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Modal_1 = __webpack_require__(8);\r\nvar UserScore_1 = __webpack_require__(4);\r\nvar LevelThumbNails_1 = __webpack_require__(20);\r\nvar Overview_1 = __webpack_require__(22);\r\nvar PlayerTypes_1 = __webpack_require__(1);\r\nvar Loader_1 = __webpack_require__(2);\r\nvar LevelSelector = /** @class */ (function () {\r\n    function LevelSelector(cb) {\r\n        Loader_1.default.css('LevelSelector');\r\n        this.cb = cb;\r\n        this.modal = new Modal_1.default(false);\r\n        this.levelThumbNails = new LevelThumbNails_1.default(this.modal.extensionPoint, this.levelSelect.bind(this));\r\n        this.overview = new Overview_1.default(this.modal.extensionPoint, this.startLevel.bind(this));\r\n    }\r\n    LevelSelector.prototype.levelSelect = function (level) {\r\n        var defenderScore = UserScore_1.default.getScore(level, PlayerTypes_1.default.defender);\r\n        var captureScore = UserScore_1.default.getScore(level, PlayerTypes_1.default.capture);\r\n        this.overview.update({\r\n            level: String(level),\r\n            defender: defenderScore,\r\n            capture: captureScore\r\n        });\r\n    };\r\n    LevelSelector.prototype.show = function (message, success) {\r\n        message = message ? message + LevelSelector.defaultMessage : LevelSelector.defaultMessage;\r\n        this.modal.show(message);\r\n    };\r\n    LevelSelector.prototype.startLevel = function (levelNumber, option) {\r\n        var _this = this;\r\n        Loader_1.default.level(String(levelNumber))\r\n            .then(function (level) { return _this.cb(level, levelNumber, option); })\r\n            .catch(console.warn)\r\n            .then(function () { return _this.modal.hide(); });\r\n    };\r\n    LevelSelector.defaultMessage = 'Choose a level';\r\n    return LevelSelector;\r\n}());\r\nexports.default = LevelSelector;\r\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar UserScore_1 = __webpack_require__(4);\r\nvar AllLevels_1 = __webpack_require__(21);\r\nvar Loader_1 = __webpack_require__(2);\r\nvar LevelThumbNails = /** @class */ (function () {\r\n    function LevelThumbNails(mountNode, levelSelectCB) {\r\n        Loader_1.default.css('LevelThumbNail');\r\n        this.mountNode = mountNode;\r\n        this.levelSelectCB = levelSelectCB;\r\n        var domNode = document.createElement('div');\r\n        domNode.classList.add('level-thumbnails');\r\n        this.attachLevelNodes(domNode);\r\n        this.mountNode.appendChild(domNode);\r\n    }\r\n    LevelThumbNails.prototype.attachLevelNodes = function (mountNode) {\r\n        var _this = this;\r\n        var prevLevelComplete = true;\r\n        AllLevels_1.default.forEach(function (level, i) {\r\n            var levelNode = document.createElement('span');\r\n            var levelScore = UserScore_1.default.getScore(i);\r\n            var levelComplete = levelScore >= level.minScore;\r\n            var thumbNailSrc = '';\r\n            levelNode.classList.add('level-node');\r\n            if (levelComplete || prevLevelComplete) {\r\n                levelNode.addEventListener('click', function () {\r\n                    var prev = mountNode.querySelector('#selected');\r\n                    if (prev)\r\n                        prev.id = '';\r\n                    levelNode.id = 'selected';\r\n                    _this.levelSelectCB(i);\r\n                });\r\n                levelNode.classList.add('allowed');\r\n            }\r\n            else {\r\n                levelNode.classList.add('locked');\r\n            }\r\n            if (levelComplete) {\r\n                thumbNailSrc = 'completed.png';\r\n            }\r\n            else if (prevLevelComplete) {\r\n                thumbNailSrc = level.src;\r\n            }\r\n            else {\r\n                thumbNailSrc = 'locked.png';\r\n            }\r\n            levelNode.innerHTML = LevelThumbNails.levelTemplate(thumbNailSrc, String(i));\r\n            mountNode.appendChild(levelNode);\r\n            prevLevelComplete = levelComplete;\r\n        });\r\n    };\r\n    LevelThumbNails.levelTemplate = function (src, level) {\r\n        return \"\\n            <img width='48px' height='48px' src=\" + src + \" />\\n            <p>\" + level + \"</p>\\n        \";\r\n    };\r\n    return LevelThumbNails;\r\n}());\r\nexports.default = LevelThumbNails;\r\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar AllLevels = [\r\n    { minScore: 100, src: 'thumbnail.png' },\r\n    { minScore: 200, src: 'thumbnail.png' }\r\n];\r\nexports.default = AllLevels;\r\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar PlayerTypes_1 = __webpack_require__(1);\r\nvar Overview = /** @class */ (function () {\r\n    function Overview(mountNode, startLevel) {\r\n        this.startLevel = startLevel;\r\n        var domNode = document.createElement('div');\r\n        domNode.classList.add('level-overview');\r\n        domNode.innerHTML = Overview.template;\r\n        this.levelNumber = domNode.getElementsByTagName('h3')[0];\r\n        this.defenderHighScore = domNode.querySelector(\"#\" + Overview.ID.DEFENDER + \"-highscore\");\r\n        this.captureHighScore = domNode.querySelector(\"#\" + Overview.ID.CAPTURE + \"-highscore\");\r\n        this.defenderOption = domNode.getElementsByClassName(Overview.ID.DEFENDER + \"-option\")[0];\r\n        this.captureOption = domNode.getElementsByClassName(Overview.ID.CAPTURE + \"-option\")[0];\r\n        this.startButton = domNode.querySelector(\"#\" + Overview.ID.START);\r\n        this.addEventListeners();\r\n        mountNode.appendChild(domNode);\r\n    }\r\n    Overview.prototype.addEventListeners = function () {\r\n        var _this = this;\r\n        this.defenderOption.addEventListener('click', function () { return _this.setOption(PlayerTypes_1.default.defender); });\r\n        this.captureOption.addEventListener('click', function () { return _this.setOption(PlayerTypes_1.default.capture); });\r\n        this.startButton.addEventListener('click', function () { return _this.startLevel(_this.level, _this.option); });\r\n    };\r\n    Overview.prototype.setOption = function (option) {\r\n        if (option === PlayerTypes_1.default.defender) {\r\n            this.defenderOption.classList.add('selected');\r\n            this.captureOption.classList.remove('selected');\r\n        }\r\n        else if (option === PlayerTypes_1.default.capture) {\r\n            this.defenderOption.classList.remove('selected');\r\n            this.captureOption.classList.add('selected');\r\n        }\r\n        this.option = option;\r\n    };\r\n    Overview.prototype.update = function (details) {\r\n        this.level = +details.level;\r\n        this.levelNumber.innerHTML = \"Level: \" + details.level;\r\n        this.defenderHighScore.innerHTML = \"Highscore: \" + details.defender;\r\n        this.captureHighScore.innerHTML = \"Highscore: \" + details.capture;\r\n    };\r\n    Overview.ID = {\r\n        DEFENDER: 'defender',\r\n        CAPTURE: 'capture',\r\n        START: 'start'\r\n    };\r\n    Overview.template = \"\\n        <h3>Level</h3>\\n        <div class='character-selector'>\\n            <div class='option \" + Overview.ID.DEFENDER + \"-option'>\\n                <h5>Defender</h5>\\n                <h5 id='\" + Overview.ID.DEFENDER + \"-highscore'>Highscore:</h5>\\n            </div>\\n            <div class='option \" + Overview.ID.CAPTURE + \"-option'>\\n                <h5>Capture the Flag</h5>\\n                <h5 id='\" + Overview.ID.CAPTURE + \"-highscore'>Highscore:</h5>\\n            </div>\\n        </div>\\n        <button id='\" + Overview.ID.START + \"'>START</button>\\n    \";\r\n    return Overview;\r\n}());\r\nexports.default = Overview;\r\n\n\n/***/ })\n],[9]);\n\n\n// WEBPACK FOOTER //\n// app.bundle.js","import { SVGNAMESPACE } from './Constants';\r\nimport Vector from '../interfaces/Vector';\r\nimport Size from '../interfaces/Size';\r\nimport Trajectory from './Trajectory';\r\n\r\nexport default abstract class Entity {\r\n\r\n    public point: Vector;\r\n    protected size: Size;\r\n    protected radius: number;\r\n    protected traj: Trajectory;\r\n    protected type: 'circle'|'rect';\r\n    protected domElement: SVGElement;\r\n    protected mountNode: SVGElement;\r\n\r\n    public constructor(\r\n        point: Vector,\r\n        size: Size|number,\r\n        traj: Vector,\r\n        type: 'circle'|'rect',\r\n        mountNode: SVGElement,\r\n        attributes?: Object\r\n    ) {\r\n        this.domElement = document.createElementNS( SVGNAMESPACE, type );\r\n        this.type = type;\r\n        this.point = point;\r\n        this.domElement.setAttribute( 'x', String( this.point.x ) );\r\n        this.domElement.setAttribute( 'y', String( this.point.y ) );\r\n        this.traj = new Trajectory( traj );\r\n        if ( this.type === 'circle' ) {\r\n            this.radius = +size;\r\n            this.domElement.setAttribute( 'r', String( this.radius ) );\r\n        } else {\r\n            this.size = <Size>size;\r\n            this.domElement.setAttribute( 'width', String( this.size.width ) );\r\n            this.domElement.setAttribute( 'height', String( this.size.height ) );\r\n        }\r\n        if ( attributes !== undefined ) {\r\n            Object.keys(attributes).forEach( key =>\r\n                this.domElement.setAttribute( key, String( attributes[key] ))\r\n            );\r\n        }\r\n\r\n        this.mountNode = mountNode;\r\n        this.mountNode.appendChild( this.domElement );\r\n    }\r\n\r\n    public destroy() {\r\n        this.mountNode.removeChild( this.domElement );\r\n    }\r\n\r\n    public updateDOMPosition( newPoint?: Vector ) {\r\n        let xAttr: string = '';\r\n        let yAttr: string = '';\r\n        if ( newPoint !== undefined ) {\r\n            this.point = newPoint;\r\n        }\r\n        if ( this.type === 'circle' ) {\r\n            xAttr = 'cx';\r\n            yAttr = 'cy';\r\n        } else if ( this.type === 'rect' ) {\r\n            xAttr = 'x';\r\n            yAttr = 'y';\r\n        }\r\n        this.domElement.setAttribute( xAttr, String( this.point.x ) );\r\n        this.domElement.setAttribute( yAttr, String( this.point.y ) );\r\n    }\r\n\r\n    protected updateSize( size?: Size|number ) {\r\n        if ( this.type === 'circle' ) {\r\n            if ( size ) this.radius = +size;\r\n            this.domElement.setAttribute( 'r', String( this.radius ) );\r\n        } else {\r\n            if ( size ) this.size = <Size>size;\r\n            this.domElement.setAttribute( 'width', String( this.size.width ) );\r\n            this.domElement.setAttribute( 'height', String( this.size.height ) );\r\n        }\r\n    }\r\n\r\n    public getTraj(): Vector {\r\n        return this.traj;\r\n    }\r\n\r\n    public invertTraj( axis: 'x'|'y' ) {\r\n        this.traj.invert( axis );\r\n    }\r\n\r\n    public getNextPosition() {\r\n        return {\r\n            x: this.point.x + this.traj.x,\r\n            y: this.point.y + this.traj.y\r\n        };\r\n    }\r\n\r\n    public getPoint(): Vector {\r\n        return this.point;\r\n    }\r\n\r\n    public getSize(): Size {\r\n        return this.size;\r\n    }\r\n\r\n    public getRadius(): number {\r\n        return this.radius;\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ../node_modules/source-map-loader!./GameBoard/Entity.ts","enum PlayerTypes {\r\n    'capture' = 'capture',\r\n    'defender' = 'defender'\r\n}\r\n\r\nexport default PlayerTypes;\n\n\n// WEBPACK FOOTER //\n// ../node_modules/source-map-loader!./interfaces/PlayerTypes.ts","import LevelI from './interfaces/LevelI';\r\n\r\nexport default class Load {\r\n\r\n    private static loadedCss: Set<string> = new Set();\r\n    private static loadedLevels: Map<string, LevelI> = new Map();\r\n    private static pendingLevels: Map<string, Promise<LevelI>> = new Map();\r\n\r\n    public static css( file: string ): void {\r\n        if ( this.loadedCss.has( file ) ) return;\r\n        this.loadedCss.add( file );\r\n        const options: RequestInit = {\r\n            method: 'get',\r\n            headers: { 'Content-Type': 'text/css' }\r\n        }\r\n        fetch( `css/${file}.css`, options )\r\n            .then( resp => resp.text() )\r\n            .then( Load.attachToDocument );\r\n    }\r\n\r\n    private static attachToDocument( resp: string ) {\r\n        const styleTag = document.createElement( 'style' );\r\n        const style = document.createTextNode( resp );\r\n        styleTag.appendChild( style );\r\n        document.head.appendChild( styleTag );\r\n    }\r\n\r\n    public static level( level: string): Promise<LevelI> {\r\n        if ( this.loadedLevels.has( level ) ) return this.serveFromCache( level );\r\n        if ( this.pendingLevels.has( level ) ) return this.pendingLevels.get( level );\r\n        // this.loadedLevels.add( level );\r\n        const options: RequestInit = {\r\n            method: 'get',\r\n            headers: { 'Content-Type': 'application/json' }\r\n        }\r\n        const promise = fetch( `levels/${level}.json`, options )\r\n            .then( resp => resp.json() )\r\n            .then( this.toLevel )\r\n            .then ( levelI => this.saveLevel( level, levelI) );\r\n        this.pendingLevels.set( level, promise );\r\n        return promise;\r\n    }\r\n\r\n    private static toLevel( level: Object ): LevelI {\r\n        return <LevelI> level;\r\n    }\r\n\r\n    private static saveLevel( level: string, levelI: LevelI ): Promise<LevelI> {\r\n        this.pendingLevels.delete( level );\r\n        this.loadedLevels.set( level, levelI );\r\n        return Promise.resolve( levelI );\r\n    }\r\n    \r\n    private static serveFromCache( level: string ): Promise<LevelI> {\r\n        return Promise.resolve( this.loadedLevels.get( level ) );\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/source-map-loader!./Loader.ts","export const SVGNAMESPACE = \"http://www.w3.org/2000/svg\";\n\n\n// WEBPACK FOOTER //\n// ../node_modules/source-map-loader!./GameBoard/Constants.ts","import PlayerTypes from '../interfaces/PlayerTypes';\r\n\r\nfunction getKey( level: number): string {\r\n    return `level-${level}`;\r\n}\r\n\r\nfunction setScore( level: number, playerType: PlayerTypes, score: number): void {\r\n    const levelKey = getKey( level );\r\n    const raw = localStorage.getItem( levelKey );\r\n    if ( !raw ) {\r\n        localStorage.setItem( levelKey, JSON.stringify({\r\n            [playerType]: score\r\n        }));\r\n    } else {\r\n        let data = JSON.parse( raw );\r\n        if ( !data[playerType] || score > data[playerType] ) {\r\n            data[playerType] = score;\r\n            localStorage.setItem( levelKey, JSON.stringify( data ) );\r\n        }\r\n    }\r\n}\r\n\r\nfunction getScore( level: number, type?: PlayerTypes ): number {\r\n    const levelKey = getKey( level );\r\n    const raw = localStorage.getItem( levelKey );\r\n    if ( !raw ) return 0;\r\n    const info = JSON.parse( raw );\r\n    if ( !type ) {\r\n        if ( info.defender && info.capture ) return Math.max( info.defender, info.capture );\r\n        if ( info.defender ) return info.defender;\r\n        if ( info.capture ) return info.capture;\r\n    }\r\n    if ( type === PlayerTypes.capture ) return info.capture ? info.capture : 0;\r\n    if ( type === PlayerTypes.defender ) return info.defender ? info.defender : 0;\r\n}\r\n\r\nexport default {\r\n    setScore,\r\n    getScore\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/source-map-loader!./UserScore/UserScore.ts","import { SVGNAMESPACE } from './Constants';\r\nimport Size from '../interfaces/Size';\r\nimport Vector from '../interfaces/Vector';\r\nimport Entity from './Entity';\r\nimport RewardEnum from '../interfaces/Reward';\r\nimport PlayerConfig from '../interfaces/PlayerConfig';\r\nimport Controllable from '../interfaces/Controllable';\r\n\r\nexport default class Paddle extends Entity implements Controllable {\r\n\r\n    private rewardType: RewardEnum;\r\n    private sheild: SVGCircleElement;\r\n    public moveAmount: number;\r\n\r\n    constructor(\r\n        private boardSize: Size,\r\n        mountNode: SVGElement,\r\n        paddleConfig: PlayerConfig,\r\n        private emitBullet: Function\r\n    ) {\r\n        super(\r\n            paddleConfig.position,\r\n            paddleConfig.size,\r\n            { x: 0, y: 0 },\r\n            'rect',\r\n            mountNode,\r\n            paddleConfig.attributes || Paddle.defaults.attributes\r\n        );\r\n        this.sheild = document.createElementNS( SVGNAMESPACE, 'circle' );\r\n        this.sheild.setAttribute('cx', String( paddleConfig.position.x + paddleConfig.size.width / 2 ) );\r\n        this.sheild.setAttribute('cy', String( paddleConfig.position.y ) );\r\n        this.sheild.style.opacity = '0.3';\r\n        this.moveAmount = Paddle.defaults.moveAmount;\r\n    }\r\n\r\n    public static defaults = {\r\n        sizes: {\r\n            default: { width: 9, height: 3 },\r\n            wide: { width: 14, height: 3 }\r\n        },\r\n        attributes: {\r\n            'fill': 'gray',\r\n            'stroke': 'black',\r\n            'stroke-width': '0.5'\r\n        },\r\n        moveAmount: 3\r\n    };\r\n\r\n    public moveLeft(): void {\r\n        const nxtLeft: number = this.nextLeft();\r\n        if ( this.point.x !== nxtLeft ) {\r\n            this.point.x = nxtLeft;\r\n            this.updateDOMPosition();\r\n        }\r\n    }\r\n\r\n    public nextLeft(): number {\r\n        let maxMove = this.moveAmount;\r\n        while( ( this.point.x - maxMove ) < 0 ) {\r\n            maxMove--;\r\n        }\r\n        return this.point.x - maxMove;\r\n    }\r\n\r\n    public moveRight(): void {\r\n        const nxtRight: number = this.nextRight();\r\n        if ( this.point.x !== nxtRight ) {\r\n            this.point.x = nxtRight;\r\n            this.updateDOMPosition();\r\n        }\r\n    }\r\n\r\n    public nextRight(): number {\r\n        let maxMove = this.moveAmount;\r\n        while( ( this.point.x + this.size.width + maxMove ) > this.boardSize.width ) {\r\n            maxMove--;\r\n        }\r\n        return this.point.x + maxMove;\r\n    }\r\n\r\n    public applyReward( rewardType: RewardEnum ) {\r\n        this.rewardType = rewardType;\r\n        if ( this.rewardType === RewardEnum.wide ) this.makeWide();\r\n        else this.makeDefault();\r\n        this.updateColor();\r\n    }\r\n\r\n    private updateColor(): void {\r\n        this.domElement.setAttribute( 'fill', Paddle.getColor( this.rewardType ) );\r\n    }\r\n\r\n    private static getColor( strength: number ): string {\r\n        switch ( strength ) {\r\n            case 7: return '#FF0D72';\r\n            case 6: return '#0DC2FF';\r\n            case 5: return '#0DFF72';\r\n            case 4: return '#F538FF';\r\n            case 3: return '#FF8E0D';\r\n            case 2: return '#FFE138';\r\n            default:\r\n            case 1: return '#3877FF';\r\n        }\r\n    }\r\n    public activateSheld(): void {\r\n\r\n    }\r\n    public useReward(): void {\r\n        switch (this.rewardType) {\r\n            case RewardEnum.machine:\r\n                this.shootMachine();\r\n                break;\r\n            case RewardEnum.rocket:\r\n                this.shootRocket();\r\n                break;\r\n            default: break;\r\n        }\r\n    }\r\n    private shootRocket(): void {\r\n        const start: Vector = {\r\n            x: this.point.x + ( this.size.width / 2 ),\r\n            y: this.point.y - this.size.height\r\n        };\r\n        const size: Size = {\r\n            width: 3, height: 9\r\n        };\r\n        this.emitBullet( start, size );\r\n    }\r\n    private shootMachine(): void {\r\n        const size: Size = {\r\n            width: 1, height: 3\r\n        };\r\n        this.emitBullet({\r\n            x: this.point.x,\r\n            y: this.point.y - this.size.height\r\n        }, size );\r\n        this.emitBullet({\r\n            x: this.point.x + this.size.width,\r\n            y: this.point.y - this.size.height\r\n        }, size );\r\n    }\r\n    private makeWide(): void {\r\n        this.updateSize( Paddle.defaults.sizes.wide );\r\n    }\r\n    private makeDefault(): void {\r\n        this.updateSize( Paddle.defaults.sizes.default );\r\n    }\r\n    public moveUp(): void { }\r\n    public moveDown(): void { }\r\n}\n\n\n// WEBPACK FOOTER //\n// ../node_modules/source-map-loader!./GameBoard/Paddle.ts","import RewardEnum from '../interfaces/Reward';\r\nimport Size from '../interfaces/Size';\r\nimport Vector from '../interfaces/Vector';\r\nimport PlayerConfig from '../interfaces/PlayerConfig';\r\nimport Entity from './Entity';\r\nimport Controllable from '../interfaces/Controllable';\r\n\r\nexport default class Guy extends Entity implements Controllable {\r\n    private static defaults = {\r\n        speed: 1,\r\n        attributes: {\r\n            'fill': 'gray',\r\n            'stroke': 'black',\r\n            'stroke-width': '0.5'\r\n        }\r\n    }\r\n\r\n    private static MAX_WIDTH: number = 5;\r\n    private static MAX_HEIGHT: number = 5;\r\n\r\n    private speed: number;\r\n    private hitCount: number = 0;\r\n    public index: number;\r\n\r\n    constructor(\r\n        mountNode: SVGElement,\r\n        guyConfig: PlayerConfig\r\n    ) {\r\n        super(\r\n            guyConfig.position,\r\n            guyConfig.size,            \r\n            { x: 0, y: 0 },\r\n            'rect',\r\n            mountNode,\r\n            guyConfig.attributes || Guy.defaults.attributes    \r\n        );\r\n        this.speed = guyConfig.speed || Guy.defaults.speed;\r\n    }\r\n    public moveLeft(): void {\r\n        this.point.x -= this.speed;\r\n        this.updateDOMPosition();\r\n    }\r\n    public moveRight(): void {\r\n        this.point.x += this.speed;\r\n        this.updateDOMPosition();\r\n    }\r\n    public moveUp(): void {\r\n        this.point.y -= this.speed;\r\n        this.updateDOMPosition();\r\n    }\r\n    public moveDown(): void {\r\n        this.point.y += this.speed;\r\n        this.updateDOMPosition();\r\n    }\r\n    \r\n    private grow(): void {\r\n        if ( this.size.width >= Guy.MAX_WIDTH || this.size.height >= Guy.MAX_HEIGHT ) return;\r\n        this.size.width++;\r\n        this.size.height++;\r\n        this.updateSize();\r\n        return;\r\n    }\r\n\r\n    public getHit( str: number ): number {\r\n        this.hitCount++;\r\n        if ( this.hitCount % 10 ) {\r\n            this.grow();\r\n        }\r\n        return this.hitCount;\r\n    }\r\n\r\n    // TODO: implement functions below\r\n    public applyReward( reward: RewardEnum ): void { }\r\n    public setIndex( index: number ): void { this.index = index; }\r\n    public useReward(): void { }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/source-map-loader!./GameBoard/Guy.ts","import Vector from '../interfaces/Vector';\r\nimport Size from '../interfaces/Size';\r\n\r\nfunction hitsIt(pointX: number, blockStart: number, width: number): boolean {\r\n    let val: number = (blockStart + width) - pointX;\r\n    return val >= 0 && val <= width;\r\n}\r\n// TODO: make isCollision be abstract, taking input Types (block|ball|paddle)\r\n//      and delegating work to functions that handle that case\r\nfunction isCollision(p1: Vector, p2: Vector, p2Size: Size): boolean {\r\n    return hitsIt(p1.x, p2.x, p2Size.width) &&\r\n           hitsIt(p1.y, p2.y, p2Size.height);\r\n}\r\n\r\nfunction isNear( circlePoint: Vector, blockPoint: Vector, blockSize: Size ): Boolean {\r\n    // TODO: This will have to change when the ball can be different radius\r\n    const ballRadius: number = 3;\r\n    const blockDist = Math.max( blockSize.width, blockSize.height );\r\n    const distance: number = getDistance( circlePoint, blockPoint );\r\n    return distance <= blockDist + ballRadius;\r\n}\r\n\r\nfunction getDistance( p1: Vector, p2: Vector ): number {\r\n    const distX = p1.x - p2.x;\r\n    const distY = p1.y - p2.y;\r\n    return Math.sqrt(\r\n        (distX) * (distX) +\r\n        (distY) * (distY)\r\n    );\r\n}\r\n\r\nexport { isCollision };\r\nexport { isNear };\r\nexport { getDistance };\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/source-map-loader!./GameBoard/CollisionUtil.ts","import Loader from './Loader';\r\n\r\nexport default class Modal {\r\n    private mdl: HTMLDivElement;\r\n    private p: HTMLParagraphElement;\r\n    private content: HTMLDivElement;\r\n    public extensionPoint: HTMLDivElement;\r\n    private cb: Function;\r\n\r\n    public constructor( showClose?: Boolean ) {\r\n        Loader.css( 'Modal' );\r\n        const mdl: HTMLDivElement = document.createElement('div');\r\n        const content: HTMLDivElement = document.createElement( 'div' );\r\n        const p: HTMLParagraphElement = document.createElement( 'p' );\r\n        const extensionPoint: HTMLDivElement = document.createElement( 'div' );\r\n        mdl.setAttribute( 'class', 'modal' );\r\n        content.setAttribute( 'class', 'modal-content' );\r\n        p.innerHTML = 'Game Paused';\r\n        extensionPoint.setAttribute( 'class', 'modal-template' );\r\n        if ( showClose !== false ) {\r\n            this.attachCloseButton( content );\r\n        }\r\n        content.appendChild( p );\r\n        content.appendChild( extensionPoint );\r\n        mdl.appendChild( content );\r\n        mdl.style.display = 'none';\r\n\r\n        document.body.appendChild( mdl );\r\n        this.mdl = mdl;\r\n        this.p = p;\r\n        this.content = content;\r\n        this.extensionPoint = extensionPoint;\r\n    }\r\n    private attachCloseButton( content: HTMLDivElement ): void {\r\n        const clsBtn: HTMLSpanElement = document.createElement( 'span' );\r\n        clsBtn.setAttribute( 'class', 'closeBtn' );\r\n        clsBtn.addEventListener( 'click', this.closeButton.bind( this ) );\r\n        clsBtn.innerHTML = '&times;';\r\n        content.appendChild( clsBtn );\r\n    }\r\n    public show( message: string, cb?: Function ): void {\r\n        if ( cb ) this.cb = cb;\r\n        this.p.innerHTML = message;\r\n        this.mdl.style.display = 'block';\r\n    }\r\n\r\n    private closeButton(): void {\r\n        if ( this.cb ) {\r\n            this.cb();\r\n            this.cb = null;\r\n        } else {\r\n            this.hide();\r\n        }\r\n    }\r\n    public hide(): void {\r\n        this.p.innerHTML = '';\r\n        this.mdl.style.display = 'none';\r\n        this.content.classList.remove( 'success', 'fail' );\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ../node_modules/source-map-loader!./Modal.ts","import GameBoard from './GameBoard/GameBoard';\r\nimport Size from './interfaces/Size';\r\nimport LevelI from './interfaces/LevelI';\r\nimport PlayerTypes from './interfaces/PlayerTypes';\r\nimport LevelSelector from './LevelSelector/LevelSelector';\r\n\r\nexport default class Main {\r\n\r\n    private levelSelector: LevelSelector;\r\n    private gameBoard: GameBoard;\r\n\r\n    constructor( private mountNode: HTMLElement ) {\r\n        this.levelSelector = new LevelSelector( this.setLevel.bind(this) );\r\n        this.levelSelector.show();\r\n    }\r\n\r\n    private setLevel( level: LevelI, levelNumber: number, option: PlayerTypes ): void {\r\n        this.clearLevel();\r\n        this.gameBoard = new GameBoard(\r\n            level.size,\r\n            this.mountNode,\r\n            this.levelSelector,\r\n            levelNumber,\r\n            option\r\n         );\r\n        this.gameBoard.init(level);\r\n    }\r\n\r\n    private clearLevel(): void {\r\n        if (this.gameBoard) {\r\n            delete this.gameBoard;\r\n        }\r\n    }\r\n}\r\n\r\nconst start = new Main(\r\n    document.getElementById('gameBoard')\r\n);\n\n\n// WEBPACK FOOTER //\n// ../node_modules/source-map-loader!./index.ts","import { SVGNAMESPACE } from './Constants';\r\nimport Vector from '../interfaces/Vector';\r\nimport Ball from './Ball';\r\nimport Block from './Block';\r\nimport ballConfig from '../interfaces/BallConfig';\r\nimport BlockConfig from '../interfaces/BlockConfig';\r\nimport Size from '../interfaces/Size';\r\nimport LevelI from '../interfaces/LevelI';\r\nimport PlayerTypes from '../interfaces/PlayerTypes';\r\nimport PlayerConfig from '../interfaces/PlayerConfig';\r\nimport AI from './AI';\r\nimport Paddle from './Paddle';\r\nimport Guy from './Guy';\r\nimport Bullet from './Bullet';\r\nimport { isCollision, isNear } from './CollisionUtil';\r\nimport Modal from '../Modal';\r\nimport LevelSelector from '../LevelSelector/LevelSelector';\r\nimport UserScore from '../UserScore/UserScore';\r\nimport StatusBar from './StatusBar/StatusBar';\r\nimport Reward from './Reward';\r\nimport RewardEnum from '../interfaces/Reward';\r\n\r\nexport default class GameBoard {\r\n    private activeKeys: Map<number, boolean>;\r\n    private bullets: Array<Bullet>;\r\n    private rewards: Array<Reward>;\r\n    private updateInterval: number;\r\n    private balls: Array<Ball>;\r\n    private domElement: SVGElement;\r\n    private renderedBlocks: Array<Block>;\r\n    private ai: Paddle|Guy;\r\n    private player: Paddle|Guy;\r\n    private paddle: Paddle;\r\n    private guy: Guy;\r\n    private isPaused: boolean;\r\n    private modal: Modal;\r\n    private levelEnded: boolean;\r\n    private statusBar: StatusBar;\r\n    private score: number;\r\n\r\n    public constructor(\r\n        private size: Size,\r\n        private mountNode: HTMLElement,\r\n        private levelSelector: LevelSelector,\r\n        private levelNumber: number,\r\n        private option: PlayerTypes\r\n    ) {\r\n        this.activeKeys = new Map();\r\n        this.modal = new Modal();\r\n        this.balls = [];\r\n        this.bullets = [];\r\n        this.rewards = [];\r\n        this.levelEnded = false;\r\n        if ( this.option === PlayerTypes.defender ) {\r\n            this.score = 0;\r\n        } else if ( this.option === PlayerTypes.capture ) {\r\n            this.score = 200;\r\n        }\r\n\r\n        this.domElement = document.createElementNS(\r\n            SVGNAMESPACE,\r\n            'svg'\r\n        );\r\n        this.domElement.setAttribute( 'xmlns', SVGNAMESPACE );\r\n        this.domElement.setAttribute( 'width', '85%' );\r\n        this.domElement.setAttribute( 'height', '100%' );\r\n // TODO: figure out how to set background to SVG Element\r\n //       or have a rect container that the rest of the elements go on to, instead of SVG element\r\n        this.domElement.setAttribute( 'fill', 'black' );\r\n        this.domElement.setAttribute( 'viewBox', '0 0 ' + this.size.width + ' ' + this.size.height );\r\n        // TODO: use classes instead of inline styles\r\n        this.domElement.setAttribute( 'style', 'border:1px solid black;' );\r\n        this.statusBar = new StatusBar( this.rewardSelect.bind( this ), levelNumber, this.mountNode );\r\n        mountNode.appendChild( this.domElement );\r\n    }\r\n    private rewardSelect( reward: RewardEnum ): void {\r\n        this.player.applyReward( reward );\r\n    }\r\n    public init( level: LevelI ): void {\r\n        // build stuff\r\n        this.renderedBlocks = this.renderBlocks( level.blocks );\r\n        this.balls = this.renderBalls( level.balls );\r\n        this.buildPlayerAndAI( level.paddle, level.guy );\r\n\r\n        document.body.addEventListener('keydown', this.globalKeyListener.bind( this ) );\r\n        this.start();\r\n    }\r\n    private buildPlayerAndAI( paddleConfig: PlayerConfig, guyConfig: PlayerConfig ): void {\r\n        this.paddle = this.buildPaddle( paddleConfig );\r\n        this.guy = this.buildGuy( guyConfig );\r\n\r\n        if ( this.option === PlayerTypes.defender ) {\r\n            this.player = this.paddle;\r\n            this.ai = this.guy;\r\n        } else if ( this.option === PlayerTypes.capture ) {\r\n            this.player = this.guy;\r\n            this.ai = this.paddle;\r\n        }\r\n    }\r\n    private destroy(): void {\r\n        document.body.removeEventListener('keydown', this.globalKeyListener.bind( this ));\r\n        while (this.mountNode.hasChildNodes()) {\r\n            this.mountNode.removeChild(this.mountNode.lastChild);\r\n        }\r\n    }\r\n    private start(): void {\r\n        // TODO give the user a count down before starting\r\n        this.modal.hide();\r\n        this.attachKeyListeners();\r\n        this.updateInterval = setInterval( this.update.bind( this ), 50 );\r\n        this.isPaused = false;\r\n    }\r\n    private removeKeyListeners(): void {\r\n        document.body.removeEventListener( 'keydown', this.keyUpDownHandler );\r\n        document.body.removeEventListener( 'keyup', this.keyUpDownHandler );\r\n    }\r\n    private attachKeyListeners(): void {\r\n        document.body.addEventListener('keydown', this.keyUpDownHandler.bind( this ) );\r\n        document.body.addEventListener('keyup', this.keyUpDownHandler.bind( this ) );\r\n    }\r\n    private buildPaddle( paddleConfig: PlayerConfig ): Paddle {\r\n        return new Paddle(\r\n            this.size,\r\n            this.domElement,\r\n            paddleConfig,\r\n            this.createBullet.bind( this )\r\n        );\r\n    }\r\n    private buildGuy( guyConfig: PlayerConfig ): Guy {\r\n        return new Guy( this.domElement, guyConfig );\r\n    }\r\n    private createBullet( start: Vector, size: Size ): void {\r\n        this.bullets.push( new Bullet( start, size, this.domElement ) );\r\n    }\r\n    private buildBall( ballConfig: ballConfig ): Ball {\r\n        return new Ball( ballConfig, this.domElement );\r\n    }\r\n    private renderBalls( balls: Array<ballConfig> ): Array<Ball> {\r\n        return balls.map( this.buildBall, this );\r\n    }\r\n    private renderBlocks( blocks: Array<BlockConfig> ): Array<Block> {\r\n        return blocks.map( this.renderBlock, this );\r\n    }\r\n    private renderBlock( block: BlockConfig ): Block {\r\n        return new Block( block, this.domElement, this.dropReward.bind( this ) );\r\n    }\r\n    private destroyBlock( index: number ): void {\r\n        this.renderedBlocks.splice( index, 1 );\r\n    }\r\n    private dropReward( start: Vector, type: RewardEnum ): void {\r\n        this.rewards.push( new Reward( start, type, this.domElement ) );\r\n    }\r\n    private getBlock( point: Vector ): Block {\r\n        let block: Block;\r\n        this.renderedBlocks.some( ( b: Block, i: number ) => {\r\n            let blockPoint: Vector = b.getPoint();\r\n            let blockSize: Size = b.getSize();\r\n\r\n            if ( isNear( point, blockPoint, blockSize ) &&\r\n                 isCollision( point, blockPoint, blockSize ) ) {\r\n                block = b;\r\n                block.setIndex( i );\r\n            }\r\n            return Boolean( block );\r\n        });\r\n        return block;\r\n    }\r\n    private getGuy( point: Vector ): Guy {\r\n        const guyPoint = this.guy.getPoint();\r\n        const guySize = this.guy.getSize();\r\n\r\n        if ( isNear( point, guyPoint, guySize ) &&\r\n             isCollision( point, guyPoint, guySize ) ) {\r\n                 return this.guy;\r\n             }\r\n    }\r\n    private endGame( message: string, success: boolean ): void {\r\n        clearInterval( this.updateInterval );\r\n        this.levelEnded = true;\r\n        this.levelSelector.show( message, success );\r\n        this.destroy();\r\n    }\r\n    private stop(): void {\r\n        this.modal.show( 'Game Paused', this.start.bind( this ) );\r\n        this.isPaused = true;\r\n        clearInterval( this.updateInterval );\r\n    }\r\n    private isGameEnded(): boolean {\r\n        let msg: string;\r\n        let done: boolean = false;\r\n        let success: boolean;\r\n        if ( this.option === PlayerTypes.defender ) {\r\n            if ( this.renderedBlocks.length === 0 ) {\r\n                msg = 'Level Complete!';\r\n                success = true;\r\n                done = true;\r\n            } else if ( this.balls.length === 0 ) {\r\n                msg = 'Level Failed!';\r\n                success = false;\r\n                done = true;\r\n            }\r\n        } else if ( this.option === PlayerTypes.capture ) {\r\n            if ( this.renderedBlocks.length === 0 ) {\r\n                msg = 'Level Failed!';\r\n                success = false;\r\n                done = true;\r\n            } else if ( this.balls.length === 0 ) {\r\n                msg = 'Level Complete!';\r\n                success = true;\r\n                done = true;\r\n            }\r\n        }\r\n        if ( done ) this.endGame( msg, success );\r\n        return done;\r\n    }\r\n    private update(): void {\r\n        if ( this.isGameEnded() ) {\r\n            UserScore.setScore( this.levelNumber, this.option, this.score );\r\n            return;\r\n        } else {\r\n            this.updateBalls();\r\n            this.updateBullets();\r\n            this.updateRewards();\r\n            this.dispatchActions();\r\n            this.updateAI();\r\n        }\r\n    }\r\n    private updateScore(): void {\r\n        if ( this.option === PlayerTypes.defender ) {\r\n            this.score += 5;\r\n        } else if ( this.option === PlayerTypes.capture ) {\r\n            this.score -= 5;\r\n        }\r\n        this.statusBar.updateScore( this.score );\r\n    }\r\n    private applyReward( reward: RewardEnum, what: PlayerTypes ): void {\r\n        if ( what === this.option ) this.statusBar.addReward( reward );\r\n        if ( what === PlayerTypes.defender ) {\r\n            this.paddle.applyReward( reward );\r\n        } else if ( what === PlayerTypes.capture ) {\r\n            this.guy.applyReward( reward );\r\n        }\r\n    }\r\n    private updateRewards(): void {\r\n        let toDelete: Array<number> = [];\r\n        let offset: number = 0;\r\n        this.rewards.forEach( ( reward: Reward, index: number ) => {\r\n            const nxtPos = reward.getNextPosition();\r\n            const paddlePos: Vector = this.paddle.getPoint();\r\n            const paddleSize: Size = this.paddle.getSize();\r\n\r\n            if ( nxtPos.y >= this.size.height ) {\r\n                toDelete.push( index );\r\n                reward.destroy();\r\n            } else if ( isCollision( nxtPos, paddlePos, paddleSize ) ) {\r\n                this.applyReward( reward.rewardType, PlayerTypes.defender );\r\n                toDelete.push( index );\r\n                reward.destroy();\r\n            } else {\r\n                reward.updateDOMPosition( nxtPos );\r\n            }\r\n        });\r\n        toDelete.forEach( ( idx: number ) => {\r\n            this.rewards.splice( idx + offset, 1 );\r\n            offset -= 1;\r\n        });\r\n    }\r\n    private updateBullets(): void {\r\n        let bulletsToDelete: Array<number> = [];\r\n        let offset: number = 0;\r\n        this.bullets.forEach(function( bullet: Bullet, index: number ) {\r\n            const speed: number = bullet.getSpeed( true );\r\n            let blockStrength: number;\r\n            let bulletStrength: number;\r\n            let nxtPos: Vector;\r\n            let curPos: Vector;\r\n            let hitBlockX: boolean;\r\n            let hitBlockY: boolean;\r\n            let block: Block;\r\n\r\n            for ( let indexSpeed = 0; indexSpeed < speed; indexSpeed++ ) {\r\n                block = null;\r\n                nxtPos = bullet.getNextPosition();\r\n                curPos = bullet.getPoint();\r\n                hitBlockX = hitBlockY = false;\r\n                if ( bullet.isDestroyed ) {\r\n                    bulletsToDelete.push( index );\r\n                    return;\r\n                }\r\n                // check if it went off screen\r\n                if ( nxtPos.x < 0 || nxtPos.x > this.size.width ||\r\n                     nxtPos.y < 0 || nxtPos.y >= this.size.height\r\n                    ) {\r\n                    bulletsToDelete.push( index );\r\n                    // TODO: make sure it gets deleted, don't want a memory leak\r\n                    bullet.destroy();\r\n                    return;\r\n                }\r\n\r\n                // check if block in front of x path\r\n                block = this.getBlock( { x: nxtPos.x, y: curPos.y } );\r\n                if ( block ) {\r\n                    hitBlockX = true;\r\n                    blockStrength = block.getStrength();\r\n                    bulletStrength = bullet.getStrength();\r\n                    if (block.getHit( bulletStrength ) <= 0) {\r\n                        this.destroyBlock( block.index );\r\n                    } else {\r\n                        block.setIndex( -1 );\r\n                    }\r\n                }\r\n\r\n                // check if ball in front of y path\r\n                block = this.getBlock( { x: curPos.x, y: nxtPos.y } );\r\n                if ( block ) {\r\n                    hitBlockY = true;\r\n                    blockStrength = block.getStrength();\r\n                    bulletStrength = bullet.getStrength();\r\n                    bullet.getHit( blockStrength );\r\n                    if (block.getHit( bulletStrength ) === 0) {\r\n                        this.destroyBlock( block.index );\r\n                    } else {\r\n                        block.setIndex( -1 );\r\n                    }\r\n                }\r\n                // check if ball in front of xy path (corner hit)\r\n                if ( !hitBlockX && !hitBlockY ) {\r\n                    block = this.getBlock( nxtPos );\r\n                    if (block) {\r\n                        blockStrength = block.getStrength();\r\n                        bulletStrength = bullet.getStrength();\r\n                        bullet.getHit( blockStrength );\r\n                        if (block.getHit( bulletStrength ) === 0) {\r\n                            this.destroyBlock( block.index );\r\n                        } else {\r\n                            block.setIndex( -1 );\r\n                        }\r\n                    }\r\n                }\r\n                bullet.update();\r\n            }\r\n        }, this);\r\n        bulletsToDelete.forEach( ( idx: number ) => {\r\n            this.bullets.splice( idx + offset, 1 );\r\n            offset -= 1;\r\n        });\r\n    }\r\n    private updateBalls(): void {\r\n        let ballsToDelete: Array<number> = [];\r\n        let offset: number = 0;\r\n        const paddlePos: Vector = this.paddle.getPoint();\r\n        const paddleSize: Size = this.paddle.getSize();\r\n        this.balls.forEach( function( ball: Ball, index: number ) {\r\n            const radius = ball.getRadius();\r\n            let nxtPos: Vector = ball.getNextPosition();\r\n            let hitBlockX: boolean;\r\n            let hitBlockY: boolean;\r\n            let block: Block|Guy;\r\n            let candidatPoint: Vector;\r\n\r\n            // check if it side wall\r\n            if ( nxtPos.x - radius < 0 || nxtPos.x + radius > this.size.width ) {\r\n                ball.invertTraj( 'x' );\r\n            }\r\n            // check if hit top wall or paddle\r\n            if ( nxtPos.y - radius < 0 || isCollision( nxtPos, paddlePos, paddleSize ) ) {\r\n                ball.invertTraj( 'y' );\r\n            }\r\n            // check if fell off screen\r\n            if ( nxtPos.y + radius >= this.size.height ) {\r\n                ballsToDelete.push( index );\r\n                // TODO: make sure it gets deleted, don't want a memory leak\r\n                ball.destroy();\r\n                return;\r\n            }\r\n\r\n            // check if ball in front of x path\r\n            nxtPos = ball.getNextPosition();\r\n            candidatPoint = { x: nxtPos.x, y: ball.point.y };\r\n            block = this.getBlock( candidatPoint ) || this.getGuy( candidatPoint );\r\n            if ( block ) {\r\n                this.updateScore();\r\n                hitBlockX = true;\r\n                ball.invertTraj( 'x' );\r\n                // TODO: different strength for balls\r\n                if (block.getHit( 1 ) === 0) {\r\n                    this.destroyBlock( block.index );\r\n                } else {\r\n                    block.setIndex( -1 );\r\n                }\r\n            }\r\n\r\n            // check if ball in front of y path\r\n            nxtPos = ball.getNextPosition();\r\n            candidatPoint = { x: ball.point.x, y: nxtPos.y };\r\n            block = this.getBlock( candidatPoint ) || this.getGuy( candidatPoint );\r\n            if ( block ) {\r\n                this.updateScore();\r\n                hitBlockY = true;\r\n                ball.invertTraj( 'y' );\r\n                if (block.getHit( 1 ) === 0) {\r\n                    this.destroyBlock( block.index );\r\n                } else {\r\n                    block.setIndex( -1 );\r\n                }\r\n            }\r\n            // check if ball in front of xy path (corner hit)\r\n            if ( !hitBlockX && !hitBlockY ) {\r\n                block = this.getBlock( nxtPos ) || this.getGuy( nxtPos );\r\n                if ( block ) {\r\n                    ball.invertTraj( 'y' );\r\n                    ball.invertTraj( 'x' );\r\n                    if (block.getHit( 1 ) === 0) {\r\n                        this.destroyBlock( block.index );\r\n                    } else {\r\n                        block.setIndex( -1 );\r\n                    }\r\n                }\r\n            }\r\n            nxtPos = ball.getNextPosition();\r\n            ball.updateDOMPosition( nxtPos );\r\n        }, this);\r\n        ballsToDelete.forEach( ( idx: number ) => {\r\n            this.balls.splice( idx + offset, 1 );\r\n            offset -= 1;\r\n        });\r\n    }\r\n    private keyUpDownHandler( e: KeyboardEvent ): void {\r\n        let isKeyDown: boolean = e.type === 'keydown';\r\n        this.activeKeys.set( e.keyCode, isKeyDown );\r\n    }\r\n    private globalKeyListener( e: KeyboardEvent ): void {\r\n        if ( e.keyCode === 27 && this.levelEnded === false ) {\r\n            this.pauseGame();\r\n        }\r\n    }\r\n    private dispatchActions(): void {\r\n        this.activeKeys.forEach( ( value: boolean, key: number ): void => {\r\n            if ( value ) {\r\n                switch ( key ) {\r\n                    case 65:\r\n                    case 37:\r\n                        this.onKeyLeft();\r\n                        break;\r\n                    case 68:\r\n                    case 39:\r\n                        this.onKeyRight();\r\n                        break;\r\n                    case 38:\r\n                    case 87:\r\n                        this.onKeyUp();\r\n                        break;\r\n                    case 40:\r\n                    case 83:\r\n                        this.onKeyDown();\r\n                        break;\r\n                    case 32:\r\n                        this.onSpaceBar();\r\n                        break;\r\n                    default: break;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    private onKeyUp(): void {\r\n        this.player.moveUp();\r\n    }\r\n    private onKeyDown(): void {\r\n        this.player.moveDown();\r\n    }\r\n    private onKeyLeft(): void {\r\n        this.player.moveLeft();\r\n    }\r\n    private onKeyRight(): void {\r\n        this.player.moveRight();\r\n    }\r\n    private onSpaceBar(): void {\r\n        this.player.useReward();\r\n    }\r\n    private updateAI(): void {\r\n        AI.makeMove(\r\n            this.ai,\r\n            this.balls,\r\n            this.rewards,\r\n            this.size\r\n        );\r\n    }\r\n    private pauseGame(): void {\r\n        if ( this.isPaused ) {\r\n            this.start();\r\n        } else {\r\n            this.stop();\r\n        }\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ../node_modules/source-map-loader!./GameBoard/GameBoard.ts","import { SVGNAMESPACE } from './Constants';\r\nimport Vector from '../interfaces/Vector';\r\nimport Trajectory from './Trajectory';\r\nimport ballConfig from '../interfaces/BallConfig';\r\nimport Entity from './Entity';\r\n\r\nexport default class Ball extends Entity {\r\n\r\n    constructor( ballConfig: ballConfig, mountNode: SVGElement ) {\r\n        super( ballConfig.point, ballConfig.radius, ballConfig.trajectory, 'circle', mountNode );\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/source-map-loader!./GameBoard/Ball.ts","import Vector  from '../interfaces/Vector';\r\nexport default class Trajectory {\r\n    public x: number;\r\n    public y: number;\r\n    constructor( point: Vector ) {\r\n        this.x = point.x;\r\n        this.y = point.y;\r\n    }\r\n    public invert( axis: 'x'|'y' ) {\r\n        this[axis] = this[axis] * -1;\r\n    }\r\n    public speed( val: number ) {\r\n        this.x = this.x > 0 ? this.x + val : this.x - val;\r\n        this.y = this.y > 0 ? this.y + val : this.y - val;\r\n    }\r\n    public getSpeed( abs: Boolean ): number {\r\n        let hyp: number = Math.hypot( this.x, this.y );\r\n        return abs ? Math.abs( hyp ) : hyp;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ../node_modules/source-map-loader!./GameBoard/Trajectory.ts","import BlockConfig from '../interfaces/BlockConfig';\r\nimport Reward from '../interfaces/Reward';\r\nimport Entity from './Entity';\r\n\r\n// TODO:\r\n// -- blocks that drop rewards\r\n// -- animations on hit\r\n\r\nexport default class Block extends Entity {\r\n\r\n    public index: number;\r\n    private strength: number;\r\n    private reward: Reward;\r\n    private dropReward: Function;\r\n\r\n    public constructor( config: BlockConfig, mountNode: SVGElement, dropReward: Function ) {\r\n        const attributes = {\r\n            'fill': Block.getBlockColor( config.strength ),\r\n            'stroke': 'black',\r\n            'stroke-width': '0.5'\r\n        };\r\n        super( config.point, config.size, { x: 0, y: 0 }, 'rect', mountNode, attributes );\r\n        if ( config.strength ) {\r\n            this.strength = config.strength;\r\n        } else {\r\n            this.strength = 1;\r\n        }\r\n        this.dropReward = dropReward;\r\n        this.reward = config.reward;\r\n        this.index = -1;\r\n    }\r\n    public setIndex( index: number ) {\r\n        this.index = index;\r\n    }\r\n    public getStrength(): number {\r\n        return this.strength;\r\n    }\r\n    public getHit( strength: number ): number {\r\n        this.strength -= strength;\r\n        this.updateColor();\r\n        if ( this.strength <= 0 ) {\r\n            if ( this.reward > -1) {\r\n                this.dropReward( this.point, this.reward );\r\n            }\r\n            this.destroy();\r\n        }\r\n        return this.strength;\r\n    }\r\n    private updateColor(): void {\r\n        this.domElement.setAttribute( 'fill', Block.getBlockColor( this.strength ) );\r\n    }\r\n    private static getBlockColor( strength: number ): string {\r\n        switch ( strength ) {\r\n            case 7: return '#FF0D72';\r\n            case 6: return '#0DC2FF';\r\n            case 5: return '#0DFF72';\r\n            case 4: return '#F538FF';\r\n            case 3: return '#FF8E0D';\r\n            case 2: return '#FFE138';\r\n            default:\r\n            case 1: return '#3877FF';\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/source-map-loader!./GameBoard/Block.ts","import Paddle from './Paddle';\r\nimport Guy from './Guy';\r\nimport Ball from './Ball';\r\nimport Reward from './Reward';\r\nimport Entity from './Entity';\r\nimport { isCollision } from './CollisionUtil';\r\n\r\nimport Vector from '../interfaces/Vector';\r\nimport Size from '../interfaces/Size';\r\n\r\n/**\r\n * TODO: scoring for the AI\r\n *  each paddle move is bad\r\n *  each power up use is bad\r\n *  each power up switch is bad\r\n *  each ball drop is bad\r\n */\r\n\r\nfunction makeMove( ai: Paddle|Guy, balls: Array<Ball>, rewards: Array<Reward>, size: Size ): void {\r\n    if ( ai instanceof Paddle ) {\r\n        makePaddleMove( ai, balls, rewards, size );\r\n    } else if ( ai instanceof Guy ) {\r\n        makeGuyMove( ai, balls, size );\r\n    }\r\n}\r\nfunction likelyToFallFirst( a: Entity, b: Entity ): -1|0|1 {\r\n    const aTraj = a.getTraj();\r\n    const bTraj = b.getTraj();\r\n    const aY = a.getPoint().y;\r\n    const bY = b.getPoint().y;\r\n\r\n    // if only one is heading down return that one\r\n    if ( aTraj.y > 0 && bTraj.y < 0) return -1;\r\n    if ( bTraj.y > 0 && aTraj.y < 0) return 1;\r\n\r\n    // if both are heading down return the lower one\r\n    if ( bTraj.y > 0 && aTraj.y > 0) return aY > bY ? -1 : 1;\r\n\r\n    // if both are heading up return the higher one\r\n    if ( bTraj.y < 0 && aTraj.y < 0) return aY > bY ? 1 : -1;\r\n\r\n    // default case\r\n    return -1;\r\n}\r\nfunction catchable( entity: Entity, paddle: Paddle, size: Size ): boolean {\r\n    const paddleSize: Size = paddle.getSize();\r\n    const dropPoint: Vector = getEntityDropPoint( entity, size, paddleSize.height );\r\n    if ( !isLeft( dropPoint, paddle) && !isRight( dropPoint, paddle ) ) return true;\r\n    const movesTillDrop: number = getMovesTillDrop( entity, size.height, paddleSize.height );\r\n    const nearestPaddlePoint: number = dropPoint.x > paddle.point.x ? paddle.point.x + paddleSize.width : paddle.point.x;\r\n    const distance: number = Math.abs( nearestPaddlePoint - dropPoint.x );\r\n    return ( paddle.moveAmount * movesTillDrop ) > distance;\r\n}\r\nfunction makePaddleMove( paddle: Paddle, balls: Array<Ball>, rewards: Array<Reward>, size: Size ): void {\r\n    // TODO: don't always try to use reward\r\n    paddle.useReward();\r\n    const entitiesToGoFor: Array<Entity> = balls//.concat( rewards )\r\n        .filter( e => catchable( e, paddle, size ) )\r\n        .sort( likelyToFallFirst );\r\n    movePaddleToEntity(\r\n        paddle,\r\n        entitiesToGoFor,\r\n        size\r\n    );\r\n}\r\nfunction getHighestEntity( entities: Array<Entity> ): Entity {\r\n    let highestEntity: Entity = entities[0];\r\n    entities.forEach( entity => {\r\n        if ( highestEntity.point.y > entity.point.y )\r\n            highestEntity = entity;\r\n    });\r\n    return highestEntity;\r\n}\r\nfunction getLowestEntity( entities: Array<Entity> ): Entity {\r\n    let lowestEntity: Entity = entities[0];\r\n    entities.forEach( entity => {\r\n        if ( lowestEntity.point.y < entity.point.y )\r\n            lowestEntity = entity;\r\n    });\r\n    return lowestEntity;\r\n}\r\nfunction movePaddleToEntity( paddle: Paddle, entities: Array<Entity>, size: Size ): void {\r\n    if ( entities.length === 0 ) return;\r\n    const paddleHeight: number = paddle.getSize().height;\r\n    const onlyOneLeft: boolean = entities.length === 1;\r\n    const nxtPoint: Vector = getEntityDropPoint( entities[0], size, paddleHeight );\r\n    const nxtNxtPoint: Vector = onlyOneLeft ? nxtPoint : getEntityDropPoint( entities[1], size, paddleHeight );\r\n    if ( isLeft( nxtPoint, paddle ) || canAndShouldMoveLeft( nxtNxtPoint, nxtPoint, paddle ) ) {\r\n        paddle.moveLeft();\r\n    } else if ( isRight( nxtPoint, paddle ) || canAndShouldMoveRight( nxtNxtPoint, nxtPoint, paddle ) ) {\r\n        paddle.moveRight();\r\n    }\r\n}\r\n\r\n// function getNextMove( entity: Entity, dropPoint: Vector ): Entity {\r\n//     const traj: Vector = entity.getTraj();\r\n//     return new Entity (\r\n//         dropPoint,\r\n//         entity.getSize(),\r\n//         { x:traj.x, y: traj.y * -1 },\r\n//         'circle',\r\n//         SVGElement.prototype\r\n//     );\r\n// }\r\n\r\nfunction canAndShouldMoveLeft( candidate: Vector, current: Vector, paddle: Paddle): boolean {\r\n    return isLeft( candidate, paddle ) &&\r\n           isCollision( current,\r\n                        { x: paddle.nextLeft(), y: paddle.point.y },\r\n                        paddle.getSize()\r\n           );\r\n}\r\n\r\nfunction canAndShouldMoveRight( candidate: Vector, current: Vector, paddle: Paddle ): boolean {\r\n    return isRight( candidate, paddle ) &&\r\n           isCollision( current,\r\n                        { x: paddle.nextRight(), y: paddle.point.y },\r\n                        paddle.getSize()\r\n           );\r\n}\r\n\r\nfunction getMovesTillDrop( entity: Entity, boardHeight: number, paddleHeight: number ): number {\r\n    const traj: Vector = entity.getTraj();\r\n    const movesUpAndDown: number = traj.y > 0 ? 0 : 2 * entity.point.y;\r\n    const movesTillPaddle: number = boardHeight - paddleHeight - entity.point.y;\r\n    return ( movesUpAndDown + movesTillPaddle) / Math.abs( traj.y );\r\n}\r\nfunction getEntityDropPoint( entity: Entity, boardSize: Size, paddleHeight: number ): Vector {\r\n    // naive algorithm that ignores blocks\r\n    const traj: Vector = entity.getTraj();\r\n    const point: Vector = entity.getPoint();\r\n    const movesTillHit: number = getMovesTillDrop( entity, boardSize.height, paddleHeight );\r\n    let xCoord: number = point.x + ( traj.x * movesTillHit );\r\n    const xOverFlow: number = xCoord - boardSize.width;\r\n\r\n    if ( xOverFlow > 0 ) {\r\n        xCoord -= xOverFlow * 2;\r\n    }\r\n\r\n    return {\r\n        x: Math.abs( xCoord ),\r\n        y: boardSize.height - paddleHeight - 0.5\r\n    };\r\n}\r\nfunction isLeft( point: Vector, paddle: Paddle ): boolean {\r\n    return point.x <= paddle.point.x;\r\n}\r\nfunction isRight( point: Vector, paddle: Paddle): boolean {\r\n    return point.x >= paddle.point.x + paddle.getSize().width - 1;\r\n}\r\nfunction makeGuyMove( guy: Guy, balls: Array<Ball>, size: Size ): void {\r\n\r\n}\r\nexport default {\r\n    makeMove\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/source-map-loader!./GameBoard/AI.ts","enum Reward {\r\n    'none',\r\n    'rocket',\r\n    'machine',\r\n    'wide'\r\n}\r\n\r\nexport default Reward;\r\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/source-map-loader!./interfaces/Reward.ts","import { SVGNAMESPACE } from './Constants';\r\nimport Entity from './Entity';\r\nimport Size from '../interfaces/Size';\r\nimport Trajectory from './Trajectory';\r\nimport Vector from '../interfaces/Vector';\r\n\r\nexport default class Bullet extends Entity {\r\n\r\n    private strength: number;\r\n    public isDestroyed: Boolean;\r\n\r\n    constructor( point: Vector, size: Size, mountNode: SVGElement ) {\r\n        const attributes = {\r\n            'fill': 'red',\r\n            'stroke': 'black',\r\n            'stroke-width': '0.5'\r\n        };\r\n        super( point, size, { x: 0, y: -9 }, 'rect', mountNode, attributes );\r\n        this.strength = 1;\r\n\r\n        this.isDestroyed = false;\r\n    }\r\n    public getNextPosition(): Vector {\r\n        return {\r\n            x: this.point.x + Math.sign(this.traj.x),\r\n            y: this.point.y + Math.sign(this.traj.y)\r\n        };\r\n    }\r\n    public getStrength(): number {\r\n        return this.strength;\r\n    }\r\n    public getHit( strength: number ): number {\r\n        this.strength -= strength;\r\n        if (this.strength <= 0) {\r\n            this.destroy();\r\n        }\r\n        return this.strength;\r\n    }\r\n    public getSpeed( abs: Boolean ): number {\r\n        return this.traj.getSpeed( abs );\r\n    }\r\n    public update(): void {\r\n        this.point = this.getNextPosition();\r\n        this.updateDOMPosition();\r\n    }\r\n    public destroy(): void {\r\n        // TODO: add some cool animations on destroy\r\n        this.isDestroyed = true;\r\n        this.mountNode.removeChild(this.domElement);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ../node_modules/source-map-loader!./GameBoard/Bullet.ts","import RewardEnum from '../../interfaces/Reward';\r\nimport Loader from '../../Loader';\r\n\r\nexport default class StatusBar {\r\n    private mountNode: HTMLElement;\r\n    private domElement: HTMLDivElement;\r\n    private score: Element;\r\n    private rewards: Element;\r\n    private rewardSelect: Function;\r\n\r\n    constructor( rewardSelect: Function, levelName: number, mountNode: HTMLElement ) {\r\n        Loader.css( 'StatusBar' );\r\n        this.rewardSelect = rewardSelect;\r\n        this.mountNode = mountNode;\r\n        this.domElement = document.createElement( 'div' );\r\n        this.domElement.classList.add( 'status-bar' );\r\n        this.domElement.innerHTML = StatusBar.getInnerHTML( String ( levelName ) );\r\n        this.score = this.domElement.querySelector( `#${StatusBar.ID.SCORE}` );\r\n        this.rewards = this.domElement.querySelector( `#${StatusBar.ID.REWARDS}` );\r\n\r\n        mountNode.appendChild( this.domElement );\r\n    }\r\n\r\n    public updateScore( score: number ): void {\r\n        this.score.innerHTML = String( score );\r\n    }\r\n\r\n    private static ID = {\r\n        SCORE: 'score',\r\n        REWARDS: 'rewards',\r\n        SELECTED: 'selected'\r\n    };\r\n\r\n    private static getInnerHTML( levelName: string ): string {\r\n        return `\r\n            <h3>Level ${levelName}</h3>\r\n            <h4>Score: <span id='${StatusBar.ID.SCORE}'></span></h4>\r\n            <div id='${StatusBar.ID.REWARDS}'></div>\r\n        `;\r\n    }\r\n\r\n    private removeSelection(): void {\r\n        const selected: Element = this.rewards.querySelector(`#${StatusBar.ID.SELECTED}`);\r\n        if ( selected ) {\r\n            selected.id = '';\r\n        }\r\n    }\r\n\r\n    public addReward( reward: RewardEnum ): void {\r\n        this.removeSelection();\r\n        const node = document.createElement( 'div' );\r\n        node.onclick = () => {\r\n            this.rewardSelect( reward );\r\n            this.removeSelection();\r\n            node.id = StatusBar.ID.SELECTED;\r\n        };\r\n        node.id = StatusBar.ID.SELECTED;\r\n        node.innerHTML = String ( reward );\r\n        this.rewards.appendChild( node );\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/source-map-loader!./GameBoard/StatusBar/StatusBar.ts","import RewardEnum from '../interfaces/Reward';\r\nimport Entity from './Entity';\r\nimport Vector from '../interfaces/Vector';\r\n\r\nexport default class Reward extends Entity {\r\n    public rewardType: RewardEnum;\r\n\r\n    constructor( start: Vector, rewardType: RewardEnum, mountNode: SVGElement ) {\r\n        super( start,\r\n               { width: 3, height: 3 },\r\n               { x: 0, y: 1 },\r\n               'rect',\r\n               mountNode );\r\n        this.rewardType = rewardType;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/source-map-loader!./GameBoard/Reward.ts","import Modal from '../Modal';\r\nimport UserScore from '../UserScore/UserScore';\r\nimport LevelThumbNails from './LevelThumbNails';\r\nimport Overview from './Overview';\r\nimport PlayerTypes from '../interfaces/PlayerTypes';\r\nimport Loader from '../Loader';\r\n\r\n\r\nexport default class LevelSelector {\r\n\r\n    private modal: Modal;\r\n    private cb: Function;\r\n    private levelThumbNails: LevelThumbNails;\r\n    private overview: Overview;\r\n\r\n    private static defaultMessage: string = 'Choose a level';\r\n\r\n    constructor( cb: Function ) {\r\n        Loader.css( 'LevelSelector' );\r\n        this.cb = cb;\r\n        this.modal = new Modal( false );\r\n        this.levelThumbNails = new LevelThumbNails( this.modal.extensionPoint, this.levelSelect.bind( this ) );\r\n        this.overview = new Overview( this.modal.extensionPoint, this.startLevel.bind( this ) );\r\n    }\r\n\r\n    private levelSelect( level: number ): void {\r\n        const defenderScore: number = UserScore.getScore( level, PlayerTypes.defender );\r\n        const captureScore: number = UserScore.getScore( level, PlayerTypes.capture );\r\n        this.overview.update({\r\n            level: String( level ),\r\n            defender: defenderScore,\r\n            capture: captureScore\r\n        });\r\n    }\r\n\r\n    public show( message?: string, success?: Boolean ): void {\r\n        message = message ? message + LevelSelector.defaultMessage : LevelSelector.defaultMessage;\r\n        this.modal.show( message );\r\n    }\r\n\r\n    private startLevel( levelNumber: number, option: PlayerTypes ): void {\r\n        Loader.level( String( levelNumber ) )\r\n            .then( level => this.cb( level, levelNumber, option ) )\r\n            .catch( console.warn )\r\n            .then( () => this.modal.hide() );\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/source-map-loader!./LevelSelector/LevelSelector.ts","import UserScore from '../UserScore/UserScore';\r\nimport AllLevels from './levels/AllLevels';\r\nimport Loader from '../Loader';\r\n\r\nexport default class LevelThumbNails {\r\n    private mountNode: HTMLElement;\r\n    private levelSelectCB: Function;\r\n\r\n    constructor( mountNode: HTMLElement, levelSelectCB: Function ) {\r\n        Loader.css( 'LevelThumbNail' );\r\n        this.mountNode = mountNode;\r\n        this.levelSelectCB = levelSelectCB;\r\n\r\n        const domNode: HTMLDivElement = document.createElement( 'div' );\r\n        domNode.classList.add( 'level-thumbnails' );\r\n        this.attachLevelNodes( domNode );\r\n        this.mountNode.appendChild( domNode );\r\n    }\r\n\r\n    private attachLevelNodes( mountNode: HTMLDivElement ): void {\r\n        let prevLevelComplete: Boolean = true;\r\n        AllLevels.forEach( ( level, i ) => {\r\n            const levelNode: HTMLSpanElement = document.createElement('span');\r\n            const levelScore: number = UserScore.getScore( i );\r\n            const levelComplete: Boolean = levelScore >= level.minScore;\r\n            let thumbNailSrc = '';\r\n\r\n            levelNode.classList.add('level-node');\r\n            if ( levelComplete || prevLevelComplete ) {\r\n                levelNode.addEventListener('click', () => {\r\n                    const prev = mountNode.querySelector( '#selected' );\r\n                    if ( prev ) prev.id = '';\r\n                    levelNode.id = 'selected';\r\n                    this.levelSelectCB( i );\r\n                });\r\n                levelNode.classList.add('allowed');\r\n            } else {\r\n                levelNode.classList.add('locked');\r\n            }\r\n            if ( levelComplete ) {\r\n                thumbNailSrc = 'completed.png';\r\n            } else if ( prevLevelComplete ) {\r\n                thumbNailSrc = level.src;\r\n            } else {\r\n                thumbNailSrc = 'locked.png';\r\n            }\r\n            levelNode.innerHTML = LevelThumbNails.levelTemplate( thumbNailSrc, String( i ) );\r\n            mountNode.appendChild( levelNode );\r\n            prevLevelComplete = levelComplete;\r\n        });\r\n    }\r\n\r\n    private static levelTemplate( src: string, level: string ): string {\r\n        return `\r\n            <img width='48px' height='48px' src=${src} />\r\n            <p>${level}</p>\r\n        `;\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/source-map-loader!./LevelSelector/LevelThumbNails.ts","const AllLevels = [\r\n    { minScore: 100, src: 'thumbnail.png' },\r\n    { minScore: 200, src: 'thumbnail.png' }\r\n];\r\n\r\nexport default AllLevels;\n\n\n// WEBPACK FOOTER //\n// ../node_modules/source-map-loader!./LevelSelector/levels/AllLevels.ts","import PlayerTypes from '../interfaces/PlayerTypes';\r\n\r\ninterface Details {\r\n    level: string;\r\n    defender: number;\r\n    capture: number;\r\n}\r\n\r\nexport default class Overview {\r\n    private startLevel: Function;\r\n\r\n    private levelNumber: HTMLHeadingElement;\r\n    private defenderHighScore: Element;\r\n    private captureHighScore: Element;\r\n\r\n    private captureOption: Element;\r\n    private defenderOption: Element;\r\n    private startButton: Element;\r\n\r\n    private level: number;\r\n    private option: PlayerTypes;\r\n\r\n    constructor( mountNode: HTMLElement, startLevel: Function ) {\r\n        this.startLevel = startLevel;\r\n\r\n        const domNode: Element = document.createElement('div');\r\n        domNode.classList.add( 'level-overview' );\r\n        domNode.innerHTML = Overview.template;\r\n        this.levelNumber = domNode.getElementsByTagName( 'h3' )[0];\r\n        this.defenderHighScore = domNode.querySelector( `#${Overview.ID.DEFENDER}-highscore` );\r\n        this.captureHighScore = domNode.querySelector( `#${Overview.ID.CAPTURE}-highscore` );\r\n        this.defenderOption = domNode.getElementsByClassName( `${Overview.ID.DEFENDER}-option` )[0];\r\n        this.captureOption = domNode.getElementsByClassName( `${Overview.ID.CAPTURE}-option` )[0];\r\n        this.startButton = domNode.querySelector( `#${Overview.ID.START}` );\r\n        this.addEventListeners();\r\n\r\n        mountNode.appendChild( domNode );\r\n    }\r\n\r\n    private static ID = {\r\n        DEFENDER: 'defender',\r\n        CAPTURE: 'capture',\r\n        START: 'start'\r\n    };\r\n\r\n    private static template =  `\r\n        <h3>Level</h3>\r\n        <div class='character-selector'>\r\n            <div class='option ${Overview.ID.DEFENDER}-option'>\r\n                <h5>Defender</h5>\r\n                <h5 id='${Overview.ID.DEFENDER}-highscore'>Highscore:</h5>\r\n            </div>\r\n            <div class='option ${Overview.ID.CAPTURE}-option'>\r\n                <h5>Capture the Flag</h5>\r\n                <h5 id='${Overview.ID.CAPTURE}-highscore'>Highscore:</h5>\r\n            </div>\r\n        </div>\r\n        <button id='${Overview.ID.START}'>START</button>\r\n    `;\r\n\r\n    private addEventListeners(): void {\r\n        this.defenderOption.addEventListener(\r\n            'click',\r\n            () => this.setOption( PlayerTypes.defender ) );\r\n        this.captureOption.addEventListener(\r\n            'click',\r\n            () => this.setOption( PlayerTypes.capture ) );\r\n        this.startButton.addEventListener( 'click', () => this.startLevel( this.level, this.option ) );\r\n    }\r\n\r\n    private setOption( option: PlayerTypes ) {\r\n        if ( option === PlayerTypes.defender ) {\r\n            this.defenderOption.classList.add( 'selected' );\r\n            this.captureOption.classList.remove( 'selected' );\r\n        } else if ( option === PlayerTypes.capture ) {\r\n            this.defenderOption.classList.remove( 'selected' );\r\n            this.captureOption.classList.add( 'selected' );\r\n        }\r\n        this.option = option;\r\n    }\r\n\r\n    public update( details: Details ): void {\r\n        this.level = +details.level;\r\n        this.levelNumber.innerHTML = `Level: ${details.level}`;\r\n        this.defenderHighScore.innerHTML = `Highscore: ${details.defender}`;\r\n        this.captureHighScore.innerHTML = `Highscore: ${details.capture}`;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/source-map-loader!./LevelSelector/Overview.ts"],"sourceRoot":""}